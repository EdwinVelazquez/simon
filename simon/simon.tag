<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
  </compound>
  <compound kind="file">
    <name>adinrec.c</name>
    <path>/home/anash/simon/simonsource/julius/adinrec/</path>
    <filename>adinrec_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>adinrec_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adintool.c</name>
    <path>/home/anash/simon/simonsource/julius/adintool/</path>
    <filename>adintool_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAXCONNECTION</name>
      <anchorfile>adintool_8c.html</anchorfile>
      <anchor>a1b07a3f8e9d50202d5281979bbb57e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_status</name>
      <anchorfile>adintool_8c.html</anchorfile>
      <anchor>a9278ba8adaf26a9a81d7eb5542a0b61c</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>adintool_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dfa_determinize.c</name>
    <path>/home/anash/simon/simonsource/julius/gramtools/dfa_determinize/</path>
    <filename>dfa__determinize_8c</filename>
    <class kind="struct">__stateq__</class>
    <class kind="struct">__arc__</class>
    <member kind="typedef">
      <type>struct __stateq__</type>
      <name>STATEQ</name>
      <anchorfile>dfa__determinize_8c.html</anchorfile>
      <anchor>a48029e91e831e72acb584604566162ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __arc__</type>
      <name>STATEQ_ARC</name>
      <anchorfile>dfa__determinize_8c.html</anchorfile>
      <anchor>a7ac43db9ca677c2ef86d8006f80f77cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sput</name>
      <anchorfile>dfa__determinize_8c.html</anchorfile>
      <anchor>ab0959af10fd930eb9dc7abdbef1bcfa6</anchor>
      <arglist>(STATEQ *sq)</arglist>
    </member>
    <member kind="function">
      <type>STATEQ *</type>
      <name>snew</name>
      <anchorfile>dfa__determinize_8c.html</anchorfile>
      <anchor>a0d7a2483f43d15a09916bcbe2cab8d6d</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sfree</name>
      <anchorfile>dfa__determinize_8c.html</anchorfile>
      <anchor>a3afe92d63d5651e5fe8aeaf798efc2c2</anchor>
      <arglist>(STATEQ *sq)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>determinize</name>
      <anchorfile>dfa__determinize_8c.html</anchorfile>
      <anchor>a0cd8faea17beac5273775f1d0b5aae6e</anchor>
      <arglist>(DFA_INFO *dfa, FILE *fpout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>dfa__determinize_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dfa_minimize.c</name>
    <path>/home/anash/simon/simonsource/julius/gramtools/dfa_minimize/</path>
    <filename>dfa__minimize_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>minimize</name>
      <anchorfile>dfa__minimize_8c.html</anchorfile>
      <anchor>a57fbce2a0e165eea1eb34e8580898af8</anchor>
      <arglist>(DFA_INFO *dfa, FILE *fpout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>dfa__minimize_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>japi.h</name>
    <path>/home/anash/simon/simonsource/julius/jcontrol/</path>
    <filename>japi_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>do_connect</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>ac1c5d4a4583e2471ae6d70fe36213cf3</anchor>
      <arglist>(char *hostname, int portnum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_disconnect</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>ac0e7dd1b33f82fcee2e56133ad412c11</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_sendf</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>aa7319559d91f643e39d1d8b950df96c8</anchor>
      <arglist>(int sd, char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_send</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>ae48a0d6495f7bc68e7e7fa3f067d7672</anchor>
      <arglist>(int sd, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>do_receive</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>afcbd6eb89bf45265c30fb875c84aa6a2</anchor>
      <arglist>(int sd, char *buf, int maxlen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_die</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>a70024f7b8b4ce6cd4a4eafd215295db3</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_get_version</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>ae810aea1141540f055f049ba93c181d1</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_get_status</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>ab8b14534ea0ad7c1f5dc362185e66e60</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_pause_recog</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>a05c8f5ae71872d99a32e0f6fc1033764</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_terminate_recog</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>a382d0c6bc719a87da920eab26ac8c299</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_resume_recog</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>ad9a42850d944ef8d571eb5bab6eb1562</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_set_input_handler_on_change</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>ad1336f7f6c2facbdaa1d0928e134f6cd</anchor>
      <arglist>(int, char *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_change_grammar</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>ae7e98cd107eeee722a632c31af78f00e</anchor>
      <arglist>(int sd, char *prefixpath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_add_grammar</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>a0a3749505c0992e285e97bbf1fde1cfa</anchor>
      <arglist>(int sd, char *prefixpath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_delete_grammar</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>a2ef254638f2808838d3508343222b0ab</anchor>
      <arglist>(int sd, char *idlist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_activate_grammar</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>a8e51a0da8d8e82f921170a261f47a3ec</anchor>
      <arglist>(int sd, char *idlist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_deactivate_grammar</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>a1431750fc68731cd6a1ea2047fd13026</anchor>
      <arglist>(int sd, char *idlist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_sync_grammar</name>
      <anchorfile>japi_8h.html</anchorfile>
      <anchor>a62fe0cc80882b9b420027d7674539c73</anchor>
      <arglist>(int sd)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>japi_grammar.c</name>
    <path>/home/anash/simon/simonsource/julius/jcontrol/</path>
    <filename>japi__grammar_8c</filename>
    <includes id="japi_8h" name="japi.h" local="yes" imported="no">japi.h</includes>
    <member kind="function">
      <type>void</type>
      <name>japi_change_grammar</name>
      <anchorfile>japi__grammar_8c.html</anchorfile>
      <anchor>ae7e98cd107eeee722a632c31af78f00e</anchor>
      <arglist>(int sd, char *prefixpath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_add_grammar</name>
      <anchorfile>japi__grammar_8c.html</anchorfile>
      <anchor>a0a3749505c0992e285e97bbf1fde1cfa</anchor>
      <arglist>(int sd, char *prefixpath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_delete_grammar</name>
      <anchorfile>japi__grammar_8c.html</anchorfile>
      <anchor>a2ef254638f2808838d3508343222b0ab</anchor>
      <arglist>(int sd, char *idlist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_activate_grammar</name>
      <anchorfile>japi__grammar_8c.html</anchorfile>
      <anchor>a8e51a0da8d8e82f921170a261f47a3ec</anchor>
      <arglist>(int sd, char *idlist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_deactivate_grammar</name>
      <anchorfile>japi__grammar_8c.html</anchorfile>
      <anchor>a1431750fc68731cd6a1ea2047fd13026</anchor>
      <arglist>(int sd, char *idlist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_sync_grammar</name>
      <anchorfile>japi__grammar_8c.html</anchorfile>
      <anchor>a62fe0cc80882b9b420027d7674539c73</anchor>
      <arglist>(int sd)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>japi_misc.c</name>
    <path>/home/anash/simon/simonsource/julius/jcontrol/</path>
    <filename>japi__misc_8c</filename>
    <includes id="japi_8h" name="japi.h" local="yes" imported="no">japi.h</includes>
    <member kind="function">
      <type>void</type>
      <name>japi_die</name>
      <anchorfile>japi__misc_8c.html</anchorfile>
      <anchor>a2ca2d7313b99a984486f38d845f81aa8</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_get_version</name>
      <anchorfile>japi__misc_8c.html</anchorfile>
      <anchor>ae6bc08bbb98bb2040d4f72699f74bcd4</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_get_status</name>
      <anchorfile>japi__misc_8c.html</anchorfile>
      <anchor>ad07ad7f9e9e2f7a594726ec95a131d11</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_pause_recog</name>
      <anchorfile>japi__misc_8c.html</anchorfile>
      <anchor>a5a89277e4b6433fc56d1c285529a1f77</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_terminate_recog</name>
      <anchorfile>japi__misc_8c.html</anchorfile>
      <anchor>adcf813f3c016e29e1da0432d393f73f9</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_resume_recog</name>
      <anchorfile>japi__misc_8c.html</anchorfile>
      <anchor>a8747b0fa952c9816f30caa7974e17508</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>japi_set_input_handler_on_change</name>
      <anchorfile>japi__misc_8c.html</anchorfile>
      <anchor>a99b466c00a04fe400798e3a2d0369e37</anchor>
      <arglist>(int sd, char *arg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>jcontrol.c</name>
    <path>/home/anash/simon/simonsource/julius/jcontrol/</path>
    <filename>jcontrol_8c</filename>
    <includes id="japi_8h" name="japi.h" local="yes" imported="no">japi.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>strmatch</name>
      <anchorfile>jcontrol_8c.html</anchorfile>
      <anchor>a56790902b825cd9cb5fad55466bd39db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_command</name>
      <anchorfile>jcontrol_8c.html</anchorfile>
      <anchor>abcb0a72fe9e9ca88080e645e7a513690</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_output</name>
      <anchorfile>jcontrol_8c.html</anchorfile>
      <anchor>a11d5b53da1f0be45b4602961dbd6161b</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>command_loop</name>
      <anchorfile>jcontrol_8c.html</anchorfile>
      <anchor>a7470716c4f91de8db8afaf85f2f64191</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>usage</name>
      <anchorfile>jcontrol_8c.html</anchorfile>
      <anchor>a2ef30c42cbc289d899a8be5d2d8f77d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>jcontrol_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>server.c</name>
    <path>/home/anash/simon/simonsource/julius/jcontrol/</path>
    <filename>server_8c</filename>
    <includes id="japi_8h" name="japi.h" local="yes" imported="no">japi.h</includes>
    <member kind="function">
      <type>int</type>
      <name>do_connect</name>
      <anchorfile>server_8c.html</anchorfile>
      <anchor>ac1c5d4a4583e2471ae6d70fe36213cf3</anchor>
      <arglist>(char *hostname, int portnum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_disconnect</name>
      <anchorfile>server_8c.html</anchorfile>
      <anchor>ac0e7dd1b33f82fcee2e56133ad412c11</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_sendf</name>
      <anchorfile>server_8c.html</anchorfile>
      <anchor>aa7319559d91f643e39d1d8b950df96c8</anchor>
      <arglist>(int sd, char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_send</name>
      <anchorfile>server_8c.html</anchorfile>
      <anchor>ae48a0d6495f7bc68e7e7fa3f067d7672</anchor>
      <arglist>(int sd, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>do_receive</name>
      <anchorfile>server_8c.html</anchorfile>
      <anchor>afcbd6eb89bf45265c30fb875c84aa6a2</anchor>
      <arglist>(int sd, char *buf, int maxlen)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>julius-simple.c</name>
    <path>/home/anash/simon/simonsource/julius/julius-simple/</path>
    <filename>julius-simple_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>julius-simple_8c.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>charconv.c</name>
    <path>/home/anash/simon/simonsource/julius/julius/</path>
    <filename>charconv_8c</filename>
    <member kind="function">
      <type>char *</type>
      <name>charconv</name>
      <anchorfile>charconv_8c.html</anchorfile>
      <anchor>a53162214afe379e8e885440f314c2c73</anchor>
      <arglist>(char *instr, char *outstr, int maxoutlen)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>charconv_iconv.c</name>
    <path>/home/anash/simon/simonsource/julius/julius/</path>
    <filename>charconv__iconv_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>charconv_iconv_setup</name>
      <anchorfile>charconv__iconv_8c.html</anchorfile>
      <anchor>ad20b6d2549a25bf6d15fc8cbacaa2997</anchor>
      <arglist>(char *fromcode, char *tocode, boolean *enable_conv)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>charconv_iconv</name>
      <anchorfile>charconv__iconv_8c.html</anchorfile>
      <anchor>ab07a622f3d986ed9b01dd2ead5dba644</anchor>
      <arglist>(char *instr, char *outstr, int maxoutlen)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>charconv_libjcode.c</name>
    <path>/home/anash/simon/simonsource/julius/julius/</path>
    <filename>charconv__libjcode_8c</filename>
  </compound>
  <compound kind="file">
    <name>charconv_win32.c</name>
    <path>/home/anash/simon/simonsource/julius/julius/</path>
    <filename>charconv__win32_8c</filename>
  </compound>
  <compound kind="file">
    <name>config.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>libsent_2include_2sent_2config_8h</filename>
  </compound>
  <compound kind="file">
    <name>output_file.c</name>
    <path>/home/anash/simon/simonsource/julius/julius/</path>
    <filename>output__file_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>TEXTWIDTH</name>
      <anchorfile>output__file_8c.html</anchorfile>
      <anchor>aa80a6ba9b51f4499851f707985cc769b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXBUFLEN</name>
      <anchorfile>output__file_8c.html</anchorfile>
      <anchor>a0c51b9a83d264825d6d303edd784e889</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>output_module.c</name>
    <path>/home/anash/simon/simonsource/julius/julius/</path>
    <filename>output__module_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>decode_output_selection</name>
      <anchorfile>output__module_8c.html</anchorfile>
      <anchor>af9572fd8ca3137f30f71387d4148ad90</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send_gram_info</name>
      <anchorfile>output__module_8c.html</anchorfile>
      <anchor>acbbd42ab3f0f2558eaf851e869b0745e</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setup_output_msock</name>
      <anchorfile>output__module_8c.html</anchorfile>
      <anchor>a084a17ff26baddf9c05c60bc34cff90b</anchor>
      <arglist>(Recog *recog, void *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>output_stdout.c</name>
    <path>/home/anash/simon/simonsource/julius/julius/</path>
    <filename>output__stdout_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAXBUFLEN</name>
      <anchorfile>output__stdout_8c.html</anchorfile>
      <anchor>a0c51b9a83d264825d6d303edd784e889</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEXTWIDTH</name>
      <anchorfile>output__stdout_8c.html</anchorfile>
      <anchor>aa80a6ba9b51f4499851f707985cc769b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPTEXTWIDTH</name>
      <anchorfile>output__stdout_8c.html</anchorfile>
      <anchor>ab9840a7eac955e32a487135522628aa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEXTWIDTH</name>
      <anchorfile>output__stdout_8c.html</anchorfile>
      <anchor>aa80a6ba9b51f4499851f707985cc769b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_all_gram</name>
      <anchorfile>output__stdout_8c.html</anchorfile>
      <anchor>ab524e134acd42612190bf737a5d45943</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>recogloop.c</name>
    <path>/home/anash/simon/simonsource/julius/julius/</path>
    <filename>recogloop_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>main_recognition_stream_loop</name>
      <anchorfile>recogloop_8c.html</anchorfile>
      <anchor>a1880a096e2f9c8875e2bf3b130f42b01</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>record.c</name>
    <path>/home/anash/simon/simonsource/julius/julius/</path>
    <filename>record_8c</filename>
  </compound>
  <compound kind="file">
    <name>visual.c</name>
    <path>/home/anash/simon/simonsource/julius/julius/</path>
    <filename>visual_8c</filename>
  </compound>
  <compound kind="file">
    <name>beam.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>beam_8h</filename>
    <class kind="struct">TOKEN2</class>
    <member kind="define">
      <type>#define</type>
      <name>TOKENID_UNDEFINED</name>
      <anchorfile>beam_8h.html</anchorfile>
      <anchor>a13bf341cec19776ef8afa06c54b29989</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FILLWIDTH</name>
      <anchorfile>beam_8h.html</anchorfile>
      <anchor>a599136439c92bbb40a65abb926ec7a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>TOKENID</name>
      <anchorfile>beam_8h.html</anchorfile>
      <anchor>afd1fde2c383d5e9447f7ab629ea31455</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>callback.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>callback_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAX_CALLBACK_HOOK</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>a0982ae395f62f54cf30f33c01b3e8cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_POLL</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a77760775de4f4b0e1eb452af4ff97b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_PROCESS_ONLINE</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7af241f0a78f37c906f8836b02f6bcd4a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_PROCESS_OFFLINE</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7aec257552084497521851a8c0990da65b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_STREAM_BEGIN</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7acf7702d366fbeb43e8de1b6179cb419f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_STREAM_END</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a915336532bb6937895e7e2730e5e557e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_SPEECH_READY</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a61108a40d0381fb4968d5c37318800b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_SPEECH_START</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a7b6b0413d4d37f8c8fea430c22e7bf95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_SPEECH_STOP</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7af234d71116c89b13091332763dda6d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_RECOGNITION_BEGIN</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7aa79ad9136c8acedd3d506aebafed0e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_RECOGNITION_END</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7acf9e7912844c9ebc8107d9ac4ae230a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_SEGMENT_BEGIN</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a1d429f21efeff7314bc3e8cb10aa843f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_SEGMENT_END</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a00bfecd08cafe00c22c44bcc4cbeb70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_PASS1_BEGIN</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7af5299ed129d660f36f45573b11915ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_PASS1_FRAME</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a2473f3379a3b13c62ef86c012f55ee4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_PASS1_END</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7ad007e3650dce4bf8e2c11f3568ec18d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_RESULT_PASS1_INTERIM</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a11bd3191d09f8aadd96dadabf3eeed1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_RESULT_PASS1</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a5a5dfbffbeb1db0ea34f59be1f777b98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_RESULT_PASS1_GRAPH</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7ac8b689b2271ea8ee42f7cec64b787824</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_STATUS_PARAM</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a831c3bcaea611a8d3a5bb4a5331bcd9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_PASS2_BEGIN</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7abdd58c88ed5b3a91c743bb95a8661a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_PASS2_END</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7abb20f719353745d9c48e298bf771d1ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_RESULT</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a9bf25e837bc6009c9dc1373d21bdf35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_RESULT_GMM</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a9b0d06b11a4dbf500a83244671431097</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_RESULT_GRAPH</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a300c8566c8406276fab9d9f35ffd96cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_RESULT_CONFNET</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a2078fc8efb6f7e4acf6790aa986a110c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_ADIN_CAPTURED</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a0ece70f224073aeaab065161dcb54360</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_ADIN_TRIGGERED</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a33796ff2058be8208bc18743b91c628a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_PAUSE</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a388e59aaee5f47a52c1cfa639f51e21d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_EVENT_RESUME</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a46bad3f8297239ee891ad331a0101669</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALLBACK_PAUSE_FUNCTION</name>
      <anchorfile>callback_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7abf62c4b4b2ce262a7854646e82ccd16b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>define.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>define_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>LM_UNDEF</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>ae11516300c0a4086aaed9b9cb7bae91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LM_PROB</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a3b4f07544a9ab61af0e3eb4507c82f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LM_DFA</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a10eb8881113f23fb7c4e8b0f66eb0477</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LM_NGRAM</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a44bfac8021d17c8ec68a34dcf7d099b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LM_DFA_GRAMMAR</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>aec2d3bdfc402c8cb53b217a9dc740d6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LM_DFA_WORD</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a641503050adcdb5a8a142ff169ff0572</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LM_NGRAM_USER</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a213933f2336471d086801611a11b907f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>J_RESULT_STATUS_REJECT_POWER</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a81db7b5f59eedd58ba1a59f1671ba14d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>J_RESULT_STATUS_TERMINATE</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a2d3e861f35762b62b2038b95f7a7f921</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>J_RESULT_STATUS_ONLY_SILENCE</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>aff4c49c393a59de69cb1aeef40850977</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>J_RESULT_STATUS_REJECT_GMM</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a9f9e185bf8f21ababd1df6f4d37f1827</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>J_RESULT_STATUS_REJECT_SHORT</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a28685f9a1830945c574b94a110e5f0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>J_RESULT_STATUS_FAIL</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>aa5ace3432ef3626472f0b123758fd439</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>J_RESULT_STATUS_SUCCESS</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>ac54f5223cafa71f7ac97945d3fe408c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHORT_WORD_LEN</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a19cb16718c56612a5a52fe27031e77bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPHOUT_OVERWRITE</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>ab1123793d621db1f2167e1e3d6996020</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPHOUT_LIMIT_BOUNDARY_LOOP</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>acc2a1f3e09af48fe684100da2ecea8ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPHOUT_SEARCH_DELAY_TERMINATION</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a8d967c7fac1375f972e400265afa2144</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRAPHOUT_DEPTHCUT</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a7e930085c440d3005b25d7416c01776b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINIMAL_BEAM_WIDTH</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>ac54d4a23667f2c40df271458c3dd4637</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FWD_NGRAM</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a2fbb213df19e10e0f324300859f2c569</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VTLN_RANGE</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a8568ee7560b8106b14300344bfb87807</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FAST_FACTOR1_SUCCESSOR_LIST</name>
      <anchorfile>define_8h.html</anchorfile>
      <anchor>a4b20a7094981c16d98c3c9348d8ab939</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>extern.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>extern_8h</filename>
    <includes id="search_8h" name="search.h" local="yes" imported="no">search.h</includes>
    <member kind="function">
      <type>void</type>
      <name>bt_init</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a38e614026a9b22faf37f4fa0226d3b9e</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_prepare</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a2ed8816bf84fe257568b1f64733c272c</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_free</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>afbe56b1427dbb47076fd588a8d51ea52</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>TRELLIS_ATOM *</type>
      <name>bt_new</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aa8787505faff3fc609ee4b2225d6422d</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_store</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ae4c53275d8ba9b90c7d92979b373df6f</anchor>
      <arglist>(BACKTRELLIS *bt, TRELLIS_ATOM *aotm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_relocate_rw</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a8778c608e98e0984f28dd99af5b7f2a3</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_terminal_words</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a2b3873b7dd9767bba15985dbc23f6a2a</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_discount_pescore</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a69cf0d6ad9cae46486c7b3ba2debf594</anchor>
      <arglist>(WCHMM_INFO *wchmm, BACKTRELLIS *bt, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_discount_lm</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>afda88019e6626ce767dcf2669fed5e16</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_sort_rw</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a44854a01c6dffc605f5208a9c438793e</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>TRELLIS_ATOM *</type>
      <name>bt_binsearch_atom</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a53cbda6118ac8e65317be5e4d13b7103</anchor>
      <arglist>(BACKTRELLIS *bt, int time, WORD_ID wkey)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjust_sc_index</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aaab640d626d21269aff343e0c72ef609</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_successor_list</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ad4851c90d3ee92d16e1f69c7055404d0</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max_successor_cache_init</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a5ce0db4bc158a10f97368b0bfe1cd0be</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max_successor_cache_free</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aa266d124f8ef541da2735a5edd395302</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>max_successor_prob</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a5497ad220e9f6cbd3ce96a7722fb8a4b</anchor>
      <arglist>(WCHMM_INFO *wchmm, WORD_ID lastword, int node)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB *</type>
      <name>max_successor_prob_iw</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ac3d0b17915bd522abc81368ee3cc5355</anchor>
      <arglist>(WCHMM_INFO *wchmm, WORD_ID lastword)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>can_succeed</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a6c22e6ad4a3105ac674a4c6143839c78</anchor>
      <arglist>(WCHMM_INFO *wchmm, WORD_ID lastword, int node)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>get_back_trellis_init</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aa6c69ec4b170a209b035f3229b16b3d8</anchor>
      <arglist>(HTK_Param *param, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>get_back_trellis_proceed</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a848d2b233c6c30a6659298c9b60cad01</anchor>
      <arglist>(int t, HTK_Param *param, RecogProcess *r, boolean final_for_multipath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_back_trellis_end</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a85151c15fb51c091fb9dbe118d858c76</anchor>
      <arglist>(HTK_Param *param, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fsbeam_free</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a3417f6a1faa0667fecde4b51cda6b89c</anchor>
      <arglist>(FSBeam *d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalize_1st_pass</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a4bb0197c54f5d8fd7cb3ea21e087bb28</anchor>
      <arglist>(RecogProcess *r, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>decode_proceed</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a39e4e2ce0a605269251e95c187678bbd</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decode_end_segmented</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>afdbd9fb7d148e30e333f41782aaff7bb</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decode_end</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aaffae0a8df1a0b6cf3468671e0964969</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>get_back_trellis</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a8d2a267d601b015668999ae78c910ecc</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>is_sil</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aa46181553f2c6d367f5a4e321f1f7c37</anchor>
      <arglist>(WORD_ID w, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mfcc_copy_to_rest_and_shrink</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a878d22dc8e3c8a06177b282b0294fbe2</anchor>
      <arglist>(MFCCCalc *mfcc, int start, int end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mfcc_shrink</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a9a3f4d700968b71847c483387a800f3b</anchor>
      <arglist>(MFCCCalc *mfcc, int p)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>detect_end_of_segment</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>acfe04d1bd0a3bfa9d97c6c1fc2b02bb7</anchor>
      <arglist>(RecogProcess *r, int time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalize_segment</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ab93f30b557411f2b08b8351b5c59fcc3</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>spsegment_need_restart</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ae4d825199dfb25b6eb63e5d3ef3527dd</anchor>
      <arglist>(Recog *recog, int *rf_ret, boolean *repro_ret)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spsegment_restart_mfccs</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a1db01866f95de7152d71d20eeb388847</anchor>
      <arglist>(Recog *recog, int rewind_frame, boolean reprocess)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>outprob_style</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a0f254f2216662e885b3bb4026641079c</anchor>
      <arglist>(WCHMM_INFO *wchmm, int node, int last_wid, int t, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error_missing_right_triphone</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ac8da24acd1461d375c498085204e6a40</anchor>
      <arglist>(HMM_Logical *base, char *rc_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error_missing_left_triphone</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a14811c13e82c33b933ac529e93d96b31</anchor>
      <arglist>(HMM_Logical *base, char *lc_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_firstwords</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a4f6fb7c86e607034b613bab9fd0e09a1</anchor>
      <arglist>(NEXTWORD **nw, int peseqlen, int maxnw, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_nextwords</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a1ee1652affa8efc0d5c57c493a23e17d</anchor>
      <arglist>(NODE *hypo, NEXTWORD **nw, int maxnw, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>ngram_acceptable</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a0db15315010ed1fb833c4fcb715bc3b1</anchor>
      <arglist>(NODE *hypo, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dfa_firstwords</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>af8ce7ca96078c88a1c95f48527e2e060</anchor>
      <arglist>(NEXTWORD **nw, int peseqlen, int maxnw, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dfa_nextwords</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aa9e7b9b36dc0918c34d333ef0b40806e</anchor>
      <arglist>(NODE *hypo, NEXTWORD **nw, int maxnw, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>dfa_acceptable</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a84889ad09209dac70cd3c8d7afdf410d</anchor>
      <arglist>(NODE *hypo, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>dfa_look_around</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a9c50a3f63417c41fb62ebef2b47eaf34</anchor>
      <arglist>(NEXTWORD *nword, NODE *hypo, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>segment_set_last_nword</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aa4e38335bdd7f3f7cae5c038fb82c5c3</anchor>
      <arglist>(NODE *hypo, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pass2_finalize_on_no_result</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a09fe476de95525cc0948d367b2d1d8f5</anchor>
      <arglist>(RecogProcess *r, boolean use_1pass_as_final)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wchmm_fbs</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ac887f5b5f8095c7180faf7f7be8daccb</anchor>
      <arglist>(HTK_Param *param, RecogProcess *r, int cate_bgn, int cate_num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wchmm_fbs_prepare</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>adced9068b4d935b5ac2ef5dcaccf1916</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wchmm_fbs_free</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a4ac510532de75d10a18c05c54b0c0401</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_stocker</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a055ee0bd8f17da80cbcb197e7a9dfbac</anchor>
      <arglist>(StackDecode *s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_node</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a150f8f83eb74b031efc0ae4de649f3d7</anchor>
      <arglist>(NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>NODE *</type>
      <name>cpy_node</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a8b9dd93baec9ddbaf2b0319fcc33e125</anchor>
      <arglist>(NODE *dst, NODE *src)</arglist>
    </member>
    <member kind="function">
      <type>NODE *</type>
      <name>newnode</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a6f9962c7abf961c6942dc5c004afbd9d</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>malloc_wordtrellis</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a8bf6246e732a0dafafe2a72cd817cbf4</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_wordtrellis</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a7655d7446c49d8c5e1602618e2c3a59e</anchor>
      <arglist>(StackDecode *dwrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scan_word</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a41d56141c1be10be0d18bc7407cdaefa</anchor>
      <arglist>(NODE *now, HTK_Param *param, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>next_word</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aead65272c1cb0437a916c7fae2e063cd</anchor>
      <arglist>(NODE *now, NODE *newParam, NEXTWORD *nword, HTK_Param *param, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start_word</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a43d86953379552a4916b8d7e388ce2de</anchor>
      <arglist>(NODE *newParam, NEXTWORD *nword, HTK_Param *param, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>last_next_word</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a64dddaf4a19ff37cac0167c474fca022</anchor>
      <arglist>(NODE *now, NODE *newParam, HTK_Param *param, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>wav2mfcc</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a2a2208f8a010aaaeefc37c34b1d13b51</anchor>
      <arglist>(SP16 speech[], int speechlen, Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_put_header</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a2d58198ed0b870ddee9ec6da578de82d</anchor>
      <arglist>(FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_put_version</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a38318d0088913dfa14bc0b483ce6dcee</anchor>
      <arglist>(FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_put_compile_defs</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a48aa9ee2f82f2ff6abea2be45ee05ae3</anchor>
      <arglist>(FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_put_library_defs</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a187d7185b854a64932ef333e1559423a</anchor>
      <arglist>(FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>WCHMM_INFO *</type>
      <name>wchmm_new</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a76c7f167b4d58e0f5397ee68f27f630a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wchmm_free</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a54b32b05bbb3b5ec20a31ffbf54f009a</anchor>
      <arglist>(WCHMM_INFO *w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_wchmm_info</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>af55f203ed6a20fb70f59ac9c755e1b05</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>build_wchmm</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ad5d885cf24bb7685190845ef155e0fc2</anchor>
      <arglist>(WCHMM_INFO *wchmm, JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>build_wchmm2</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ae3857e8c1f203c55b2cea61f95d765c6</anchor>
      <arglist>(WCHMM_INFO *wchmm, JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wchmm_check_interactive</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>afdd62be143d42468386c8ecb5b5ed15a</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check_wchmm</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a72ca6900a7dbdad155304fe3cd687f18</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>RealTimeInit</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a2187c675fc6176ecab0c21d1b12cc396</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>RealTimePipeLinePrepare</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ad0e7f4c292fb8b3fc4820d0c077c95f1</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>RealTimeMFCC</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a0313de67247f04612ff0ba9dd647b1dc</anchor>
      <arglist>(MFCCCalc *mfcc, SP16 *window, int windowlen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RealTimePipeLine</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a4ff825d4ff4dc3d61e43d6dc5b8e6834</anchor>
      <arglist>(SP16 *Speech, int len, Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RealTimeResume</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a2d95277a3f081c98b049c9e0a47b9ca9</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>RealTimeParam</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aa9397ac95af4bb829a074a90ad870308</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RealTimeCMNUpdate</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a9b33b27e1eb012e936bb5a8fab246d25</anchor>
      <arglist>(MFCCCalc *mfcc, Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RealTimeTerminate</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a0f24ee2f73094d6cd73779cdc2acf06e</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>realbeam_free</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a4f786dd9f177020c9c3ea7ef64b5d961</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mfcc_go</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>af5b500b8681caa2cd26546643e138f57</anchor>
      <arglist>(Recog *recog, int(*ad_check)(Recog *))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>word_align</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a3e88a2dac8eaa02c0597a3624079c7b0</anchor>
      <arglist>(WORD_ID *words, short wnum, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>phoneme_align</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a2a2f095d946d4fed97798dd95a37b41b</anchor>
      <arglist>(WORD_ID *words, short wnum, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>state_align</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a59aa6003e8809955a3a925dca9be1537</anchor>
      <arglist>(WORD_ID *words, short wnum, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>word_rev_align</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>acdfbf4f82a54d4c6c5f431e526b94c46</anchor>
      <arglist>(WORD_ID *revwords, short wnum, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>phoneme_rev_align</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aa12fb16e05166de451faec7b205101de</anchor>
      <arglist>(WORD_ID *revwords, short wnum, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>state_rev_align</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>affd374b04c462d4888d62150a41d7707</anchor>
      <arglist>(WORD_ID *revwords, short wnum, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_alignment_all</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a36d62de080469e911331d264ec692cc2</anchor>
      <arglist>(RecogProcess *r, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_output_argument_help</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga1acf73ed40757844445427f6351bb5a2</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>filepath</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a39039fc73afdd7cf53f77d7bae964123</anchor>
      <arglist>(char *filename, char *dirname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>opt_parse</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aa1900bc934aa62799aa8ea58b5a5f9a9</anchor>
      <arglist>(int argc, char *argv[], char *cwd, Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>opt_release</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aa0e53dfb021309e517f1507c6fb1d1a7</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_dirname</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a08529e043043d640c32bb0a868c3baa8</anchor>
      <arglist>(char *path)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>config_file_parse</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a13253d09a32d33fda6daea30a39265d6</anchor>
      <arglist>(char *conffile, Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkpath</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a52e787f61062f6f053a967ec64861a95</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_finalize</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga2609f4e91c9aba445523fc07a27fae62</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_beam_width</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aacfc93c2d938284673e49d035b063745</anchor>
      <arglist>(WCHMM_INFO *wchmm, int specified)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_jconf_overview</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a5a97ccff5da7b9ac55b4ab59fee8ae47</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_engine_info</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a9af4e536972afe028b30372a2188a8ee</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_initialize</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a775f144b96d3be9ae73ec218c36d24f2</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_load_am</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga4c6e0cea343b273fe5d72137753c0180</anchor>
      <arglist>(Recog *recog, JCONF_AM *amconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_load_lm</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga85270aea586e95c7a2bf96759e994f38</anchor>
      <arglist>(Recog *recog, JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_load_all</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga598cafcd9f0525e0b026970eba53fe1a</anchor>
      <arglist>(Recog *recog, Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_launch_recognition_instance</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga8132198f24e3fb5e4576f43090fef27d</anchor>
      <arglist>(Recog *recog, JCONF_SEARCH *sconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_final_fusion</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>gadbbf58d07165ff213b34a987b8089093</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_mfcc_calc_instances</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ac59e64b9f36f9c5c506dab38a608d22c</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_check</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ab99b774b459900d5dc043867d2b363ff</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gmm_init</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a7a9ba1675a5abc1e167bbfef485ecb98</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gmm_prepare</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aeff2e6da32a668b4b41eba49ddf5d1cc</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gmm_proceed</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a6f4f269c17a7f7d63f803eb32bc1f55b</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gmm_end</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a4bd66dedc1ba30f97ce7bfe5f08067cb</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gmm_valid_input</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a60748f90607fbb40e0bc32468101a8bb</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gmm_free</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a761f3f2077d62ffb88a88938f06423d1</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_init</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a454fa4cbfdd26a805e3612ad161d5d82</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_free</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ade10712a6c8da837e316be8e07d6e5c1</anchor>
      <arglist>(WordGraph *wg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_wordgraph</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a0a6e1a3503f5d8d7967f726b31dff96b</anchor>
      <arglist>(FILE *fp, WordGraph *wg, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_dump</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a42880ba78ee069f616052f429426e7a9</anchor>
      <arglist>(FILE *fp, WordGraph *root, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>WordGraph *</type>
      <name>wordgraph_assign</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a67ad3deab720743942ea690d452c5193</anchor>
      <arglist>(WORD_ID wid, WORD_ID wid_left, WORD_ID wid_right, int leftframe, int rightframe, LOGPROB fscore_head, LOGPROB fscore_tail, LOGPROB gscore_head, LOGPROB gscore_tail, LOGPROB lscore, LOGPROB cmscore, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>wordgraph_check_and_add_rightword</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ad590e83f29fb1cab88bcb2a8325ded77</anchor>
      <arglist>(WordGraph *wg, WordGraph *right, LOGPROB lscore)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>wordgraph_check_and_add_leftword</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ab042f514039a826459dcd318fdfda88b</anchor>
      <arglist>(WordGraph *wg, WordGraph *left, LOGPROB lscore)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_save</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ac8284fbd71e3969d1c3c1fbcd0ae07f0</anchor>
      <arglist>(WordGraph *wg, WordGraph *right, WordGraph **root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_purge_leaf_nodes</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a95058f0a4946935d28cec773b628522d</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_depth_cut</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a9fb7071c80942f2663f78a0b137e84a6</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_adjust_boundary</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a76e80eaefc4e6f5bbc5af149e676d6aa</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_clean</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a55c2dfc57fbd0c632d13e939b78f1e5f</anchor>
      <arglist>(WordGraph **rootp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_compaction_thesame</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ac9922d3e08c082f9efb224bf8bd7024a</anchor>
      <arglist>(WordGraph **rootp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_compaction_exacttime</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a4796ea472803688dd54049d4edca19ce</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_compaction_neighbor</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a2154f2ac1fe38fc979b6fff5e825014b</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wordgraph_sort_and_annotate_id</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a5520da7b811d99f0a02779abd2740485</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_check_coherence</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a17ae20a223ba488470fe4e8ec2b655e6</anchor>
      <arglist>(WordGraph *rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graph_forward_backward</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a16d74b67d441c27ec3f284046db8104b</anchor>
      <arglist>(WordGraph *root, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jconf_set_default_values</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a64ec315fa6ea84690156c7031061bf8e</anchor>
      <arglist>(Jconf *j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jconf_set_default_values_am</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a6d77214832b9874fa9e1a0baeb6013e3</anchor>
      <arglist>(JCONF_AM *j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jconf_set_default_values_lm</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a03032f49ee45bfd9e68a97cd7cdbe3c7</anchor>
      <arglist>(JCONF_LM *j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jconf_set_default_values_search</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a9997b23412b9e5725a2a38797de90d30</anchor>
      <arglist>(JCONF_SEARCH *j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_add</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gabc3c1c62bcc9bd6ae09e466ec9568b0e</anchor>
      <arglist>(DFA_INFO *dfa, WORD_INFO *winfo, char *name, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_delete</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga598bc6971258422c2d0745421ad017fa</anchor>
      <arglist>(int gid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multigram_delete_all</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga9af8242aac15eafad6c8b0b7520766fc</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_update</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga14c27377cd2e29c53f6310561fc00618</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_build</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gae139a7b25e1a0f134934c9bd82bb5d2b</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_activate</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga3f23f9085a1f9358840aa2f94bf55985</anchor>
      <arglist>(int gid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_deactivate</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga7adfc823f0b77aeefaa11fd9d6a6e4cf</anchor>
      <arglist>(int gid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_load_all_gramlist</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a71d0e29d2db7501de3dd38b6e592f5b9</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_gram_from_category</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gade85ef421b438d07e444ff18686e3f93</anchor>
      <arglist>(int category, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_gram_from_wid</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga1d75742d2e51ce4d784854a118cc7837</anchor>
      <arglist>(WORD_ID wid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_all_num</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga73640bf5cafd73fca5445d8d4a243006</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multigram_free_all</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a73ea208a9a733724959d83bddc65d611</anchor>
      <arglist>(MULTIGRAM *root)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_id_by_name</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga8d8c5ac62f23dacf1cfc89c40593cb0f</anchor>
      <arglist>(PROCESS_LM *lm, char *gramname)</arglist>
    </member>
    <member kind="function">
      <type>MULTIGRAM *</type>
      <name>multigram_get_grammar_by_name</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga4d3954419521c0579d45ccecf672af5a</anchor>
      <arglist>(PROCESS_LM *lm, char *gramname)</arglist>
    </member>
    <member kind="function">
      <type>MULTIGRAM *</type>
      <name>multigram_get_grammar_by_id</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gac0a644c826ebd6ddf9eaa120a87e56c1</anchor>
      <arglist>(PROCESS_LM *lm, unsigned short id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_words_to_grammar</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gae9cf185ffabd67c9a121e9a4fe5773c6</anchor>
      <arglist>(PROCESS_LM *lm, MULTIGRAM *m, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_words_to_grammar_by_name</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gabf0e596bc902739ddd037bedf3f47b23</anchor>
      <arglist>(PROCESS_LM *lm, char *gramname, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_words_to_grammar_by_id</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gac5b545f46d7d404860ca1b021f0e30f5</anchor>
      <arglist>(PROCESS_LM *lm, unsigned short id, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multigram_add_gramlist</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga0f54f1ed5525ca2f1963198ceffe045e</anchor>
      <arglist>(char *dfafile, char *dictfile, JCONF_LM *j, int lmvar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multigram_remove_gramlist</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga7c27300dc987807896874071c0d4933d</anchor>
      <arglist>(JCONF_LM *j)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_prefix_list</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga1c7891709ec7b262da7ce038a0f4d15e</anchor>
      <arglist>(char *prefix_list, char *cwd, JCONF_LM *j, int lmvar)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_prefix_filelist</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga415ee039308a4c2473f1e939094bd2af</anchor>
      <arglist>(char *listfile, JCONF_LM *j, int lmvar)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_setup_param</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>aabec6ca42b00a566e89b2d89316b1f3c</anchor>
      <arglist>(ADIn *adin, Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_go</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a779f1801f478e62a538f9fbc451fd961</anchor>
      <arglist>(int(*ad_process)(SP16 *, int, Recog *), int(*ad_check)(Recog *), Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_standby</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a14ca17c724010b1b869aad3b12dd1ec0</anchor>
      <arglist>(ADIn *a, int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_begin</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a52f7e403a326e01edae779274865df12</anchor>
      <arglist>(ADIn *a, char *file_or_dev_name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_end</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a7f72c681278e8358d59f18f285baa984</anchor>
      <arglist>(ADIn *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adin_free_param</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>ae139f11d28afa5c167844ade37598a2a</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>CN_CLUSTER *</type>
      <name>confnet_create</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a018b9b1ff26e5b71f076683b18f326ca</anchor>
      <arglist>(WordGraph *root, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graph_make_order</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a97276e06934b8cdf4a68103d7f807924</anchor>
      <arglist>(WordGraph *root, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graph_free_order</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a23813d87c063bfe8d3f6995d50b53085</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cn_free_all</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a6247849f1a33c2ba66d0db9060f50ea5</anchor>
      <arglist>(CN_CLUSTER **croot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callback_init</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>affc29d0eb770622d50c970763f12f4e5</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>callback_add</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>ga3bb0b2f104c78caac33540f0fd505f8a</anchor>
      <arglist>(Recog *recog, int code, void(*func)(Recog *recog, void *data), void *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>callback_add_adin</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>gaebafed830161a2795804e682b99b2514</anchor>
      <arglist>(Recog *recog, int code, void(*func)(Recog *recog, SP16 *buf, int len, void *data), void *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callback_exec</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a8d07ed94d06630d9cacef60392a25d18</anchor>
      <arglist>(int code, Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callback_exec_adin</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>acf556e94c5321f90b081dc7124dd6fec</anchor>
      <arglist>(int code, Recog *recog, SP16 *buf, int len)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>callback_exist</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>gaaa31a3b8f9ffbd5f91a6736081b9af14</anchor>
      <arglist>(Recog *recog, int code)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>callback_delete</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>gaea4764d2269ae63d3a4fc0d45f232a3c</anchor>
      <arglist>(Recog *recog, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_cut_callback_store_buffer</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a95225b639439a61e6d925036b4427e65</anchor>
      <arglist>(SP16 *now, int len, Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>SentenceAlign *</type>
      <name>result_align_new</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>abd3d8e330178f05c66035ec81c37f122</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>result_align_free</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a96462276300eddb7f17212538aed378d</anchor>
      <arglist>(SentenceAlign *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>result_sentence_malloc</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a8846fd1e68ecb12e1a564682bf542208</anchor>
      <arglist>(RecogProcess *r, int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>result_sentence_free</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a39802ae634b365582ee633edc6252895</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_result</name>
      <anchorfile>extern_8h.html</anchorfile>
      <anchor>a76b51e7c5bac21e108339f9893c54679</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>global.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>global_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>GLOBAL</name>
      <anchorfile>global_8h.html</anchorfile>
      <anchor>a3de33738fd3c7e77bffbcfaefc3e7645</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graph.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>graph_8h</filename>
    <class kind="struct">__word_graph__</class>
    <class kind="struct">__confnet_cluster__</class>
    <member kind="define">
      <type>#define</type>
      <name>FANOUTSTEP</name>
      <anchorfile>graph_8h.html</anchorfile>
      <anchor>a89873710cf9d5e426d7243914bb5cdda</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CN_CLUSTER_WG_STEP</name>
      <anchorfile>graph_8h.html</anchorfile>
      <anchor>a8b5af943061f87dbb781b32854fa7883</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __word_graph__</type>
      <name>WordGraph</name>
      <anchorfile>graph_8h.html</anchorfile>
      <anchor>a3cbb58b8aef08d4de89607ef852a029a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __confnet_cluster__</type>
      <name>CN_CLUSTER</name>
      <anchorfile>graph_8h.html</anchorfile>
      <anchor>acf217bea0304ae4750d4075e17220c6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>jconf.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>jconf_8h</filename>
    <class kind="struct">__jconf_am__</class>
    <class kind="struct">__jconf_lm__</class>
    <class kind="struct">__jconf_search__</class>
    <class kind="struct">__Jconf__</class>
    <member kind="define">
      <type>#define</type>
      <name>JCONF_MODULENAME_MAXLEN</name>
      <anchorfile>jconf_8h.html</anchorfile>
      <anchor>af27665a070dcf1c0c0cd4ae7d1cfa88e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>JCONF_MODULENAME_DEFAULT</name>
      <anchorfile>jconf_8h.html</anchorfile>
      <anchor>a9ad5973569ba3af33d2a3d1c5c40c4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __jconf_am__</type>
      <name>JCONF_AM</name>
      <anchorfile>jconf_8h.html</anchorfile>
      <anchor>a503d04d25232099e144efcc8c4317d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __jconf_lm__</type>
      <name>JCONF_LM</name>
      <anchorfile>jconf_8h.html</anchorfile>
      <anchor>ae913eeaa11e272889cb664cadabebd72</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __jconf_search__</type>
      <name>JCONF_SEARCH</name>
      <anchorfile>jconf_8h.html</anchorfile>
      <anchor>aacf3de23832971577cd69648c8ed39dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __Jconf__</type>
      <name>Jconf</name>
      <anchorfile>jconf_8h.html</anchorfile>
      <anchor>a454b45182dfc71b14377937a3de87d68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>jfunc.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>jfunc_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>j_open_stream</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga4ad24f7376c87fc70240b600a7be504b</anchor>
      <arglist>(Recog *recog, char *file_or_dev_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_close_stream</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga368d0af636deae430c50bacdc814ee12</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_recognize_stream</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga02b1895548eb357703978c9d3baf6af1</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_request_pause</name>
      <anchorfile>group__pauseresume.html</anchorfile>
      <anchor>gaaf64281af30d4007a7acf7be08104d81</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_request_terminate</name>
      <anchorfile>group__pauseresume.html</anchorfile>
      <anchor>ga75e24631e7c8eee8de55eeaa7108e031</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_request_resume</name>
      <anchorfile>group__pauseresume.html</anchorfile>
      <anchor>gae646f13f485ca7cfaf05d70157116815</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>schedule_grammar_update</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga8d69aab470d87ebf2c0554f91ee28001</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_reset_reload</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gaf858ad3e0dc254d2a86248253305ef77</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_enable_debug_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga159797864c19c0a46cee9af8c70e5d1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_disable_debug_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga5f304c8ccf599a3b6813b719c32c0415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_enable_verbose_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>gab41949417c809a4ae8361fd11131b5e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_disable_verbose_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga4d804a8f811d397d66ce8633469981a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_internal_error</name>
      <anchorfile>jfunc_8h.html</anchorfile>
      <anchor>ab7eb5cd48c1440678a74994daf573f87</anchor>
      <arglist>(char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_config_load_args</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga82c73e004e6b44456382484d8ba94382</anchor>
      <arglist>(Jconf *jconf, int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_config_load_file</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga716235b262e39da8de8794f7469a8e79</anchor>
      <arglist>(Jconf *jconf, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>Jconf *</type>
      <name>j_config_load_args_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga20d67c58e3aafe742d3c1d773a452d3a</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>Jconf *</type>
      <name>j_config_load_file_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gae76edfad2908d3c61b4bde024e34b1ec</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_adin_init</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga7c1a22bb0b6643677344b3dc447f40a1</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>j_get_current_filename</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga3df833b8b112e10c25285385c3617425</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_recog_info</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga3ac4b8ca220d600ba31db847ffcaf616</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>Recog *</type>
      <name>j_create_instance_from_jconf</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga971da157919cd74720405eabc478db99</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_regist_user_lm_func</name>
      <anchorfile>group__userfunc.html</anchorfile>
      <anchor>gaedd5d3c750ecdb89a2d18ff0c1ef08f4</anchor>
      <arglist>(PROCESS_LM *lm, LOGPROB(*unifunc)(WORD_INFO *winfo, WORD_ID w, LOGPROB ngram_prob), LOGPROB(*bifunc)(WORD_INFO *winfo, WORD_ID context, WORD_ID w, LOGPROB ngram_prob), LOGPROB(*probfunc)(WORD_INFO *winfo, WORD_ID *contexts, int context_len, WORD_ID w, LOGPROB ngram_prob))</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_regist_user_param_func</name>
      <anchorfile>group__userfunc.html</anchorfile>
      <anchor>gaff2672d5e383a858162fc0b3889c49b1</anchor>
      <arglist>(Recog *recog, boolean(*user_calc_vector)(MFCCCalc *, SP16 *, int))</arglist>
    </member>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_get_amconf_by_name</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gab97169db221b50d0da190d842ed544d2</anchor>
      <arglist>(Jconf *jconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_get_amconf_by_id</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga1d7751d5d5890f0de8ea2bff7030e195</anchor>
      <arglist>(Jconf *jconf, int id)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_get_amconf_default</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga5a12f1b3ff0c37a7d475435bbcf5e358</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_LM *</type>
      <name>j_get_lmconf_by_name</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gaff7081c98a6fa70d6f08bb4cb4e59c2a</anchor>
      <arglist>(Jconf *jconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_LM *</type>
      <name>j_get_lmconf_by_id</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga44bf59ea9f72972dbf4676542662f6e5</anchor>
      <arglist>(Jconf *jconf, int id)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_SEARCH *</type>
      <name>j_get_searchconf_by_name</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga8d118af9934a25cad02c510187af5cab</anchor>
      <arglist>(Jconf *jconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_SEARCH *</type>
      <name>j_get_searchconf_by_id</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gaaccdee4213bf1368fe5c51c26d690691</anchor>
      <arglist>(Jconf *jconf, int id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_deactivate</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>ga2705ae764b5baa317600f1f2665beec5</anchor>
      <arglist>(Recog *recog, char *name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_deactivate_by_id</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>gab09315eab11ce0d4e4dd2f658a074091</anchor>
      <arglist>(Recog *recog, int id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_activate</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>gadb78985eeec25ee3f6dd98759ce0eb45</anchor>
      <arglist>(Recog *recog, char *name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_activate_by_id</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>gaacf422cdda0164d9870e0f7906a718bf</anchor>
      <arglist>(Recog *recog, int id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_add_lm</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>ga44fcdad118a7cdcf8c5cf7360a80b1f0</anchor>
      <arglist>(Recog *recog, JCONF_LM *lmconf, JCONF_SEARCH *sconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>MFCCCalc *</type>
      <name>j_mfcccalc_new</name>
      <anchorfile>jfunc_8h.html</anchorfile>
      <anchor>ae86ca1dbac944ad1f6eff86dfbef75d7</anchor>
      <arglist>(JCONF_AM *amconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_mfcccalc_free</name>
      <anchorfile>jfunc_8h.html</anchorfile>
      <anchor>a9c4f87608dddcf989e4a5da365b8e344</anchor>
      <arglist>(MFCCCalc *mfcc)</arglist>
    </member>
    <member kind="function">
      <type>PROCESS_AM *</type>
      <name>j_process_am_new</name>
      <anchorfile>jfunc_8h.html</anchorfile>
      <anchor>a5f8e4c0d7be0b3ec0ed0d7979508b508</anchor>
      <arglist>(Recog *recog, JCONF_AM *amconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_process_am_free</name>
      <anchorfile>jfunc_8h.html</anchorfile>
      <anchor>ae0a9a7721835bc613748bbc1bcf31712</anchor>
      <arglist>(PROCESS_AM *am)</arglist>
    </member>
    <member kind="function">
      <type>PROCESS_LM *</type>
      <name>j_process_lm_new</name>
      <anchorfile>jfunc_8h.html</anchorfile>
      <anchor>a07b8940d67931053baa2e282eba67106</anchor>
      <arglist>(Recog *recog, JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_process_lm_free</name>
      <anchorfile>jfunc_8h.html</anchorfile>
      <anchor>ab62c4aa42a23b80bb43774ee7fd68cda</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>RecogProcess *</type>
      <name>j_recogprocess_new</name>
      <anchorfile>jfunc_8h.html</anchorfile>
      <anchor>a3345905dcc859b53a591f011de12c010</anchor>
      <arglist>(Recog *recog, JCONF_SEARCH *sconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_recogprocess_free</name>
      <anchorfile>jfunc_8h.html</anchorfile>
      <anchor>a2f4b334457105471f9d2f39478a01846</anchor>
      <arglist>(RecogProcess *process)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_jconf_am_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga1b728cd399a92696bcce2ac313bf81f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_am_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gae05eaae0cdabb52e2b6c53a1c642c6b0</anchor>
      <arglist>(JCONF_AM *amconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_am_regist</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga9b021ae8e669215361e38d0e1b536212</anchor>
      <arglist>(Jconf *jconf, JCONF_AM *amconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_LM *</type>
      <name>j_jconf_lm_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga277864b6488d1aa7e50aece4ef004b1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_lm_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga89c092748551b74bdc511469a41d0b0d</anchor>
      <arglist>(JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_lm_regist</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga0e7536503fc049282812121db5246877</anchor>
      <arglist>(Jconf *jconf, JCONF_LM *lmconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_SEARCH *</type>
      <name>j_jconf_search_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga1614b1059354ac310ef11cf19a7c6583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_search_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga56100c4a69c82abd1b695a31a369a3cb</anchor>
      <arglist>(JCONF_SEARCH *sconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_search_regist</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga11d4bee3c93ca7b54871d9e871a4d3ce</anchor>
      <arglist>(Jconf *jconf, JCONF_SEARCH *sconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>Jconf *</type>
      <name>j_jconf_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gafd2a0745fd95d7db0e06d983eddd4ce7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gaa07cb421866a97821431c5686f1b458d</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>Recog *</type>
      <name>j_recog_new</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>gab227652fedd329c864ee9d979b7ec9f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_recog_free</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga2067c284c3331aac903e2dacc51904a6</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>julius.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>julius_8h</filename>
  </compound>
  <compound kind="file">
    <name>juliuslib.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>juliuslib_8h</filename>
  </compound>
  <compound kind="file">
    <name>misc.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>misc_8h</filename>
    <member kind="enumvalue">
      <name>SP_RESULT_TTY</name>
      <anchorfile>misc_8h.html</anchorfile>
      <anchor>a6b7b47dd702d9e331586d485013fd1eaade3f3f22f00cf7e6c56436ad715531d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SP_RESULT_MSOCK</name>
      <anchorfile>misc_8h.html</anchorfile>
      <anchor>a6b7b47dd702d9e331586d485013fd1eaac1574ac27da20879f2abdac306e8aee0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>multi-gram.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>multi-gram_8h</filename>
    <class kind="struct">__multi_gram__</class>
    <class kind="struct">__gram_list__</class>
    <member kind="define">
      <type>#define</type>
      <name>MAXGRAMNAMELEN</name>
      <anchorfile>multi-gram_8h.html</anchorfile>
      <anchor>a63ddb0fd0a8021aa59acbd9e7d2c50f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULTIGRAM_DEFAULT</name>
      <anchorfile>multi-gram_8h.html</anchorfile>
      <anchor>a7ad6ac935e59b086467241be810db54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULTIGRAM_DELETE</name>
      <anchorfile>multi-gram_8h.html</anchorfile>
      <anchor>ae8fb19b2b39d019d6539af4e03333fd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULTIGRAM_ACTIVATE</name>
      <anchorfile>multi-gram_8h.html</anchorfile>
      <anchor>acf97f0247f61a8d602979035bf078057</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULTIGRAM_DEACTIVATE</name>
      <anchorfile>multi-gram_8h.html</anchorfile>
      <anchor>a74fbda5febf6cc04ddeb64ba9a700e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __multi_gram__</type>
      <name>MULTIGRAM</name>
      <anchorfile>multi-gram_8h.html</anchorfile>
      <anchor>ae6b4af5b68b11344cb9f443ff5eb33aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __gram_list__</type>
      <name>GRAMLIST</name>
      <anchorfile>multi-gram_8h.html</anchorfile>
      <anchor>a5edfd72ff00e05f2188f3d4608a0d274</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plugin.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>plugin_8h</filename>
    <class kind="struct">__j_plugin_entry__</class>
    <member kind="define">
      <type>#define</type>
      <name>PLUGIN_SUFFIX</name>
      <anchorfile>plugin_8h.html</anchorfile>
      <anchor>a1efbc9bb9a9f2837d3f7386af8607abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLUGIN_FUNCTION_NAMELIST</name>
      <anchorfile>plugin_8h.html</anchorfile>
      <anchor>ac8bf3631f86be2e596068fb5559203c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLUGIN_NONE</name>
      <anchorfile>plugin_8h.html</anchorfile>
      <anchor>a91cd05332b5fff0da9cb7dcd88120652</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>PLUGIN_MODULE</name>
      <anchorfile>plugin_8h.html</anchorfile>
      <anchor>abd1d56f19097dac86484690369320165</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>FUNC_VOID</name>
      <anchorfile>plugin_8h.html</anchorfile>
      <anchor>a50f63e100d87b6d1fc980d59a9bd566d</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="typedef">
      <type>struct __j_plugin_entry__</type>
      <name>PLUGIN_ENTRY</name>
      <anchorfile>plugin_8h.html</anchorfile>
      <anchor>af2eebf5de2231e6553d602976f021196</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>recog.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>recog_8h</filename>
    <class kind="struct">__FSBeam__</class>
    <class kind="struct">__RealBeam__</class>
    <class kind="struct">__StackDecode__</class>
    <class kind="struct">LMFunc</class>
    <class kind="struct">__gmm_calc__</class>
    <class kind="struct">__sentence_align__</class>
    <class kind="struct">__sentence__</class>
    <class kind="struct">__adin__</class>
    <class kind="struct">__Output__</class>
    <class kind="struct">__mfcc_calc__</class>
    <class kind="struct">__process_am__</class>
    <class kind="struct">__process_lm__</class>
    <class kind="struct">__recogprocess__</class>
    <class kind="struct">__Recog__</class>
    <member kind="typedef">
      <type>struct __FSBeam__</type>
      <name>FSBeam</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>ab446c552c8ae514ca9cb120926042d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __RealBeam__</type>
      <name>RealBeam</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>a4a715b9b354dbc93d606818ccee6b110</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __StackDecode__</type>
      <name>StackDecode</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>a11075bcc3903457d7a2423e40ccce5df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __gmm_calc__</type>
      <name>GMMCalc</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>a950fe1af378b09ae4126166ee8b9a470</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __sentence_align__</type>
      <name>SentenceAlign</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>a95ab7e4a90ba8f57a8d502a805746def</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __sentence__</type>
      <name>Sentence</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>a0c2fc05628d316905db6befc031488d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __adin__</type>
      <name>ADIn</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>a0c85394dd379c06a27f6f018e2120c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __Output__</type>
      <name>Output</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>af20b023460b442f42a043bf1dc3ea3d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __mfcc_calc__</type>
      <name>MFCCCalc</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>aa3e8101ec0973b577b0b2884642c987f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __process_am__</type>
      <name>PROCESS_AM</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>a7ed6aa433da0758a36bcccd1d2a0a52c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __process_lm__</type>
      <name>PROCESS_LM</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>ac2b024a590b36f8d48bf8a1e41a93334</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __recogprocess__</type>
      <name>RecogProcess</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>aae73ab14dbb8935ec77740388bc9bc91</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __Recog__</type>
      <name>Recog</name>
      <anchorfile>recog_8h.html</anchorfile>
      <anchor>aa4a4e473402c4ba0fbfba1bee5ece6b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>search_8h</filename>
    <class kind="struct">__nextword__</class>
    <class kind="struct">__node__</class>
    <member kind="typedef">
      <type>struct __nextword__</type>
      <name>NEXTWORD</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>af9e308126a2c25d89c6dda6ff1a4785e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __node__</type>
      <name>NODE</name>
      <anchorfile>search_8h.html</anchorfile>
      <anchor>aef06740e5fc16063525c368aae1fd4aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>trellis.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>trellis_8h</filename>
    <class kind="struct">__trellis_atom__</class>
    <class kind="struct">__backtrellis__</class>
    <member kind="typedef">
      <type>struct __trellis_atom__</type>
      <name>TRELLIS_ATOM</name>
      <anchorfile>trellis_8h.html</anchorfile>
      <anchor>ac73d0b6992fa5a172ddb77eb9ac5ab3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __backtrellis__</type>
      <name>BACKTRELLIS</name>
      <anchorfile>trellis_8h.html</anchorfile>
      <anchor>ac9086487481fb7a9cc03465f6f76d672</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>useropt.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>useropt_8h</filename>
    <class kind="struct">__j_useropt__</class>
    <member kind="typedef">
      <type>struct __j_useropt__</type>
      <name>USEROPT</name>
      <anchorfile>useropt_8h.html</anchorfile>
      <anchor>aa8b01168e49c913d717d78765fe8cb90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_add_option</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga806519f2220289c98cc34a71837f22d9</anchor>
      <arglist>(char *fmt, int argnum, int reqargnum, char *desc, boolean(*func)(Jconf *jconf, char *arg[], int argnum))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useropt_free_all</name>
      <anchorfile>useropt_8h.html</anchorfile>
      <anchor>aa433b46227423587dbd3db68388b3b8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>useropt_exec</name>
      <anchorfile>useropt_8h.html</anchorfile>
      <anchor>ad6be4d37b43b13c98e73d2803f63ab24</anchor>
      <arglist>(Jconf *jconf, char *argv[], int argc, int *n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useropt_show_desc</name>
      <anchorfile>useropt_8h.html</anchorfile>
      <anchor>a14891b32df2a82273e27434245339087</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wchmm.h</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>wchmm_8h</filename>
    <class kind="struct">s_cell</class>
    <class kind="struct">LM_PROB_CACHE</class>
    <class kind="struct">__A_CELL2__</class>
    <class kind="struct">wchmm_state</class>
    <class kind="struct">WCHMM_WORK</class>
    <class kind="struct">wchmm_info</class>
    <member kind="define">
      <type>#define</type>
      <name>A_CELL2_ALLOC_STEP</name>
      <anchorfile>wchmm_8h.html</anchorfile>
      <anchor>a033f4116d112998b5da228bb4d77054a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct s_cell</type>
      <name>S_CELL</name>
      <anchorfile>wchmm_8h.html</anchorfile>
      <anchor>a3e98ae95354da44bdce184ff049f053b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __A_CELL2__</type>
      <name>A_CELL2</name>
      <anchorfile>wchmm_8h.html</anchorfile>
      <anchor>a28b12cce4306e747395b11583d159bcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct wchmm_state</type>
      <name>WCHMM_STATE</name>
      <anchorfile>wchmm_8h.html</anchorfile>
      <anchor>adea5049c57c4839061125b97463ffc24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct wchmm_info</type>
      <name>WCHMM_INFO</name>
      <anchorfile>wchmm_8h.html</anchorfile>
      <anchor>afbaa29f5b67ab5e3cc4aefc7a5a06a95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin-cut.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>adin-cut_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>TMP_FIX_200602</name>
      <anchorfile>adin-cut_8c.html</anchorfile>
      <anchor>a165337d1476bfdf05b3b973162c1a032</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_setup_param</name>
      <anchorfile>adin-cut_8c.html</anchorfile>
      <anchor>aabec6ca42b00a566e89b2d89316b1f3c</anchor>
      <arglist>(ADIn *adin, Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_go</name>
      <anchorfile>adin-cut_8c.html</anchorfile>
      <anchor>a779f1801f478e62a538f9fbc451fd961</anchor>
      <arglist>(int(*ad_process)(SP16 *, int, Recog *), int(*ad_check)(Recog *), Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_standby</name>
      <anchorfile>adin-cut_8c.html</anchorfile>
      <anchor>a14ca17c724010b1b869aad3b12dd1ec0</anchor>
      <arglist>(ADIn *a, int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_begin</name>
      <anchorfile>adin-cut_8c.html</anchorfile>
      <anchor>a52f7e403a326e01edae779274865df12</anchor>
      <arglist>(ADIn *a, char *file_or_dev_name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_end</name>
      <anchorfile>adin-cut_8c.html</anchorfile>
      <anchor>a7f72c681278e8358d59f18f285baa984</anchor>
      <arglist>(ADIn *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adin_free_param</name>
      <anchorfile>adin-cut_8c.html</anchorfile>
      <anchor>ae139f11d28afa5c167844ade37598a2a</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>backtrellis.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>backtrellis_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>bt_init</name>
      <anchorfile>backtrellis_8c.html</anchorfile>
      <anchor>a38e614026a9b22faf37f4fa0226d3b9e</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_prepare</name>
      <anchorfile>backtrellis_8c.html</anchorfile>
      <anchor>a2ed8816bf84fe257568b1f64733c272c</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_free</name>
      <anchorfile>backtrellis_8c.html</anchorfile>
      <anchor>afbe56b1427dbb47076fd588a8d51ea52</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>TRELLIS_ATOM *</type>
      <name>bt_new</name>
      <anchorfile>backtrellis_8c.html</anchorfile>
      <anchor>aa8787505faff3fc609ee4b2225d6422d</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_store</name>
      <anchorfile>backtrellis_8c.html</anchorfile>
      <anchor>a492d79563296323634e94e9659f2d0f4</anchor>
      <arglist>(BACKTRELLIS *bt, TRELLIS_ATOM *tatom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_relocate_rw</name>
      <anchorfile>backtrellis_8c.html</anchorfile>
      <anchor>a8778c608e98e0984f28dd99af5b7f2a3</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_terminal_words</name>
      <anchorfile>backtrellis_8c.html</anchorfile>
      <anchor>a2b3873b7dd9767bba15985dbc23f6a2a</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_discount_pescore</name>
      <anchorfile>backtrellis_8c.html</anchorfile>
      <anchor>a69cf0d6ad9cae46486c7b3ba2debf594</anchor>
      <arglist>(WCHMM_INFO *wchmm, BACKTRELLIS *bt, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_discount_lm</name>
      <anchorfile>backtrellis_8c.html</anchorfile>
      <anchor>afda88019e6626ce767dcf2669fed5e16</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bt_sort_rw</name>
      <anchorfile>backtrellis_8c.html</anchorfile>
      <anchor>a44854a01c6dffc605f5208a9c438793e</anchor>
      <arglist>(BACKTRELLIS *bt)</arglist>
    </member>
    <member kind="function">
      <type>TRELLIS_ATOM *</type>
      <name>bt_binsearch_atom</name>
      <anchorfile>backtrellis_8c.html</anchorfile>
      <anchor>a8afc0bfbd7a3802fa580a67494404c35</anchor>
      <arglist>(BACKTRELLIS *bt, int t, WORD_ID wkey)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>beam.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>beam_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>SD</name>
      <anchorfile>beam_8c.html</anchorfile>
      <anchor>a04b7a530d058f413e7fbef28f57e445b</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCOPY</name>
      <anchorfile>beam_8c.html</anchorfile>
      <anchor>a71db35a0ed6319be193bd519cc009894</anchor>
      <arglist>(D, S)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SVAL</name>
      <anchorfile>beam_8c.html</anchorfile>
      <anchor>ae57752de933fa67a969e6a5474b81c17</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STVAL</name>
      <anchorfile>beam_8c.html</anchorfile>
      <anchor>a90658fc20c0fa1c9e7d1361634fe8326</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>get_back_trellis_init</name>
      <anchorfile>beam_8c.html</anchorfile>
      <anchor>aa6c69ec4b170a209b035f3229b16b3d8</anchor>
      <arglist>(HTK_Param *param, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>get_back_trellis_proceed</name>
      <anchorfile>beam_8c.html</anchorfile>
      <anchor>a848d2b233c6c30a6659298c9b60cad01</anchor>
      <arglist>(int t, HTK_Param *param, RecogProcess *r, boolean final_for_multipath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_back_trellis_end</name>
      <anchorfile>beam_8c.html</anchorfile>
      <anchor>a85151c15fb51c091fb9dbe118d858c76</anchor>
      <arglist>(HTK_Param *param, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalize_1st_pass</name>
      <anchorfile>beam_8c.html</anchorfile>
      <anchor>a4bb0197c54f5d8fd7cb3ea21e087bb28</anchor>
      <arglist>(RecogProcess *r, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fsbeam_free</name>
      <anchorfile>beam_8c.html</anchorfile>
      <anchor>a3417f6a1faa0667fecde4b51cda6b89c</anchor>
      <arglist>(FSBeam *d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>callback.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>callback_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>callback_init</name>
      <anchorfile>callback_8c.html</anchorfile>
      <anchor>affc29d0eb770622d50c970763f12f4e5</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>callback_add</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>ga3bb0b2f104c78caac33540f0fd505f8a</anchor>
      <arglist>(Recog *recog, int code, void(*func)(Recog *recog, void *data), void *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>callback_add_adin</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>gaebafed830161a2795804e682b99b2514</anchor>
      <arglist>(Recog *recog, int code, void(*func)(Recog *recog, SP16 *buf, int len, void *data), void *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callback_exec</name>
      <anchorfile>callback_8c.html</anchorfile>
      <anchor>a8d07ed94d06630d9cacef60392a25d18</anchor>
      <arglist>(int code, Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callback_exec_adin</name>
      <anchorfile>callback_8c.html</anchorfile>
      <anchor>acf556e94c5321f90b081dc7124dd6fec</anchor>
      <arglist>(int code, Recog *recog, SP16 *buf, int len)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>callback_exist</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>gaaa31a3b8f9ffbd5f91a6736081b9af14</anchor>
      <arglist>(Recog *recog, int code)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>callback_delete</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>gaea4764d2269ae63d3a4fc0d45f232a3c</anchor>
      <arglist>(Recog *recog, int id)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>confnet.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>confnet_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>PREFER_GRAPH_CM</name>
      <anchorfile>confnet_8c.html</anchorfile>
      <anchor>a3965167afc01597529cf6e432aeb8c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUNDLE_WORD_WITH_SAME_OUTPUT</name>
      <anchorfile>confnet_8c.html</anchorfile>
      <anchor>a87af8537267358b855819ea14a6c5c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>m2i</name>
      <anchorfile>confnet_8c.html</anchorfile>
      <anchor>aa13647c54adee24fb18f3df6d48934f3</anchor>
      <arglist>(A, B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graph_make_order</name>
      <anchorfile>confnet_8c.html</anchorfile>
      <anchor>a97276e06934b8cdf4a68103d7f807924</anchor>
      <arglist>(WordGraph *root, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graph_free_order</name>
      <anchorfile>confnet_8c.html</anchorfile>
      <anchor>a23813d87c063bfe8d3f6995d50b53085</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cn_free_all</name>
      <anchorfile>confnet_8c.html</anchorfile>
      <anchor>a6247849f1a33c2ba66d0db9060f50ea5</anchor>
      <arglist>(CN_CLUSTER **croot)</arglist>
    </member>
    <member kind="function">
      <type>CN_CLUSTER *</type>
      <name>confnet_create</name>
      <anchorfile>confnet_8c.html</anchorfile>
      <anchor>a018b9b1ff26e5b71f076683b18f326ca</anchor>
      <arglist>(WordGraph *root, RecogProcess *r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>default.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>default_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>jconf_set_default_values</name>
      <anchorfile>default_8c.html</anchorfile>
      <anchor>a64ec315fa6ea84690156c7031061bf8e</anchor>
      <arglist>(Jconf *j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jconf_set_default_values_am</name>
      <anchorfile>default_8c.html</anchorfile>
      <anchor>a6d77214832b9874fa9e1a0baeb6013e3</anchor>
      <arglist>(JCONF_AM *j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jconf_set_default_values_lm</name>
      <anchorfile>default_8c.html</anchorfile>
      <anchor>a03032f49ee45bfd9e68a97cd7cdbe3c7</anchor>
      <arglist>(JCONF_LM *j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jconf_set_default_values_search</name>
      <anchorfile>default_8c.html</anchorfile>
      <anchor>a9997b23412b9e5725a2a38797de90d30</anchor>
      <arglist>(JCONF_SEARCH *j)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dfa_decode.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>dfa__decode_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>dfa_firstwords</name>
      <anchorfile>dfa__decode_8c.html</anchorfile>
      <anchor>af8ce7ca96078c88a1c95f48527e2e060</anchor>
      <arglist>(NEXTWORD **nw, int peseqlen, int maxnw, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dfa_nextwords</name>
      <anchorfile>dfa__decode_8c.html</anchorfile>
      <anchor>aa9e7b9b36dc0918c34d333ef0b40806e</anchor>
      <arglist>(NODE *hypo, NEXTWORD **nw, int maxnw, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>dfa_acceptable</name>
      <anchorfile>dfa__decode_8c.html</anchorfile>
      <anchor>a84889ad09209dac70cd3c8d7afdf410d</anchor>
      <arglist>(NODE *hypo, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>dfa_look_around</name>
      <anchorfile>dfa__decode_8c.html</anchorfile>
      <anchor>a9c50a3f63417c41fb62ebef2b47eaf34</anchor>
      <arglist>(NEXTWORD *nword, NODE *hypo, RecogProcess *r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>factoring_sub.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>factoring__sub_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>make_successor_list</name>
      <anchorfile>factoring__sub_8c.html</anchorfile>
      <anchor>ad4851c90d3ee92d16e1f69c7055404d0</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjust_sc_index</name>
      <anchorfile>factoring__sub_8c.html</anchorfile>
      <anchor>aaab640d626d21269aff343e0c72ef609</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max_successor_cache_init</name>
      <anchorfile>factoring__sub_8c.html</anchorfile>
      <anchor>a5ce0db4bc158a10f97368b0bfe1cd0be</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max_successor_cache_free</name>
      <anchorfile>factoring__sub_8c.html</anchorfile>
      <anchor>aa266d124f8ef541da2735a5edd395302</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>max_successor_prob</name>
      <anchorfile>factoring__sub_8c.html</anchorfile>
      <anchor>a5497ad220e9f6cbd3ce96a7722fb8a4b</anchor>
      <arglist>(WCHMM_INFO *wchmm, WORD_ID lastword, int node)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB *</type>
      <name>max_successor_prob_iw</name>
      <anchorfile>factoring__sub_8c.html</anchorfile>
      <anchor>ac3d0b17915bd522abc81368ee3cc5355</anchor>
      <arglist>(WCHMM_INFO *wchmm, WORD_ID lastword)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>can_succeed</name>
      <anchorfile>factoring__sub_8c.html</anchorfile>
      <anchor>a6c22e6ad4a3105ac674a4c6143839c78</anchor>
      <arglist>(WCHMM_INFO *wchmm, WORD_ID lastword, int node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gmm.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>gmm_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>gmm_init</name>
      <anchorfile>gmm_8c.html</anchorfile>
      <anchor>a7a9ba1675a5abc1e167bbfef485ecb98</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gmm_prepare</name>
      <anchorfile>gmm_8c.html</anchorfile>
      <anchor>aeff2e6da32a668b4b41eba49ddf5d1cc</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gmm_proceed</name>
      <anchorfile>gmm_8c.html</anchorfile>
      <anchor>a6f4f269c17a7f7d63f803eb32bc1f55b</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gmm_end</name>
      <anchorfile>gmm_8c.html</anchorfile>
      <anchor>a4bd66dedc1ba30f97ce7bfe5f08067cb</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gmm_valid_input</name>
      <anchorfile>gmm_8c.html</anchorfile>
      <anchor>a60748f90607fbb40e0bc32468101a8bb</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gmm_free</name>
      <anchorfile>gmm_8c.html</anchorfile>
      <anchor>a761f3f2077d62ffb88a88938f06423d1</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gramlist.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>gramlist_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>multigram_add_gramlist</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga0f54f1ed5525ca2f1963198ceffe045e</anchor>
      <arglist>(char *dfafile, char *dictfile, JCONF_LM *j, int lmvar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multigram_remove_gramlist</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga7c27300dc987807896874071c0d4933d</anchor>
      <arglist>(JCONF_LM *j)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_prefix_list</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga1c7891709ec7b262da7ce038a0f4d15e</anchor>
      <arglist>(char *prefix_list, char *cwd, JCONF_LM *j, int lmvar)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_prefix_filelist</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga415ee039308a4c2473f1e939094bd2af</anchor>
      <arglist>(char *listfile, JCONF_LM *j, int lmvar)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graphout.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>graphout_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_init</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a454fa4cbfdd26a805e3612ad161d5d82</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_free</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>ade10712a6c8da837e316be8e07d6e5c1</anchor>
      <arglist>(WordGraph *wg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>wordgraph_check_and_add_leftword</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>ab042f514039a826459dcd318fdfda88b</anchor>
      <arglist>(WordGraph *wg, WordGraph *left, LOGPROB lscore)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>wordgraph_check_and_add_rightword</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>ad590e83f29fb1cab88bcb2a8325ded77</anchor>
      <arglist>(WordGraph *wg, WordGraph *right, LOGPROB lscore)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wordgraph_sort_and_annotate_id</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a5520da7b811d99f0a02779abd2740485</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_clean</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a55c2dfc57fbd0c632d13e939b78f1e5f</anchor>
      <arglist>(WordGraph **rootp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_purge_leaf_nodes</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a95058f0a4946935d28cec773b628522d</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_depth_cut</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a9fb7071c80942f2663f78a0b137e84a6</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_adjust_boundary</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a76e80eaefc4e6f5bbc5af149e676d6aa</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_compaction_thesame</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>ac9922d3e08c082f9efb224bf8bd7024a</anchor>
      <arglist>(WordGraph **rootp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_compaction_exacttime</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a4796ea472803688dd54049d4edca19ce</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_compaction_neighbor</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a2154f2ac1fe38fc979b6fff5e825014b</anchor>
      <arglist>(WordGraph **rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>WordGraph *</type>
      <name>wordgraph_assign</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a0b5461fd8d38eea5190c57ae8761fb96</anchor>
      <arglist>(WORD_ID wid, WORD_ID wid_left, WORD_ID wid_right, int leftframe, int rightframe, LOGPROB fscore_head, LOGPROB fscore_tail, LOGPROB gscore_head, LOGPROB gscore_tail, LOGPROB lscore, LOGPROB cm, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_save</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>ac8284fbd71e3969d1c3c1fbcd0ae07f0</anchor>
      <arglist>(WordGraph *wg, WordGraph *right, WordGraph **root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_wordgraph</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a0a6e1a3503f5d8d7967f726b31dff96b</anchor>
      <arglist>(FILE *fp, WordGraph *wg, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_dump</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a42880ba78ee069f616052f429426e7a9</anchor>
      <arglist>(FILE *fp, WordGraph *root, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wordgraph_check_coherence</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a17ae20a223ba488470fe4e8ec2b655e6</anchor>
      <arglist>(WordGraph *rootp, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graph_forward_backward</name>
      <anchorfile>graphout_8c.html</anchorfile>
      <anchor>a16d74b67d441c27ec3f284046db8104b</anchor>
      <arglist>(WordGraph *root, RecogProcess *r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hmm_check.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>hmm__check_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>PHSTEP</name>
      <anchorfile>hmm__check_8c.html</anchorfile>
      <anchor>a9957f809fe49500ee8314637e46d97e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_check</name>
      <anchorfile>hmm__check_8c.html</anchorfile>
      <anchor>ab99b774b459900d5dc043867d2b363ff</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>instance.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>instance_8c</filename>
    <member kind="function">
      <type>MFCCCalc *</type>
      <name>j_mfcccalc_new</name>
      <anchorfile>instance_8c.html</anchorfile>
      <anchor>ae86ca1dbac944ad1f6eff86dfbef75d7</anchor>
      <arglist>(JCONF_AM *amconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_mfcccalc_free</name>
      <anchorfile>instance_8c.html</anchorfile>
      <anchor>a9c4f87608dddcf989e4a5da365b8e344</anchor>
      <arglist>(MFCCCalc *mfcc)</arglist>
    </member>
    <member kind="function">
      <type>PROCESS_AM *</type>
      <name>j_process_am_new</name>
      <anchorfile>instance_8c.html</anchorfile>
      <anchor>a5f8e4c0d7be0b3ec0ed0d7979508b508</anchor>
      <arglist>(Recog *recog, JCONF_AM *amconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_process_am_free</name>
      <anchorfile>instance_8c.html</anchorfile>
      <anchor>ae0a9a7721835bc613748bbc1bcf31712</anchor>
      <arglist>(PROCESS_AM *am)</arglist>
    </member>
    <member kind="function">
      <type>PROCESS_LM *</type>
      <name>j_process_lm_new</name>
      <anchorfile>instance_8c.html</anchorfile>
      <anchor>a07b8940d67931053baa2e282eba67106</anchor>
      <arglist>(Recog *recog, JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_process_lm_free</name>
      <anchorfile>instance_8c.html</anchorfile>
      <anchor>ab62c4aa42a23b80bb43774ee7fd68cda</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>RecogProcess *</type>
      <name>j_recogprocess_new</name>
      <anchorfile>instance_8c.html</anchorfile>
      <anchor>a3345905dcc859b53a591f011de12c010</anchor>
      <arglist>(Recog *recog, JCONF_SEARCH *sconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_recogprocess_free</name>
      <anchorfile>instance_8c.html</anchorfile>
      <anchor>a2f4b334457105471f9d2f39478a01846</anchor>
      <arglist>(RecogProcess *process)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_jconf_am_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga1b728cd399a92696bcce2ac313bf81f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_am_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gae05eaae0cdabb52e2b6c53a1c642c6b0</anchor>
      <arglist>(JCONF_AM *amconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_am_regist</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga9b021ae8e669215361e38d0e1b536212</anchor>
      <arglist>(Jconf *jconf, JCONF_AM *amconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_LM *</type>
      <name>j_jconf_lm_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga277864b6488d1aa7e50aece4ef004b1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_lm_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga89c092748551b74bdc511469a41d0b0d</anchor>
      <arglist>(JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_lm_regist</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga0e7536503fc049282812121db5246877</anchor>
      <arglist>(Jconf *jconf, JCONF_LM *lmconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_SEARCH *</type>
      <name>j_jconf_search_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga1614b1059354ac310ef11cf19a7c6583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_search_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga56100c4a69c82abd1b695a31a369a3cb</anchor>
      <arglist>(JCONF_SEARCH *sconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_search_regist</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga11d4bee3c93ca7b54871d9e871a4d3ce</anchor>
      <arglist>(Jconf *jconf, JCONF_SEARCH *sconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>Jconf *</type>
      <name>j_jconf_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gafd2a0745fd95d7db0e06d983eddd4ce7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gaa07cb421866a97821431c5686f1b458d</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>Recog *</type>
      <name>j_recog_new</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>gab227652fedd329c864ee9d979b7ec9f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_recog_free</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga2067c284c3331aac903e2dacc51904a6</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>jfunc.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>jfunc_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>j_request_pause</name>
      <anchorfile>group__pauseresume.html</anchorfile>
      <anchor>gaaf64281af30d4007a7acf7be08104d81</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_request_terminate</name>
      <anchorfile>group__pauseresume.html</anchorfile>
      <anchor>ga75e24631e7c8eee8de55eeaa7108e031</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_request_resume</name>
      <anchorfile>group__pauseresume.html</anchorfile>
      <anchor>gae646f13f485ca7cfaf05d70157116815</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>schedule_grammar_update</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga8d69aab470d87ebf2c0554f91ee28001</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_reset_reload</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gaf858ad3e0dc254d2a86248253305ef77</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_enable_debug_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga159797864c19c0a46cee9af8c70e5d1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_disable_debug_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga5f304c8ccf599a3b6813b719c32c0415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_enable_verbose_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>gab41949417c809a4ae8361fd11131b5e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_disable_verbose_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga4d804a8f811d397d66ce8633469981a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_internal_error</name>
      <anchorfile>jfunc_8c.html</anchorfile>
      <anchor>ab7eb5cd48c1440678a74994daf573f87</anchor>
      <arglist>(char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_config_load_args</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga82c73e004e6b44456382484d8ba94382</anchor>
      <arglist>(Jconf *jconf, int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_config_load_file</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga716235b262e39da8de8794f7469a8e79</anchor>
      <arglist>(Jconf *jconf, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>Jconf *</type>
      <name>j_config_load_args_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga20d67c58e3aafe742d3c1d773a452d3a</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>Jconf *</type>
      <name>j_config_load_file_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gae76edfad2908d3c61b4bde024e34b1ec</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_adin_init</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga7c1a22bb0b6643677344b3dc447f40a1</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>j_get_current_filename</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga3df833b8b112e10c25285385c3617425</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_recog_info</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga3ac4b8ca220d600ba31db847ffcaf616</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>Recog *</type>
      <name>j_create_instance_from_jconf</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga971da157919cd74720405eabc478db99</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_regist_user_lm_func</name>
      <anchorfile>group__userfunc.html</anchorfile>
      <anchor>gaedd5d3c750ecdb89a2d18ff0c1ef08f4</anchor>
      <arglist>(PROCESS_LM *lm, LOGPROB(*unifunc)(WORD_INFO *winfo, WORD_ID w, LOGPROB ngram_prob), LOGPROB(*bifunc)(WORD_INFO *winfo, WORD_ID context, WORD_ID w, LOGPROB ngram_prob), LOGPROB(*probfunc)(WORD_INFO *winfo, WORD_ID *contexts, int context_len, WORD_ID w, LOGPROB ngram_prob))</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_regist_user_param_func</name>
      <anchorfile>group__userfunc.html</anchorfile>
      <anchor>gaff2672d5e383a858162fc0b3889c49b1</anchor>
      <arglist>(Recog *recog, boolean(*user_calc_vector)(MFCCCalc *, SP16 *, int))</arglist>
    </member>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_get_amconf_by_name</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gab97169db221b50d0da190d842ed544d2</anchor>
      <arglist>(Jconf *jconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_get_amconf_by_id</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga1d7751d5d5890f0de8ea2bff7030e195</anchor>
      <arglist>(Jconf *jconf, int id)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_get_amconf_default</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga5a12f1b3ff0c37a7d475435bbcf5e358</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_LM *</type>
      <name>j_get_lmconf_by_name</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gaff7081c98a6fa70d6f08bb4cb4e59c2a</anchor>
      <arglist>(Jconf *jconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_LM *</type>
      <name>j_get_lmconf_by_id</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga44bf59ea9f72972dbf4676542662f6e5</anchor>
      <arglist>(Jconf *jconf, int id)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_SEARCH *</type>
      <name>j_get_searchconf_by_name</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga8d118af9934a25cad02c510187af5cab</anchor>
      <arglist>(Jconf *jconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_SEARCH *</type>
      <name>j_get_searchconf_by_id</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gaaccdee4213bf1368fe5c51c26d690691</anchor>
      <arglist>(Jconf *jconf, int id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_deactivate</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>ga2705ae764b5baa317600f1f2665beec5</anchor>
      <arglist>(Recog *recog, char *name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_deactivate_by_id</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>gab09315eab11ce0d4e4dd2f658a074091</anchor>
      <arglist>(Recog *recog, int id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_activate</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>gadb78985eeec25ee3f6dd98759ce0eb45</anchor>
      <arglist>(Recog *recog, char *name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_activate_by_id</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>gaacf422cdda0164d9870e0f7906a718bf</anchor>
      <arglist>(Recog *recog, int id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_add_lm</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>ga44fcdad118a7cdcf8c5cf7360a80b1f0</anchor>
      <arglist>(Recog *recog, JCONF_LM *lmconf, JCONF_SEARCH *sconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_remove</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>ga6cc4c2c30f0423537a624ded7ccf25d6</anchor>
      <arglist>(Recog *recog, JCONF_SEARCH *sconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_lm_remove</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>gab631e42798ac144122f71a122693b05d</anchor>
      <arglist>(Recog *recog, JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_am_remove</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>ga97c45cc2a55cc091d0d4592248ecf114</anchor>
      <arglist>(Recog *recog, JCONF_AM *amconf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>m_adin.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>m__adin_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>adin_initialize</name>
      <anchorfile>m__adin_8c.html</anchorfile>
      <anchor>a775f144b96d3be9ae73ec218c36d24f2</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>m_chkparam.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>m__chkparam_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>checkpath</name>
      <anchorfile>m__chkparam_8c.html</anchorfile>
      <anchor>a52e787f61062f6f053a967ec64861a95</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_finalize</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga2609f4e91c9aba445523fc07a27fae62</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_beam_width</name>
      <anchorfile>m__chkparam_8c.html</anchorfile>
      <anchor>aacfc93c2d938284673e49d035b063745</anchor>
      <arglist>(WCHMM_INFO *wchmm, int specified)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>m_fusion.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>m__fusion_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>j_load_am</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga4c6e0cea343b273fe5d72137753c0180</anchor>
      <arglist>(Recog *recog, JCONF_AM *amconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_load_lm</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga85270aea586e95c7a2bf96759e994f38</anchor>
      <arglist>(Recog *recog, JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_load_all</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga598cafcd9f0525e0b026970eba53fe1a</anchor>
      <arglist>(Recog *recog, Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>create_mfcc_calc_instances</name>
      <anchorfile>m__fusion_8c.html</anchorfile>
      <anchor>ac59e64b9f36f9c5c506dab38a608d22c</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_launch_recognition_instance</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga8132198f24e3fb5e4576f43090fef27d</anchor>
      <arglist>(Recog *recog, JCONF_SEARCH *sconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_final_fusion</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>gadbbf58d07165ff213b34a987b8089093</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>m_info.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>m__info_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>print_jconf_overview</name>
      <anchorfile>m__info_8c.html</anchorfile>
      <anchor>a5a97ccff5da7b9ac55b4ab59fee8ae47</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_engine_info</name>
      <anchorfile>m__info_8c.html</anchorfile>
      <anchor>a9af4e536972afe028b30372a2188a8ee</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>m_jconf.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>m__jconf_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>ISTOKEN</name>
      <anchorfile>m__jconf_8c.html</anchorfile>
      <anchor>ab7c70f055a19d79a45a5f3a21cc5ef7d</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_dirname</name>
      <anchorfile>m__jconf_8c.html</anchorfile>
      <anchor>a08529e043043d640c32bb0a868c3baa8</anchor>
      <arglist>(char *path)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>config_file_parse</name>
      <anchorfile>m__jconf_8c.html</anchorfile>
      <anchor>a13253d09a32d33fda6daea30a39265d6</anchor>
      <arglist>(char *conffile, Jconf *jconf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>m_options.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>m__options_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>FREE_MEMORY</name>
      <anchorfile>m__options_8c.html</anchorfile>
      <anchor>acf9badeea7a3a32998499274d82880d9</anchor>
      <arglist>(p)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>filepath</name>
      <anchorfile>m__options_8c.html</anchorfile>
      <anchor>a39039fc73afdd7cf53f77d7bae964123</anchor>
      <arglist>(char *filename, char *dirname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>opt_parse</name>
      <anchorfile>m__options_8c.html</anchorfile>
      <anchor>aa1900bc934aa62799aa8ea58b5a5f9a9</anchor>
      <arglist>(int argc, char *argv[], char *cwd, Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>opt_release</name>
      <anchorfile>m__options_8c.html</anchorfile>
      <anchor>aa0e53dfb021309e517f1507c6fb1d1a7</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>m_usage.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>m__usage_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>j_output_argument_help</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga1acf73ed40757844445427f6351bb5a2</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>multi-gram.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>multi-gram_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>MDEBUG</name>
      <anchorfile>multi-gram_8c.html</anchorfile>
      <anchor>ad769dc7be0dc5189e019d56664a18655</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_build</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gae139a7b25e1a0f134934c9bd82bb5d2b</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_add</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gabc3c1c62bcc9bd6ae09e466ec9568b0e</anchor>
      <arglist>(DFA_INFO *dfa, WORD_INFO *winfo, char *name, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_delete</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga598bc6971258422c2d0745421ad017fa</anchor>
      <arglist>(int delid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multigram_delete_all</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga9af8242aac15eafad6c8b0b7520766fc</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_activate</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga3f23f9085a1f9358840aa2f94bf55985</anchor>
      <arglist>(int gid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_deactivate</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga7adfc823f0b77aeefaa11fd9d6a6e4cf</anchor>
      <arglist>(int gid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_update</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga14c27377cd2e29c53f6310561fc00618</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_load_all_gramlist</name>
      <anchorfile>multi-gram_8c.html</anchorfile>
      <anchor>a71d0e29d2db7501de3dd38b6e592f5b9</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_all_num</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga73640bf5cafd73fca5445d8d4a243006</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_gram_from_category</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gade85ef421b438d07e444ff18686e3f93</anchor>
      <arglist>(int category, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_gram_from_wid</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga1d75742d2e51ce4d784854a118cc7837</anchor>
      <arglist>(WORD_ID wid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multigram_free_all</name>
      <anchorfile>multi-gram_8c.html</anchorfile>
      <anchor>a73ea208a9a733724959d83bddc65d611</anchor>
      <arglist>(MULTIGRAM *root)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_id_by_name</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga8d8c5ac62f23dacf1cfc89c40593cb0f</anchor>
      <arglist>(PROCESS_LM *lm, char *gramname)</arglist>
    </member>
    <member kind="function">
      <type>MULTIGRAM *</type>
      <name>multigram_get_grammar_by_name</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga4d3954419521c0579d45ccecf672af5a</anchor>
      <arglist>(PROCESS_LM *lm, char *gramname)</arglist>
    </member>
    <member kind="function">
      <type>MULTIGRAM *</type>
      <name>multigram_get_grammar_by_id</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gac0a644c826ebd6ddf9eaa120a87e56c1</anchor>
      <arglist>(PROCESS_LM *lm, unsigned short id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_words_to_grammar</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gae9cf185ffabd67c9a121e9a4fe5773c6</anchor>
      <arglist>(PROCESS_LM *lm, MULTIGRAM *m, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_words_to_grammar_by_name</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gabf0e596bc902739ddd037bedf3f47b23</anchor>
      <arglist>(PROCESS_LM *lm, char *gramname, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_words_to_grammar_by_id</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gac5b545f46d7d404860ca1b021f0e30f5</anchor>
      <arglist>(PROCESS_LM *lm, unsigned short id, WORD_INFO *winfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_decode.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>ngram__decode_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>ngram_firstwords</name>
      <anchorfile>ngram__decode_8c.html</anchorfile>
      <anchor>a4f6fb7c86e607034b613bab9fd0e09a1</anchor>
      <arglist>(NEXTWORD **nw, int peseqlen, int maxnw, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ngram_nextwords</name>
      <anchorfile>ngram__decode_8c.html</anchorfile>
      <anchor>a1ee1652affa8efc0d5c57c493a23e17d</anchor>
      <arglist>(NODE *hypo, NEXTWORD **nw, int maxnw, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>ngram_acceptable</name>
      <anchorfile>ngram__decode_8c.html</anchorfile>
      <anchor>a0db15315010ed1fb833c4fcb715bc3b1</anchor>
      <arglist>(NODE *hypo, RecogProcess *r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>outprob_style.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>outprob__style_8c</filename>
    <member kind="function">
      <type>LOGPROB</type>
      <name>outprob_style</name>
      <anchorfile>outprob__style_8c.html</anchorfile>
      <anchor>a0f254f2216662e885b3bb4026641079c</anchor>
      <arglist>(WCHMM_INFO *wchmm, int node, int last_wid, int t, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error_missing_right_triphone</name>
      <anchorfile>outprob__style_8c.html</anchorfile>
      <anchor>ac8da24acd1461d375c498085204e6a40</anchor>
      <arglist>(HMM_Logical *base, char *rc_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error_missing_left_triphone</name>
      <anchorfile>outprob__style_8c.html</anchorfile>
      <anchor>a14811c13e82c33b933ac529e93d96b31</anchor>
      <arglist>(HMM_Logical *base, char *lc_name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pass1.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>pass1_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>decode_proceed</name>
      <anchorfile>pass1_8c.html</anchorfile>
      <anchor>a39e4e2ce0a605269251e95c187678bbd</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decode_end_segmented</name>
      <anchorfile>pass1_8c.html</anchorfile>
      <anchor>afdbd9fb7d148e30e333f41782aaff7bb</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decode_end</name>
      <anchorfile>pass1_8c.html</anchorfile>
      <anchor>aaffae0a8df1a0b6cf3468671e0964969</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>get_back_trellis</name>
      <anchorfile>pass1_8c.html</anchorfile>
      <anchor>a8d2a267d601b015668999ae78c910ecc</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plugin.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>plugin_8c</filename>
  </compound>
  <compound kind="file">
    <name>realtime-1stpass.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>realtime-1stpass_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>RealTimeInit</name>
      <anchorfile>realtime-1stpass_8c.html</anchorfile>
      <anchor>a2187c675fc6176ecab0c21d1b12cc396</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_mfcc</name>
      <anchorfile>realtime-1stpass_8c.html</anchorfile>
      <anchor>a8f72f75cc1141291deccf92909b92516</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>RealTimePipeLinePrepare</name>
      <anchorfile>realtime-1stpass_8c.html</anchorfile>
      <anchor>ad0e7f4c292fb8b3fc4820d0c077c95f1</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>RealTimeMFCC</name>
      <anchorfile>realtime-1stpass_8c.html</anchorfile>
      <anchor>a0313de67247f04612ff0ba9dd647b1dc</anchor>
      <arglist>(MFCCCalc *mfcc, SP16 *window, int windowlen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RealTimePipeLine</name>
      <anchorfile>realtime-1stpass_8c.html</anchorfile>
      <anchor>a49f4c2cce6396f016f2a8d9633691579</anchor>
      <arglist>(SP16 *Speech, int nowlen, Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RealTimeResume</name>
      <anchorfile>realtime-1stpass_8c.html</anchorfile>
      <anchor>a2d95277a3f081c98b049c9e0a47b9ca9</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>RealTimeParam</name>
      <anchorfile>realtime-1stpass_8c.html</anchorfile>
      <anchor>aa9397ac95af4bb829a074a90ad870308</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RealTimeCMNUpdate</name>
      <anchorfile>realtime-1stpass_8c.html</anchorfile>
      <anchor>a9b33b27e1eb012e936bb5a8fab246d25</anchor>
      <arglist>(MFCCCalc *mfcc, Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RealTimeTerminate</name>
      <anchorfile>realtime-1stpass_8c.html</anchorfile>
      <anchor>a0f24ee2f73094d6cd73779cdc2acf06e</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>realbeam_free</name>
      <anchorfile>realtime-1stpass_8c.html</anchorfile>
      <anchor>a4f786dd9f177020c9c3ea7ef64b5d961</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mfcc_go</name>
      <anchorfile>realtime-1stpass_8c.html</anchorfile>
      <anchor>af5b500b8681caa2cd26546643e138f57</anchor>
      <arglist>(Recog *recog, int(*ad_check)(Recog *))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>recogmain.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>recogmain_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>GLOBAL_VARIABLE_DEFINE</name>
      <anchorfile>recogmain_8c.html</anchorfile>
      <anchor>a093c5871694a9984065f189d076c93c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SentenceAlign *</type>
      <name>result_align_new</name>
      <anchorfile>recogmain_8c.html</anchorfile>
      <anchor>abd3d8e330178f05c66035ec81c37f122</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>result_align_free</name>
      <anchorfile>recogmain_8c.html</anchorfile>
      <anchor>a96462276300eddb7f17212538aed378d</anchor>
      <arglist>(SentenceAlign *a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>result_sentence_malloc</name>
      <anchorfile>recogmain_8c.html</anchorfile>
      <anchor>a8846fd1e68ecb12e1a564682bf542208</anchor>
      <arglist>(RecogProcess *r, int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>result_sentence_free</name>
      <anchorfile>recogmain_8c.html</anchorfile>
      <anchor>a39802ae634b365582ee633edc6252895</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_result</name>
      <anchorfile>recogmain_8c.html</anchorfile>
      <anchor>a76b51e7c5bac21e108339f9893c54679</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_cut_callback_store_buffer</name>
      <anchorfile>recogmain_8c.html</anchorfile>
      <anchor>a95225b639439a61e6d925036b4427e65</anchor>
      <arglist>(SP16 *now, int len, Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_open_stream</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga4ad24f7376c87fc70240b600a7be504b</anchor>
      <arglist>(Recog *recog, char *file_or_dev_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_close_stream</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga368d0af636deae430c50bacdc814ee12</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_recognize_stream</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga02b1895548eb357703978c9d3baf6af1</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search_bestfirst_main.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>search__bestfirst__main_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>segment_set_last_nword</name>
      <anchorfile>search__bestfirst__main_8c.html</anchorfile>
      <anchor>aa4e38335bdd7f3f7cae5c038fb82c5c3</anchor>
      <arglist>(NODE *hypo, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pass2_finalize_on_no_result</name>
      <anchorfile>search__bestfirst__main_8c.html</anchorfile>
      <anchor>a09fe476de95525cc0948d367b2d1d8f5</anchor>
      <arglist>(RecogProcess *r, boolean use_1pass_as_final)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wchmm_fbs</name>
      <anchorfile>search__bestfirst__main_8c.html</anchorfile>
      <anchor>ac887f5b5f8095c7180faf7f7be8daccb</anchor>
      <arglist>(HTK_Param *param, RecogProcess *r, int cate_bgn, int cate_num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wchmm_fbs_prepare</name>
      <anchorfile>search__bestfirst__main_8c.html</anchorfile>
      <anchor>adced9068b4d935b5ac2ef5dcaccf1916</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wchmm_fbs_free</name>
      <anchorfile>search__bestfirst__main_8c.html</anchorfile>
      <anchor>a4ac510532de75d10a18c05c54b0c0401</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search_bestfirst_v1.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>search__bestfirst__v1_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>free_node</name>
      <anchorfile>search__bestfirst__v1_8c.html</anchorfile>
      <anchor>a150f8f83eb74b031efc0ae4de649f3d7</anchor>
      <arglist>(NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_stocker</name>
      <anchorfile>search__bestfirst__v1_8c.html</anchorfile>
      <anchor>a055ee0bd8f17da80cbcb197e7a9dfbac</anchor>
      <arglist>(StackDecode *s)</arglist>
    </member>
    <member kind="function">
      <type>NODE *</type>
      <name>cpy_node</name>
      <anchorfile>search__bestfirst__v1_8c.html</anchorfile>
      <anchor>a8b9dd93baec9ddbaf2b0319fcc33e125</anchor>
      <arglist>(NODE *dst, NODE *src)</arglist>
    </member>
    <member kind="function">
      <type>NODE *</type>
      <name>newnode</name>
      <anchorfile>search__bestfirst__v1_8c.html</anchorfile>
      <anchor>a6f9962c7abf961c6942dc5c004afbd9d</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>malloc_wordtrellis</name>
      <anchorfile>search__bestfirst__v1_8c.html</anchorfile>
      <anchor>a8bf6246e732a0dafafe2a72cd817cbf4</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_wordtrellis</name>
      <anchorfile>search__bestfirst__v1_8c.html</anchorfile>
      <anchor>a7655d7446c49d8c5e1602618e2c3a59e</anchor>
      <arglist>(StackDecode *dwrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scan_word</name>
      <anchorfile>search__bestfirst__v1_8c.html</anchorfile>
      <anchor>a41d56141c1be10be0d18bc7407cdaefa</anchor>
      <arglist>(NODE *now, HTK_Param *param, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>next_word</name>
      <anchorfile>search__bestfirst__v1_8c.html</anchorfile>
      <anchor>ae1e32a3e0df8cb88e117cc199a2944cd</anchor>
      <arglist>(NODE *now, NODE *new, NEXTWORD *nword, HTK_Param *param, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start_word</name>
      <anchorfile>search__bestfirst__v1_8c.html</anchorfile>
      <anchor>a4e63ac5bc864b2ff06f3f9d01e3a3765</anchor>
      <arglist>(NODE *new, NEXTWORD *nword, HTK_Param *param, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>last_next_word</name>
      <anchorfile>search__bestfirst__v1_8c.html</anchorfile>
      <anchor>a390dcb33d81dfd0a58076bc0f5d76348</anchor>
      <arglist>(NODE *now, NODE *new, HTK_Param *param, RecogProcess *r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search_bestfirst_v2.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>search__bestfirst__v2_8c</filename>
  </compound>
  <compound kind="file">
    <name>spsegment.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>spsegment_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>is_sil</name>
      <anchorfile>spsegment_8c.html</anchorfile>
      <anchor>aa46181553f2c6d367f5a4e321f1f7c37</anchor>
      <arglist>(WORD_ID w, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mfcc_copy_to_rest_and_shrink</name>
      <anchorfile>spsegment_8c.html</anchorfile>
      <anchor>a878d22dc8e3c8a06177b282b0294fbe2</anchor>
      <arglist>(MFCCCalc *mfcc, int start, int end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mfcc_shrink</name>
      <anchorfile>spsegment_8c.html</anchorfile>
      <anchor>a9a3f4d700968b71847c483387a800f3b</anchor>
      <arglist>(MFCCCalc *mfcc, int p)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>detect_end_of_segment</name>
      <anchorfile>spsegment_8c.html</anchorfile>
      <anchor>acfe04d1bd0a3bfa9d97c6c1fc2b02bb7</anchor>
      <arglist>(RecogProcess *r, int time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalize_segment</name>
      <anchorfile>spsegment_8c.html</anchorfile>
      <anchor>ab93f30b557411f2b08b8351b5c59fcc3</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>spsegment_need_restart</name>
      <anchorfile>spsegment_8c.html</anchorfile>
      <anchor>ae4d825199dfb25b6eb63e5d3ef3527dd</anchor>
      <arglist>(Recog *recog, int *rf_ret, boolean *repro_ret)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spsegment_restart_mfccs</name>
      <anchorfile>spsegment_8c.html</anchorfile>
      <anchor>a1db01866f95de7152d71d20eeb388847</anchor>
      <arglist>(Recog *recog, int rewind_frame, boolean reprocess)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>useropt.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>useropt_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>useropt_free_all</name>
      <anchorfile>useropt_8c.html</anchorfile>
      <anchor>aa433b46227423587dbd3db68388b3b8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_add_option</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga806519f2220289c98cc34a71837f22d9</anchor>
      <arglist>(char *fmt, int argnum, int reqargnum, char *desc, boolean(*func)(Jconf *jconf, char *arg[], int argnum))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>useropt_exec</name>
      <anchorfile>useropt_8c.html</anchorfile>
      <anchor>ad6be4d37b43b13c98e73d2803f63ab24</anchor>
      <arglist>(Jconf *jconf, char *argv[], int argc, int *n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useropt_show_desc</name>
      <anchorfile>useropt_8c.html</anchorfile>
      <anchor>a14891b32df2a82273e27434245339087</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>version.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>version_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>CC</name>
      <anchorfile>version_8c.html</anchorfile>
      <anchor>a78d126676907aa89a0adbfbef8282585</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CFLAGS</name>
      <anchorfile>version_8c.html</anchorfile>
      <anchor>ad96068ccba4fb10c1ecd2faac6ca9935</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_put_header</name>
      <anchorfile>version_8c.html</anchorfile>
      <anchor>a557795dc6d08e6cefc4995694d80713a</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_put_version</name>
      <anchorfile>version_8c.html</anchorfile>
      <anchor>af0c746cb7dd3df03b12f645feffbfe62</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_put_compile_defs</name>
      <anchorfile>version_8c.html</anchorfile>
      <anchor>adef0baa0be531f76ec42356d5a4039a2</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_put_library_defs</name>
      <anchorfile>version_8c.html</anchorfile>
      <anchor>a6086b784e6eac3ec6356729019bf7810</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wav2mfcc.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>wav2mfcc_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>wav2mfcc</name>
      <anchorfile>wav2mfcc_8c.html</anchorfile>
      <anchor>a2a2208f8a010aaaeefc37c34b1d13b51</anchor>
      <arglist>(SP16 speech[], int speechlen, Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wchmm.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>wchmm_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>WCHMM_SIZE_CHECK</name>
      <anchorfile>wchmm_8c.html</anchorfile>
      <anchor>a39f65291c8316903ab31e3e35156a9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COUNT_STEP</name>
      <anchorfile>wchmm_8c.html</anchorfile>
      <anchor>a81266221298706a704dd0392988032f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>WCHMM_INFO *</type>
      <name>wchmm_new</name>
      <anchorfile>wchmm_8c.html</anchorfile>
      <anchor>a76c7f167b4d58e0f5397ee68f27f630a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wchmm_free</name>
      <anchorfile>wchmm_8c.html</anchorfile>
      <anchor>a54b32b05bbb3b5ec20a31ffbf54f009a</anchor>
      <arglist>(WCHMM_INFO *w)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>build_wchmm</name>
      <anchorfile>wchmm_8c.html</anchorfile>
      <anchor>ad5d885cf24bb7685190845ef155e0fc2</anchor>
      <arglist>(WCHMM_INFO *wchmm, JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>build_wchmm2</name>
      <anchorfile>wchmm_8c.html</anchorfile>
      <anchor>ae3857e8c1f203c55b2cea61f95d765c6</anchor>
      <arglist>(WCHMM_INFO *wchmm, JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_wchmm_info</name>
      <anchorfile>wchmm_8c.html</anchorfile>
      <anchor>af55f203ed6a20fb70f59ac9c755e1b05</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wchmm_check.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>wchmm__check_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>wchmm_check_interactive</name>
      <anchorfile>wchmm__check_8c.html</anchorfile>
      <anchor>afdd62be143d42468386c8ecb5b5ed15a</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check_wchmm</name>
      <anchorfile>wchmm__check_8c.html</anchorfile>
      <anchor>a72ca6900a7dbdad155304fe3cd687f18</anchor>
      <arglist>(WCHMM_INFO *wchmm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>word_align.c</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>word__align_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>word_align</name>
      <anchorfile>word__align_8c.html</anchorfile>
      <anchor>a3e88a2dac8eaa02c0597a3624079c7b0</anchor>
      <arglist>(WORD_ID *words, short wnum, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>word_rev_align</name>
      <anchorfile>word__align_8c.html</anchorfile>
      <anchor>acdfbf4f82a54d4c6c5f431e526b94c46</anchor>
      <arglist>(WORD_ID *revwords, short wnum, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>phoneme_align</name>
      <anchorfile>word__align_8c.html</anchorfile>
      <anchor>a9bcbf7c912c954734bb483192b9811a7</anchor>
      <arglist>(WORD_ID *words, short num, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>phoneme_rev_align</name>
      <anchorfile>word__align_8c.html</anchorfile>
      <anchor>aef18629a7838c4e50ff4c118003796ad</anchor>
      <arglist>(WORD_ID *revwords, short num, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>state_align</name>
      <anchorfile>word__align_8c.html</anchorfile>
      <anchor>aa9765f715dc307e71413fdd6aef35b0d</anchor>
      <arglist>(WORD_ID *words, short num, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>state_rev_align</name>
      <anchorfile>word__align_8c.html</anchorfile>
      <anchor>a717c296f0807887305203a6173bb7f9f</anchor>
      <arglist>(WORD_ID *revwords, short num, HTK_Param *param, SentenceAlign *align, RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_alignment_all</name>
      <anchorfile>word__align_8c.html</anchorfile>
      <anchor>a36d62de080469e911331d264ec692cc2</anchor>
      <arglist>(RecogProcess *r, HTK_Param *param)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>adin_8h</filename>
    <class kind="struct">DS_FILTER</class>
    <class kind="struct">DS_BUFFER</class>
    <class kind="struct">ZEROCROSS</class>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_WSTEP</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a1edece721bc8363c74be5d563745f433</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUPPORTED_WAVEFILE_FORMAT</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a25146cbc04cdb1f6429a0bd6764b03bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZMEANSAMPLES</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>adc09bc53ede982d0da79412507926d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DS_RBSIZE</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ac636fc1ce76dae4247c621196246710c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DS_BUFSIZE</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a3bd26143fb778a660bfbbf5a1542e770</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DS_BUFSIZE_Y</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a56a439116e6b4aa22d10b43c62be1a13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZC_UNDEF</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ab91c7d053b9102d8e74f42daa1d7a5d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZC_POSITIVE</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a299bea1e4db1cfbe4315ebb925757db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZC_NEGATIVE</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a8814e9ddeb592c74057483564b31945e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SP_RAWFILE</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ae4d5251432e1a9e6803c0240cc492e18a918f9a9ea9b45381e320f93030a798b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SP_MIC</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ae4d5251432e1a9e6803c0240cc492e18a5279e8beb019f0ed6ca5a20ebd26c74e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SP_ADINNET</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ae4d5251432e1a9e6803c0240cc492e18a7019c1d53c7ff92c03197caf33cb463a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SP_MFCFILE</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ae4d5251432e1a9e6803c0240cc492e18aac934ca0975ed905998c12c769e30fb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SP_NETAUDIO</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ae4d5251432e1a9e6803c0240cc492e18a0d2e170ac8c44a36483947bed2ac321e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SP_STDIN</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ae4d5251432e1a9e6803c0240cc492e18a8a528350cde5fc18e1b37f48c20adb0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SP_MFCMODULE</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ae4d5251432e1a9e6803c0240cc492e18a2f8fc47b633d2d67775a6bef3cbcde21</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_standby</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>aeca895210180bd5d79f352acfc0ae20b</anchor>
      <arglist>(int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_begin</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a956fb4355c7cd585917feb87f83f64f3</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_end</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a3301c0f32c4d9eb4d0ad161c3c7ac8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_mic_read</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>aff81929bac37075424a5b4de9d518b34</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_mic_input_name</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a3f993c0eff0c416afe84fe1ff21b9d5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_alsa_standby</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a8d526c6b7f3d90250c157dca08b65a6b</anchor>
      <arglist>(int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_alsa_begin</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ab274bc17728cf4865c5f664ba034860f</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_alsa_end</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>af68e1fc8e39b237dfc31b6976dff5cd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_alsa_read</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>aec4e745ecb2171736e5845d484f2a90f</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_alsa_input_name</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>afd7d152a511883ed1b3065494fedbb3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_oss_standby</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>afd5ca4227c3e4c7f5356daa6cf311439</anchor>
      <arglist>(int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_oss_begin</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a655b3575616a9f50cfc25ee4e12b004d</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_oss_end</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a7b4b4996ce68e640ef608dbfc2a1695e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_oss_read</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>acc2e24afcafe9e1f5b8b3668d85f2eee</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_oss_input_name</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a82b5d8507c9535ce44b3b3c4f18257a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_esd_standby</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a51dcfd75bbd1e94367099efa62741c1c</anchor>
      <arglist>(int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_esd_begin</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a72d765c20db97f3b4691cd327375e48c</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_esd_end</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a4fad87d5967eeb41521b4df9e9f4e625</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_esd_read</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ad3fbdafa57c58671985024d3c03c966f</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_esd_input_name</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a35bac4e0d5664cf6754f5a076675cc51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_netaudio_standby</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>afd75070f9fbeb976d4e81e86cb845997</anchor>
      <arglist>(int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_netaudio_begin</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a3c2bf36a429795984c3b825b5881b6cb</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_netaudio_end</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a180a400fd26b0ebade440e8792e22dfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_netaudio_read</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a828bf31b8cee2ef32f815774a7bd58a4</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_netaudio_input_name</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>af2050419057fdfff3c47923e70175631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NA_standby</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a842bdf538ef7353a3f6275ae34c4c9ea</anchor>
      <arglist>(int, char *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NA_start</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a7ca23678adf065a20a613c0c83e6558b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NA_stop</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a41235416ae9d8821d7dbc71cb7a55109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NA_read</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>aa2aa62c9e5db0150afc1d97767eb713e</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_file_standby</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a5f978ed17915e0cf12277f3a1fcb7d8e</anchor>
      <arglist>(int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_file_begin</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a3890b1279c594fab6ee96f8f34be99ef</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_file_read</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a96ee59a5d22054e83866175bfc1e2ad3</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_file_end</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>afd1e0e33256918da1d2bebcbf7f419ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_stdin_standby</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>af654236c02a46dc7f156e1cb45981cbb</anchor>
      <arglist>(int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_stdin_begin</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ae571181a612f5119b66b7eb434f9a4cd</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_stdin_read</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>aa99eb32852126217230930f1530cf43b</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_file_get_current_filename</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a040f4f3d0d79cb834faaee8f09281e51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_stdin_input_name</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a66632fbed1ec2c92979983a93b98a684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_standby</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a63587639abf7159d81950d6f9c9206b2</anchor>
      <arglist>(int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_begin</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a3ab5c6bd404da566b66c3ab6cd574ff7</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_end</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a8cfe4d597afd2720ad31bbe97c6a492b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_tcpip_read</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a7e0e3b964d157fbac72c8f7bdd5dd3b3</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_send_pause</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a99804bff2bcff9931b534f528d558db4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_send_terminate</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a43a8d2b7f9c94fea36ef9444a9100ec3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_send_resume</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>aaa7d4cbeba017c77969db0461baf6994</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_tcpip_input_name</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a2b7a1d1c9cba51fa89f18b381b6e1a17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_count_zc_e</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a9a6d250e718aa3fa1e854d229c35212d</anchor>
      <arglist>(ZEROCROSS *zc, int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_count_zc_e</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a47c6c10a74896bfa9c7688604acf6c3e</anchor>
      <arglist>(ZEROCROSS *zc, int c_trigger, int c_length, int c_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_count_zc_e</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ad4a04b11ca33a1d79edd4d07f05f13b0</anchor>
      <arglist>(ZEROCROSS *zc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count_zc_e</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a7350801f0f87a2e54e3c92399237c63a</anchor>
      <arglist>(ZEROCROSS *zc, SP16 *buf, int step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zc_copy_buffer</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ac47b619189c4df5deb144643901fac7d</anchor>
      <arglist>(ZEROCROSS *zc, SP16 *newbuf, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zmean_reset</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>ad4432838ef34ee9600f4cdd5e64e0902</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sub_zmean</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a935573df387b411621147644ddb66f7e</anchor>
      <arglist>(SP16 *speech, int samplenum)</arglist>
    </member>
    <member kind="function">
      <type>DS_BUFFER *</type>
      <name>ds48to16_new</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a65b1a3eb0ddee7a41de13a65cae0aa29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ds48to16_free</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>a3d9ea810fb58be5e8fd801267109adc3</anchor>
      <arglist>(DS_BUFFER *ds)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ds48to16</name>
      <anchorfile>adin_8h.html</anchorfile>
      <anchor>abb8fbab7d78738215f0dac96863f05c2</anchor>
      <arglist>(SP16 *dst, SP16 *src, int srclen, int maxdstlen, DS_BUFFER *ds)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hmm.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>hmm_8h</filename>
    <class kind="struct">_a_cell</class>
    <class kind="struct">HMM_STATE</class>
    <class kind="struct">HMM</class>
    <class kind="struct">_seg_token</class>
    <member kind="typedef">
      <type>struct _a_cell</type>
      <name>A_CELL</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>aa68ff5017442deea205ba40162c31e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _seg_token</type>
      <name>SEGTOKEN</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>aa9b8d05240d714b0f07c7a7a9038c420</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>HMM *</type>
      <name>new_make_word_hmm</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a79126cc1b5413ed0f047f99498bf50a1</anchor>
      <arglist>(HTK_HMM_INFO *, HMM_Logical **, int, boolean *)</arglist>
    </member>
    <member kind="function">
      <type>HMM *</type>
      <name>new_make_word_hmm_with_lm</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a5e0b9721f7ab739f9c6c87a707361956</anchor>
      <arglist>(HTK_HMM_INFO *, HMM_Logical **, int, boolean *, LOGPROB *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_hmm</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a7a2f32eeb200564e31825b29b449a38c</anchor>
      <arglist>(HMM *)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>viterbi_segment</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a7474a57dd2926154c1b7bb0d7dc69d9d</anchor>
      <arglist>(HMM *hmm, HTK_Param *param, HMMWork *wrk, boolean multipath, int *endstates, int ulen, int **id_ret, int **seg_ret, LOGPROB **uscore_ret, int *retlen)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>outprob</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a82261fe7bb0ce60fe98aed32a9c59c2a</anchor>
      <arglist>(HMMWork *wrk, int t, HMM_STATE *hmmstate, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_hmm_arc</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a078fb4d6062be4b53157e9367334f881</anchor>
      <arglist>(FILE *fp, HMM *d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_hmm_outprob</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a1f3fdd14a9c2a2b78b576212658f6ce4</anchor>
      <arglist>(FILE *fp, HMM *d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_hmm</name>
      <anchorfile>hmm_8h.html</anchorfile>
      <anchor>a87a8b665c2a87f094e5b9a52f123a2f5</anchor>
      <arglist>(FILE *fp, HMM *d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hmm_calc.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>hmm__calc_8h</filename>
    <class kind="struct">MIXCACHE</class>
    <class kind="struct">__hmmwork__</class>
    <member kind="define">
      <type>#define</type>
      <name>TMBEAMWIDTH</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>af3d9e38529eaff6e96ad0b31ddbd2a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __hmmwork__</type>
      <name>HMMWork</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a6bd8f8727315763a09c4524511099a18</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_log_tbl</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>aebdb3c07e84f554c46f6a60235b4286e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>addlog</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>aaa46c6a69af0a26821f7672125ba3d3e</anchor>
      <arglist>(LOGPROB x, LOGPROB y)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>addlog_array</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a8a3a8a85d32a3eb55ca38bcc3bfaa1a2</anchor>
      <arglist>(LOGPROB *x, int n)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>outprob_init</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a77b1019b645bef97232da674d73d3884</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_INFO *hmminfo, HTK_HMM_INFO *gshmm, int gms_num, int gprune_method, int gprune_mixnum)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>outprob_prepare</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a2ce20a3f6244025b75965aa93d791176</anchor>
      <arglist>(HMMWork *wrk, int framenum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outprob_free</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>ac989dc74eea72fd7578fba701f23a675</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>outprob_cache_init</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a35a8dc0f1778bf5c300a5a0eb3500615</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>outprob_cache_prepare</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>ad9c28af649859647a6e23a4ba02a816a</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outprob_cache_free</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a5204927358b2e6473c21243777de3655</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>outprob_state</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>af8403cde97f405069c9ba34d75c9b41a</anchor>
      <arglist>(HMMWork *wrk, int t, HTK_HMM_State *stateinfo, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outprob_cd_nbest_init</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a726d677d0530bdf983e6a3d8a8742fb6</anchor>
      <arglist>(HMMWork *wrk, int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outprob_cd_nbest_free</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a732794f818dcf3822596b21ef59d8ca1</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>outprob_cd</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a6595146c2b90142e16a2bd7e6fb3aacd</anchor>
      <arglist>(HMMWork *wrk, int t, CD_State_Set *lset, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gms_init</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>ae3943d48628eeae589938f6dd53085b5</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gms_prepare</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>aed76e0be60e6d936c7ee0beee7ceea27</anchor>
      <arglist>(HMMWork *wrk, int framelen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gms_free</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a8dcf75bd0b8248230bc7d0c0916a833e</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>gms_state</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a36352b2ab066b484a9601a60e4025d72</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gms_gprune_init</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a56bde870da4f120e78a75fe8d45bd2ac</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gms_gprune_prepare</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>ad8f4b8d967e3821b3b4f5839182ac538</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gms_gprune_free</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a41a245a2683cff2b4099677d5a7b0f93</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_gs_scores</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>af6a3f2eea21d1fd016285d877967db0f</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>calc_mix</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>adee853004316d81e67196bfbf09174b2</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>calc_tied_mix_init</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a5047ded595cc72e6e28461d5098ebe4b</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>calc_tied_mix_prepare</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>afc6924bae9248171ddc828ba49aae1a7</anchor>
      <arglist>(HMMWork *wrk, int framenum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_tied_mix_free</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>af931795f379068facc7d68b586db661a</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>calc_tied_mix</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>ad1e2568c7ad2d950fa43e96854428546</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>calc_compound_mix</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a3e70b0e16a394f8cc5ab5b06d5515759</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cache_push</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a8e91cb75a98f3a15a4745ccc4ad38d43</anchor>
      <arglist>(HMMWork *wrk, int id, LOGPROB score, int len)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>compute_g_base</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>afd22229849a4f57c2765ef5dbd18a5a3</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens *binfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gprune_none_init</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a8881786635567a8dccc1b67b2430303a</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_none_free</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a105669f3330424cd9f5749d88a13edda</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_none</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a436b971b31925a3f0cf1b9a746f69d0d</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens **g, int num, int *last_id, int lnum)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>compute_g_safe</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a3ff519469af3adc154fd16d870d4ef76</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens *binfo, LOGPROB thres)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gprune_safe_init</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a81670a13685bdc34aa6ada19badbea2c</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_safe_free</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a668cec8f38b6191c7c68b4f6f592388d</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_safe</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a04cfcf852e9380d974875ab77fcaa02c</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens **g, int gnum, int *last_id, int lnum)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gprune_heu_init</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a9609f5e188579080c67384c978c50c75</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_heu_free</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>adeb19ba31f1d3849bccfd799d1b5fd1c</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_heu</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a91c87c949fbff727844446af5c09453d</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens **g, int gnum, int *last_id, int lnum)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gprune_beam_init</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>aac4d8905431dc7917487f7abf32e6bfc</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_beam_free</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a7cd38d84a9a5708f450b2bb9d4784396</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_beam</name>
      <anchorfile>hmm__calc_8h.html</anchorfile>
      <anchor>a3fafbfe36189faeefbd5ebd7bc3cc003</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens **g, int gnum, int *last_id, int lnum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>htk_defs.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>htk__defs_8h</filename>
    <class kind="struct">OptionStr</class>
    <member kind="define">
      <type>#define</type>
      <name>F_ENERGY</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>ad458d652cbd1921dc4d8796b0eab5dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_ENERGY_SUP</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>adabbd1aa8ce6db5d96d482bd1aa97830</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_DELTA</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a0985d386e5604b94460bb60ac639d383</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_ACCL</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aa6049e12921b0c7c9018df1cfa6da96e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_COMPRESS</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>ac88595525d34a40e57c02a1a48440157</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_CEPNORM</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>ac191b717d96384a1a31530ff7e4f3548</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_CHECKSUM</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a7cd27c92eeace0dbca731546ada57965</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_ZEROTH</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a3b468a6114e939fbeec884ead0a86a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F_BASEMASK</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a019a7f6f1f4615d9b8b59d5af722f4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINHMM_HEADER</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aeb2ff370c7c1d67bd6bdc964e50bb330</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINHMM_HEADER_V2</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a8c638500201125ace2f1a96a05d662ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINHMM_HEADER_V2_EMBEDPARA</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a0f0ddcc5731c31a3d5b822359304140e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINHMM_HEADER_V2_VARINV</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a5ccf7ef0d3db2ae92c3992e585178f25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINHMM_HEADER_V2_MPDFMACRO</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a4b1e48098cbbb5a5423e8deaf287c2de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSTREAMNUM</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a3b823ca873a521e1976966e0b07303f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>parameter_type</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aaf66a41111eeae57a19aa7295cd6ffef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F_WAVEFORM</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aaf66a41111eeae57a19aa7295cd6ffefa5d1868bb8aeb4c7d89d26792252d937d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F_LPC</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aaf66a41111eeae57a19aa7295cd6ffefa3389cca42d2ff407b1d51d19774143dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F_LPREFC</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aaf66a41111eeae57a19aa7295cd6ffefa70d7e67776410406fe9a77f979f47a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F_LPCEPSTRA</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aaf66a41111eeae57a19aa7295cd6ffefa6e430deaf3db1f9e8ecd426efc379338</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F_MFCC</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aaf66a41111eeae57a19aa7295cd6ffefa6c1d1bce3fb2c89ff4f5905f94570180</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F_FBANK</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aaf66a41111eeae57a19aa7295cd6ffefaec6a115938f75672e1ce6e0ecc0ba1f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F_MELSPEC</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aaf66a41111eeae57a19aa7295cd6ffefa2715026bfbdf2a00f5fa9df71ebd7919</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F_DISCRETE</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aaf66a41111eeae57a19aa7295cd6ffefa7dcb3b854529831b86811c5ea7374224</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F_ERR_INVALID</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aaf66a41111eeae57a19aa7295cd6ffefa21a8ac01199dfd5cb778fa9da2eda690</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>C_DIAG_C</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aac34dfe6c6b73b43a4656c9dce041034a4d494befb21eba864b38214021b67e12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>C_INV_DIAG</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aac34dfe6c6b73b43a4656c9dce041034a52c9c592bad16602ca886d6f83259cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>C_FULL</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aac34dfe6c6b73b43a4656c9dce041034a7db5d7a5dd1a49314a09ef3040282b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>C_LLT</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>aac34dfe6c6b73b43a4656c9dce041034a6ff9964789dd1be13d5800d01738a23b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D_NULL</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a0ed680fdb405e7195d9f14032851eebbac0ff8c0cf2e7105fc283f07004d08c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D_POISSON</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a0ed680fdb405e7195d9f14032851eebba6536daa9b072fe56c3f9673f237edcf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D_GAMMA</name>
      <anchorfile>htk__defs_8h.html</anchorfile>
      <anchor>a0ed680fdb405e7195d9f14032851eebba16deeb8df62f8b64740714d4a5b7243c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>htk_hmm.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>htk__hmm_8h</filename>
    <class kind="struct">HTK_HMM_StreamInfo</class>
    <class kind="struct">HTK_HMM_Options</class>
    <class kind="struct">_HTK_HMM_trans</class>
    <class kind="struct">_HTK_HMM_variance</class>
    <class kind="struct">_HTK_HMM_dens</class>
    <class kind="struct">_HTK_HMM_stream_weight</class>
    <class kind="struct">_HTK_HMM_PDF</class>
    <class kind="struct">_HTK_HMM_state</class>
    <class kind="struct">_HTK_HMM_data</class>
    <class kind="struct">GCODEBOOK</class>
    <class kind="struct">GS_SET</class>
    <class kind="struct">CD_State_Set</class>
    <class kind="struct">_cd_set</class>
    <class kind="struct">HMM_CDSET_INFO</class>
    <class kind="struct">_HMM_logical</class>
    <class kind="struct">BASEPHONE</class>
    <class kind="struct">HMM_basephone</class>
    <class kind="struct">HTK_HMM_INFO</class>
    <member kind="define">
      <type>#define</type>
      <name>currentis</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>adf85179a2ff0fefbd4a3471d22907d04</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NoTokErr</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a8346efbb30c35d61be5e9d50dc97d190</anchor>
      <arglist>(S)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HMMDEF_DELM</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a4b1b219399e237b0767eee0ae9183c18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_STATE_NUM</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga3a6d9f0dc2a809b011230c11a53e96be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HMM_RC_DLIM</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gaf31879ab7697a269206c72687f6e931a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HMM_LC_DLIM</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga0898042467a0255c44522ed1e9f16f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HMM_RC_DLIM_C</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gafe32184fcc3e1aef610bc20f0ff4dfb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HMM_LC_DLIM_C</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gafc95185b98919cdddbb1d0f43e67d034</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPMODEL_NAME_DEFAULT</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gafa17d5be9e43a169e42af6ab9d4106bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_HMMNAME_LEN</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga03339d0923a3899e303b85dae880a0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_trans</type>
      <name>HTK_HMM_Trans</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga8ab5c5219c3655485a76c379b8294c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_variance</type>
      <name>HTK_HMM_Var</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gaab6f75417b0e1fe9e9ca80224b312d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_dens</type>
      <name>HTK_HMM_Dens</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga6986f1830e0ff36c27e812d55b5ec9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_stream_weight</type>
      <name>HTK_HMM_StreamWeight</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga4ea4fc181e4978fbd6c324c89dbb438d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_PDF</type>
      <name>HTK_HMM_PDF</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga4d2b789fadf7f3f6b5a1e3a67c80f48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_state</type>
      <name>HTK_HMM_State</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga5baa80cfe7ecbddc5c6190f995deb4ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_data</type>
      <name>HTK_HMM_Data</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga9c34c4e14e0e57e7781a3b99576499a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _cd_set</type>
      <name>CD_Set</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga9317cf1051eb7a551208e279b400c8cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HMM_logical</type>
      <name>HMM_Logical</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>gac1b6e3797d0942199f330ff2026347cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>iwcd_type</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga93934e278971e926c03d75c74bc7262d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IWCD_UNDEF</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gga93934e278971e926c03d75c74bc7262daf57116b0c32931227663cc80c8975c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IWCD_MAX</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gga93934e278971e926c03d75c74bc7262daba15835add05a3dccf473ea35e53bc8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IWCD_AVG</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gga93934e278971e926c03d75c74bc7262dab84bb92cc30dfb8b29156e644e0df4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IWCD_NBEST</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gga93934e278971e926c03d75c74bc7262da549bc04192bb9b38cb548dad0bc6a92c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>htk_hmm_set_pause_model</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a8ff76ebf297709cfbfb114faf706078f</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *spmodel_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rderr</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a55d42585f49ab19a57d29167344540f3</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>read_token</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>aa00f4c8847e392218999db9b06e0599a</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>rdhmmdef</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a6fb224dc5778ed193ffc5c021d01f2bb</anchor>
      <arglist>(FILE *, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>htk_hmm_inverse_variances</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a2fa7a70a92f6e181f7f0ee98ee176251</anchor>
      <arglist>(HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>set_global_opt</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a679cb69c0e0d8f9a63e472a77f78dffc</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_cov_str</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a4be53b810a925959c1c6780d30e88c94</anchor>
      <arglist>(short covtype)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_dur_str</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a0e1bad38e68b36390027aee5ae067e15</anchor>
      <arglist>(short durtype)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trans_add</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>ab6864c5e7a76f9e103266fb8d72eee72</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_Trans *newParam)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Trans *</type>
      <name>get_trans_data</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a4218121b5f1a2917ce9ca77a7a74e97d</anchor>
      <arglist>(FILE *, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_trans_macro</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a46f87bfb96f406493344a69ac2012d57</anchor>
      <arglist>(char *, FILE *, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_State *</type>
      <name>get_state_data</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a9268db9eeee634ba9684cdd47df67261</anchor>
      <arglist>(FILE *, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_state_macro</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a9a1fe2142a6ea3458df2ee346d292d5b</anchor>
      <arglist>(char *, FILE *, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_State *</type>
      <name>state_lookup</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>af2425542b70345cfa5a386c4c29bb200</anchor>
      <arglist>(HTK_HMM_INFO *hmm, char *keyname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>state_add</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a2767e05b223b3d565c5e9ac6312bd632</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_State *newParam)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mpdf_add</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>abf9ee17d21ca1e7b67412daf01d0fbe1</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_PDF *newParam)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_PDF *</type>
      <name>mpdf_lookup</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>ab3df2a84b03f04949dc29db1aeaf0cf2</anchor>
      <arglist>(HTK_HMM_INFO *hmm, char *keyname)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_PDF *</type>
      <name>get_mpdf_data</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>ae696f1dbf8854d6f896e132790628469</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm, int mix_num, short stream_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_mpdf_macro</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>aa20a47d98a20020aecb88762c0e959ab</anchor>
      <arglist>(char *name, FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Dens *</type>
      <name>get_dens_data</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a586ea51b5c0e6b2ad57d4b9b5c35fcf8</anchor>
      <arglist>(FILE *, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_dens_macro</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>af56227c64fccf5cbc580d456d3459623</anchor>
      <arglist>(char *, FILE *, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Dens *</type>
      <name>dens_lookup</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a247a11750900b850cc08a62a6face126</anchor>
      <arglist>(HTK_HMM_INFO *hmm, char *keyname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dens_add</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a5a8bff40dad53c9967870ff3766200f0</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_Dens *newParam)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Var *</type>
      <name>get_var_data</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>afef2979f0beb5fd6614669099466f516</anchor>
      <arglist>(FILE *, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_var_macro</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a52a0106c29a5feabdf434436ae3a6af6</anchor>
      <arglist>(char *, FILE *, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>var_add</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a27c8bd1aeaee4c5eeaf39fe117e7aedc</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_Var *newParam)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_StreamWeight *</type>
      <name>get_streamweight_data</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>ad2db00fb24c2b6f9737b861a28e88829</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_streamweight_macro</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a32c12bdc8c4bef5a66b6c37a31c73dc1</anchor>
      <arglist>(char *, FILE *, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sw_add</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a35ac2033053e1cab2e24e305e6394ccf</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_StreamWeight *newParam)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_HMM</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a692e05e692042bf0f03d8e07d3d3ee82</anchor>
      <arglist>(char *, FILE *, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Data *</type>
      <name>htk_hmmdata_new</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a08cc2ce0417730cb679dc7edb0d1dc65</anchor>
      <arglist>(HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>htk_hmmdata_add</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a75ed10101859ff07e44c2828a0185eb3</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_Data *newParam)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tmix_read</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a4797bfb92af440bf4e81d63598ba40b6</anchor>
      <arglist>(FILE *fp, HTK_HMM_PDF *mpdf, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>codebook_add</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a37a07fed47bdf7da70d9a912f2f0ae48</anchor>
      <arglist>(HTK_HMM_INFO *hmm, GCODEBOOK *newParam)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_regtree_macro</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>aba05b25f56e06b4ac19de684ccaf6d43</anchor>
      <arglist>(char *name, FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>rdhmmlist</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a8ffedd8b1432fc8fd0f7fc364a931e23</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_htk_trans</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a03091e4fe0b1fb2be0394d393119ebcf</anchor>
      <arglist>(FILE *fp, HTK_HMM_Trans *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_htk_var</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a6c89650fe0422ca6055ea8361f49ea1e</anchor>
      <arglist>(FILE *fp, HTK_HMM_Var *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_htk_dens</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a49623849b226924f8c33fa0d88a6380c</anchor>
      <arglist>(FILE *fp, HTK_HMM_Dens *d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_htk_mpdf</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a51e83462b474e6bc433f8d5a3b66fece</anchor>
      <arglist>(FILE *fp, HTK_HMM_PDF *m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_htk_state</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>acbece7425822ac6997c59060effd7f82</anchor>
      <arglist>(FILE *fp, HTK_HMM_State *s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_htk_hmm</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a4edda233b01719ec1980e5552623cdfd</anchor>
      <arglist>(FILE *fp, HTK_HMM_Data *h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_logical_hmm</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>afdc774accc47af4074f1dcb29cddd526</anchor>
      <arglist>(FILE *fp, HMM_Logical *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_hmmdef_info</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a30adc689e0456b10b938a95476860908</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_INFO *</type>
      <name>hmminfo_new</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>acf12ed77b7c19e86775b7b7efb891472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hmminfo_free</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a64de6f6bddb1bf9a2b2d8b32bfef19f5</anchor>
      <arglist>(HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>init_hmminfo</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>abb016ce239d13645edf11c5f16be5c95</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *filename, char *mapfile, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Data *</type>
      <name>htk_hmmdata_lookup_physical</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a35cfdc8049367dcdf8ac85f9bcc1bd90</anchor>
      <arglist>(HTK_HMM_INFO *, char *)</arglist>
    </member>
    <member kind="function">
      <type>HMM_Logical *</type>
      <name>htk_hmmdata_lookup_logical</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>acd2ceb35c30f2c75ec98ebafb50d980a</anchor>
      <arglist>(HTK_HMM_INFO *, char *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_add_physical_to_logical</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a9d19a2cc9c9298150e2911baa37d8a20</anchor>
      <arglist>(HTK_HMM_INFO *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_add_pseudo_phones</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>aa85aae89a9ab869f1e24b5d894728d6d</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_hmm_basephone_list</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a400cc3d69720e9bb0a7118ada8bf64f1</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>htk_hmm_has_several_arc_on_edge</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a23e0b8ac38b52d16f175e32af8a009ef</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>check_hmm_limit</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a753590f66d41d96ef5bd1eb17f02efdd</anchor>
      <arglist>(HTK_HMM_Data *dt)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>check_all_hmm_limit</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>ad31b41da4c98cfce34d09dd24ef5c8f5</anchor>
      <arglist>(HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>check_hmm_options</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>aa7a3fac65c817708470b7741fcd401d9</anchor>
      <arglist>(HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>is_skippable_model</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a5576bdca4b5b4a84c15eab97ca127d10</anchor>
      <arglist>(HTK_HMM_Data *d)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>guess_if_cd_hmm</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>ad55abc7bcc8b3dc20dddcf098970b335</anchor>
      <arglist>(HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>HMM_Logical *</type>
      <name>get_right_context_HMM</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>aa1889d466b62af7ebb10a4f630fad280</anchor>
      <arglist>(HMM_Logical *base, char *rc_name, HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>HMM_Logical *</type>
      <name>get_left_context_HMM</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a402efa2185847de8425955aa37707377</anchor>
      <arglist>(HMM_Logical *base, char *lc_name, HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_right_context</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a68c358baa949e005d624651b072a5cb6</anchor>
      <arglist>(char name[], char *rc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_left_context</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a521d95610433e215a900fdf935b6eb6a</anchor>
      <arglist>(char name[], char *lc)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>center_name</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a6485b164784185954a7c855f5c559e29</anchor>
      <arglist>(char *hmmname, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>leftcenter_name</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a46a3aa339f446233fc2f35ae7433dbb5</anchor>
      <arglist>(char *hmmname, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>rightcenter_name</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>ab7dfe80c2d4976575ab85d3d6fcb63a9</anchor>
      <arglist>(char *hmmname, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>regist_cdset</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a82ea08274488fb21c3820de4584b8c5c</anchor>
      <arglist>(APATNODE **root, HTK_HMM_Data *d, char *cdname, BMALLOC_BASE **mroot)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>make_cdset</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>ad0eece72a2aa126991a7029465406813</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_all_cdinfo</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a058d7cf32cbd329a5516948dc4a70d29</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_cdset</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a21361fa87ab20786215d960324f9ba74</anchor>
      <arglist>(APATNODE **root, BMALLOC_BASE **mroot)</arglist>
    </member>
    <member kind="function">
      <type>CD_Set *</type>
      <name>cdset_lookup</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a43f616f3bfab4e116b3a447857049515</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *cdstr)</arglist>
    </member>
    <member kind="function">
      <type>CD_Set *</type>
      <name>lcdset_lookup_by_hmmname</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a6787796b1a041b3f9752003920da78b6</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *hmmname)</arglist>
    </member>
    <member kind="function">
      <type>CD_Set *</type>
      <name>rcdset_lookup_by_hmmname</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>ae84b6e22a78467fd9a7d89ad95013e31</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *hmmname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hmm_logical_state_num</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>aca37551517562412111c56c8e7daffff</anchor>
      <arglist>(HMM_Logical *lg)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Trans *</type>
      <name>hmm_logical_trans</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a84527d417b5caea36190ff9ec267630d</anchor>
      <arglist>(HMM_Logical *lg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>check_param_coherence</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a7a25b4b7806a73f02c007829efd84382</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_Param *pinfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>check_param_basetype</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a470fb92e4b732c5d075c1fa24325d50f</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_Param *pinfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>param_check_and_adjust</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a3702c73cd464d7ca1ad3c8aff8ce1b87</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_Param *pinfo, boolean vflag)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>write_binhmm</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>a0d55469f8bdc25ff87cee71ab2b95edd</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>read_binhmm</name>
      <anchorfile>htk__hmm_8h.html</anchorfile>
      <anchor>ac9770f1fd81137791e52bd371e10a729</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm, boolean gzfile_p, Value *para)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>htk_param.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>htk__param_8h</filename>
    <class kind="struct">HTK_Param_Header</class>
    <class kind="struct">HTK_Param</class>
    <member kind="define">
      <type>#define</type>
      <name>HTK_PARAM_INCREMENT_STEP_FRAME</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>a994d40adef85b54ca3e45665be474e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>rdparam</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>aaa83837144da31994a0c2360a11b6421</anchor>
      <arglist>(char *, HTK_Param *)</arglist>
    </member>
    <member kind="function">
      <type>HTK_Param *</type>
      <name>new_param</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>a4b7587476fc6c3488b6523adfa14bfcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_param</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>a8f34ed5d08167113485c9b7670a2d2a2</anchor>
      <arglist>(HTK_Param *)</arglist>
    </member>
    <member kind="function">
      <type>short</type>
      <name>param_qualstr2code</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>aa65e077664c2f63f9a9201be7516cfd1</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>short</type>
      <name>param_str2code</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>add5baf64d92019b32f2f07852b5550c6</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>param_qualcode2str</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>ad3b8ad4c6ecd9258f4f6fb536925b335</anchor>
      <arglist>(char *, short, boolean)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>param_code2str</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>a68c85dd0d60a67ad91149c35bce8054f</anchor>
      <arglist>(char *, short, boolean)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>guess_basenum</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>a159b0c2655746ce1c712ccffeb9b806f</anchor>
      <arglist>(HTK_Param *p, short qualtype)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>param_strip_zero</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>a5dbb9b6ec69e3bc5dfc841945c465cf3</anchor>
      <arglist>(HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>param_init_content</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>a89d74c5f2eaf30962d13b9004f948745</anchor>
      <arglist>(HTK_Param *p)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>param_alloc</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>a33a3b640adc68923dfcdedc31d7d26a3</anchor>
      <arglist>(HTK_Param *p, unsigned int samplenum, short veclen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>param_free_content</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>a9c95f5c5e86c249d25269ee4e182d178</anchor>
      <arglist>(HTK_Param *p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_param_head</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>aad66cd39d365a6fbf43a8a8b968bc922</anchor>
      <arglist>(FILE *fp, HTK_Param_Header *h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_vec</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>aa3fb7583f20544f2481284464c0a3600</anchor>
      <arglist>(FILE *fp, VECT **p, int num, short veclen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_param</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>a8268b856547c74bed4effc5e6e45bb5b</anchor>
      <arglist>(FILE *fp, HTK_Param *pinfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_param_info</name>
      <anchorfile>htk__param_8h.html</anchorfile>
      <anchor>ad2347a444438305900d1436a36228b1b</anchor>
      <arglist>(FILE *fp, HTK_Param *pinfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>machines.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>machines_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>strcasecmp</name>
      <anchorfile>machines_8h.html</anchorfile>
      <anchor>a8a09ab483b8e2cd3d33a40836360d4d7</anchor>
      <arglist>(char *s1, char *s2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strncasecmp</name>
      <anchorfile>machines_8h.html</anchorfile>
      <anchor>acdb63bb9bb0d435c20cffd9218655e19</anchor>
      <arglist>(char *s1, char *s2, size_t n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mfcc.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>mfcc_8h</filename>
    <class kind="struct">Value</class>
    <class kind="struct">FBankInfo</class>
    <class kind="struct">DeltaBuf</class>
    <class kind="struct">MFCCWork</class>
    <class kind="struct">CMEAN</class>
    <class kind="struct">CMNWork</class>
    <class kind="struct">ENERGYWork</class>
    <member kind="define">
      <type>#define</type>
      <name>CPMAX</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>aa934d4f18322a083b0446c8a49285ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CPSTEP</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>aed2f3875a5a0d1bf045861ece6ef80f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_SMPPERIOD</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a7b19b97b56a2bc361b992e9103ac7a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_FRAMESIZE</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>aaa9abb031f1b70d3905e21953d0d6f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_FFTNUM</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a6e61402c868b37370cbd5dd756b23d29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_FRAMESHIFT</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>ace26818f8f34a9c544dd29765c9c8036</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_PREENPH</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>aa9e50f4adea01c189dc5d95ced819c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_MFCCDIM</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>add671797152c7acf1689be443161bf05</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_CEPLIF</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a3b527c06827879c342633774e11da393</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_FBANK</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a90e0175a2495bf858b3a568a7d197854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_DELWIN</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a110a60cb3ff78760de0a3a1c77d89553</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_ACCWIN</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>ad32ab873317a596c2ba8aa78d028d050</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_SILFLOOR</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>aa4b41adfa8c87b284d79f235dd02b7b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_ESCALE</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a1e6d34fe19b3353eab2258622fa1a5aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_SSALPHA</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>ae93842e990d403c99463b035fe8992ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_SSFLOOR</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a56a561e3fe4d41bf3e05f9584962487a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VALUE_VERSION</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a75280acdc2cac7f1a491e910511565ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>MFCCWork *</type>
      <name>WMP_work_new</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a96c2975f17a789a86539cbff4c39dcc6</anchor>
      <arglist>(Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WMP_calc</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>af794b54bfb4c2aeb8ef675ca2f0fd566</anchor>
      <arglist>(MFCCWork *w, float *mfcc, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WMP_free</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>ac9511ad27b7befd0c3eec2a93ab433d2</anchor>
      <arglist>(MFCCWork *w)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>InitFBank</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a6412e9da1e506ee437f548a8906371ee</anchor>
      <arglist>(MFCCWork *w, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeFBank</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a1e3b9b4a729f486a5af22045864e64d8</anchor>
      <arglist>(FBankInfo *fb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Hamming</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a74c65105fd6ba645a1bc3ae7feecd53f</anchor>
      <arglist>(float *wave, int framesize, MFCCWork *w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PreEmphasise</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>ac8885357f13871f4a8feaf9707f9a9a6</anchor>
      <arglist>(float *wave, int framesize, float preEmph)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Mel</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a0c073b0ee46effe967997f6a03b0c3df</anchor>
      <arglist>(int k, float fres)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FFT</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a5526fd252379de6dfd10e576e44e1a62</anchor>
      <arglist>(float *xRe, float *xIm, int p, MFCCWork *w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeFBank</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>aafd0417f60f9e00ef9e239900aa77733</anchor>
      <arglist>(float *wave, MFCCWork *w, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeMFCC</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a85e91c3fc3199ae237197bb2c757b18d</anchor>
      <arglist>(float *mfcc, Value *para, MFCCWork *w)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>CalcC0</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>ae0f7344497d9636c31835263d1e7241a</anchor>
      <arglist>(MFCCWork *w, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>CalcLogRawE</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a55bc464c3796777aa9367befb0aa5b85</anchor>
      <arglist>(float *wave, int framesize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ZMeanFrame</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a3f1e4ad5eb25e99f67ebd9bfdd490aee</anchor>
      <arglist>(float *wave, int framesize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WeightCepstrum</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a0452d4a57668f76c87b6b9c3b2a1b73f</anchor>
      <arglist>(float *mfcc, Value *para, MFCCWork *w)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Wav2MFCC</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>af95bae9b187c2882bdb23800d58b4dc1</anchor>
      <arglist>(SP16 *wave, float **mfcc, Value *para, int nSamples, MFCCWork *w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Delta</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a24141bf90d3e64d26f451edf2cbf9fbd</anchor>
      <arglist>(float **c, int frame, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Accel</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a1a7e413ba6ca7a9464c826ef56c8a2d5</anchor>
      <arglist>(float **c, int frame, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NormaliseLogE</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a8b02868c58dc53dfda4d6e5302397bb1</anchor>
      <arglist>(float **c, int frame_num, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CMN</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a85b9d73890b5c422b5c09835f68f70f3</anchor>
      <arglist>(float **mfcc, int frame_num, int dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MVN</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a341b0e44202452ce3303b45c9ddbb2ea</anchor>
      <arglist>(float **mfcc, int frame_num, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>DeltaBuf *</type>
      <name>WMP_deltabuf_new</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>ac022c9a6ad25be798e85724329809e73</anchor>
      <arglist>(int veclen, int windowlen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WMP_deltabuf_free</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a9d4600ef4f75fbc417dd93ed557ecb21</anchor>
      <arglist>(DeltaBuf *db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WMP_deltabuf_prepare</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a747da62a4ff134e471d3c3b999fa6931</anchor>
      <arglist>(DeltaBuf *db)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>WMP_deltabuf_proceed</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a5abc1ef25f9ca9e865fd629ceccbf5f6</anchor>
      <arglist>(DeltaBuf *db, float *new_mfcc)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>WMP_deltabuf_flush</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a59e4a226b90aafbc16c91a384e1cafa2</anchor>
      <arglist>(DeltaBuf *db)</arglist>
    </member>
    <member kind="function">
      <type>CMNWork *</type>
      <name>CMN_realtime_new</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>ab781119f69eaccb476ba18867b36d524</anchor>
      <arglist>(Value *para, float weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CMN_realtime_free</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a85bca678a879056e9803fb8c44e9628f</anchor>
      <arglist>(CMNWork *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CMN_realtime_prepare</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a76d8932971ba36d0113a60273922822b</anchor>
      <arglist>(CMNWork *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CMN_realtime</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a8a01b298bde37226449a5627f318bfc8</anchor>
      <arglist>(CMNWork *c, float *mfcc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CMN_realtime_update</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>ac490ec2d933a8474b32522330c0943f8</anchor>
      <arglist>(CMNWork *c, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>CMN_load_from_file</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a2ba0b85c1692dfc454dae52ccc3c9ea5</anchor>
      <arglist>(CMNWork *c, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>CMN_save_to_file</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a267d606c3a1b4fb11c6a3a518caef7b5</anchor>
      <arglist>(CMNWork *c, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>energy_max_init</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>ab958fde0d78436f2d7ab2e6af00fc2ba</anchor>
      <arglist>(ENERGYWork *energy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>energy_max_prepare</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a33efa3cdceb05ecd643b8adf2cb9f329</anchor>
      <arglist>(ENERGYWork *energy, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>energy_max_normalize</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a28f167daea2cbbedb0952d97af2b8c0e</anchor>
      <arglist>(ENERGYWork *energy, LOGPROB f, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>new_SS_load_from_file</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a3fa260d3a239f46dfb4d328bff0275db</anchor>
      <arglist>(char *filename, int *slen)</arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>new_SS_calculate</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>afd69fb772a194d4d9d09f8ad0e49ae10</anchor>
      <arglist>(SP16 *wave, int wavelen, int *slen, MFCCWork *w, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undef_para</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a37184004dd58e88d07bb265816f98155</anchor>
      <arglist>(Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_default_para</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>af53d5a15553f6a399bab620b2368595e</anchor>
      <arglist>(Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_default_para_htk</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>ade09bf58909f56c943590a43a9edf5dc</anchor>
      <arglist>(Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_para</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a379b056c7c0d5f0c2e438141114bba26</anchor>
      <arglist>(Value *dst, Value *src)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>htk_config_file_parse</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>adbce6ae62af173d6f6a2a5da0dfa4369</anchor>
      <arglist>(char *HTKconffile, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_para_from_header</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>a18b6e1a2b30b28e2929502a53465e681</anchor>
      <arglist>(Value *para, short param_type, short vec_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_para</name>
      <anchorfile>mfcc_8h.html</anchorfile>
      <anchor>afb1e870e12618757f101754beac430ce</anchor>
      <arglist>(FILE *fp, Value *para)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram2.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>ngram2_8h</filename>
    <class kind="struct">NGRAM_TUPLE_INFO</class>
    <class kind="struct">__ngram_info__</class>
    <member kind="define">
      <type>#define</type>
      <name>NNID_INVALID</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a0273b7d58941041d8be95427db2e8e60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NNID_MAX</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>aa0865bb1d7a16b54d0ca005fcaad1502</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NNID_INVALID_UPPER</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>ac571ef209003f1b97088b478fc9c4b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NNID_MAX_24</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>af9811c552215752d41f28b292120b8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN_WORD_DEFAULT</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a403a4a6f5bbb1606693c15854977cb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_WORD_DEFAULT</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>acc44d5fc0693bcd0445ceedaa62a83f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNK_WORD_DEFAULT</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a12edd6fd3a578c620ab43bd88a43070d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNK_WORD_MAXLEN</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a82e4ab356075415e9f035ba3f24a4c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINGRAM_IDSTR</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a78eb1ed7321a00938da538a3f3dc2abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINGRAM_IDSTR_V4</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>ad2868198abbb19f50ecd945545424040</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINGRAM_IDSTR_V5</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>abeb064ad231809993c391ecf4f98786e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINGRAM_HDSIZE</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>af473347b5840aeafe6a5b3b3f7b26f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINGRAM_SIZESTR_HEAD</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>ae25f07c69a86c6dac457e4b81c9a3761</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINGRAM_SIZESTR_BODY_4BYTE</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>aab44a4628b9983ced31ead0ba0b0344f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINGRAM_SIZESTR_BODY_2BYTE</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>abe2a2cecc5219f9585b63febb7ffd4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINGRAM_BYTEORDER_HEAD</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a37a4b9a87c3717f6cccf09067d9af295</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINGRAM_NATURAL_BYTEORDER</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a0874220ecfe862a4f2c4979d62ebb345</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>NNID</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>af7949af4a2c87fcd8fc95f6e12c6fa57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>NNID_UPPER</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a501d6d1be3e04a07802b20f0142efc09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>NNID_LOWER</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>afdca6e200a2cbd2979cb1239a3373c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct __ngram_info__</type>
      <name>NGRAM_INFO</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a58eabefbacda2329c6fbebab64e6236b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>NNID</type>
      <name>search_ngram</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a121f2bd9463d11219ac0bd3884bdf5ce</anchor>
      <arglist>(NGRAM_INFO *ndata, int n, WORD_ID *w)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>ngram_prob</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>abf5119abd8ca892c9007c4f03e2df787</anchor>
      <arglist>(NGRAM_INFO *ndata, int n, WORD_ID *w)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>uni_prob</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>ad4ae760668068d687ec7dc15480e6063</anchor>
      <arglist>(NGRAM_INFO *ndata, WORD_ID w)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>bi_prob</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>ac4fe24465041175d6908262e5c66de1e</anchor>
      <arglist>(NGRAM_INFO *ndata, WORD_ID w1, WORD_ID w2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bi_prob_func_set</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a33b3a07ddf30c12aa6e6e664e817042a</anchor>
      <arglist>(NGRAM_INFO *ndata)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>ngram_read_arpa</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a81b29d950f174f8843408c2931da1837</anchor>
      <arglist>(FILE *fp, NGRAM_INFO *ndata, boolean addition)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>ngram_read_bin</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a3ad0145181ebcf4ed4f9979cbabf721c</anchor>
      <arglist>(FILE *fp, NGRAM_INFO *ndata)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>ngram_write_bin</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a2bc92f5c5613b46ae461ab2e3374ad6c</anchor>
      <arglist>(FILE *fp, NGRAM_INFO *ndata, char *header_str)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>ngram_compact_context</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>ad0b439cbf16816be2f766bb0d6c3f1f7</anchor>
      <arglist>(NGRAM_INFO *ndata, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_make_lookup_tree</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a3758ab05678f76d5e411b14df6dfc295</anchor>
      <arglist>(NGRAM_INFO *ndata)</arglist>
    </member>
    <member kind="function">
      <type>WORD_ID</type>
      <name>ngram_lookup_word</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>af9a0c88353b2de8d0330718be2318a75</anchor>
      <arglist>(NGRAM_INFO *ndata, char *wordstr)</arglist>
    </member>
    <member kind="function">
      <type>WORD_ID</type>
      <name>make_ngram_ref</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a1af24ddfd671cda246da50d544cc55a1</anchor>
      <arglist>(NGRAM_INFO *, char *)</arglist>
    </member>
    <member kind="function">
      <type>NGRAM_INFO *</type>
      <name>ngram_info_new</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>ae777d2adbe6797539b9867f5c2e07a7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_info_free</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a5eea34aed47f1b1bf659384d1b0007da</anchor>
      <arglist>(NGRAM_INFO *ngram)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>init_ngram_bin</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>aa2e60ce4e7a55e2a96ab32438a178fc7</anchor>
      <arglist>(NGRAM_INFO *ndata, char *ngram_file)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>init_ngram_arpa</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>ac7fc3a2a92a41cd8503d8bbf616ef1af</anchor>
      <arglist>(NGRAM_INFO *ndata, char *ngram_file, int dir)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>init_ngram_arpa_additional</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a58c322144e1f4cb434efee8a27868a99</anchor>
      <arglist>(NGRAM_INFO *ndata, char *bigram_file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_unknown_id</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a1aa23039e9813d2b117c4c6806983d76</anchor>
      <arglist>(NGRAM_INFO *ndata, char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_ngram_info</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>a437b0539c85462bdc71e0ae92b3d1353</anchor>
      <arglist>(FILE *fp, NGRAM_INFO *ndata)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>make_voca_ref</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>ae622a61663c01b00943105a33dc9b873</anchor>
      <arglist>(NGRAM_INFO *ndata, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fix_uniprob_srilm</name>
      <anchorfile>ngram2_8h.html</anchorfile>
      <anchor>accc3a772baa15200ed1041f1199e7624</anchor>
      <arglist>(NGRAM_INFO *ndata, WORD_INFO *winfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ptree.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>ptree_8h</filename>
    <class kind="struct">_apatnode</class>
    <class kind="struct">_patnode</class>
    <member kind="typedef">
      <type>struct _apatnode</type>
      <name>APATNODE</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a013b2b7a45a25d63152f1249e9b9aa2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _patnode</type>
      <name>PATNODE</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>ac7f8e20f228a6abc656eb1523c9bd380</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testbit</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a4a306052b708c348456a126ffae63f6f</anchor>
      <arglist>(char *str, int slen, int bitplace)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testbit_max</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>af9dd1bd8676b44ffd409873e14d0ba66</anchor>
      <arglist>(char *str, int bitplace, int maxbitplace)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>where_the_bit_differ</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a4098f166903380b850b50674c8a1359c</anchor>
      <arglist>(char *str1, char *str2)</arglist>
    </member>
    <member kind="function">
      <type>PATNODE *</type>
      <name>make_ptree</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a46d2513846de938988b1586af3ffe617</anchor>
      <arglist>(char **words, int *data, int wordsnum, int bitplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disp_ptree</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>abcdb432752f4fc2b2285627f26188384</anchor>
      <arglist>(PATNODE *node, int level)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ptree_search_data</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a557f08c70c2cf072eb9be294f096db42</anchor>
      <arglist>(char *str, PATNODE *rootnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ptree_replace_data</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>adc6028c4c09727aec2a9c7daca9c2903</anchor>
      <arglist>(char *str, int val, PATNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>PATNODE *</type>
      <name>ptree_make_root_node</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a495cb769ab4b148c46f5bb9cc6f3ec68</anchor>
      <arglist>(int data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ptree_add_entry</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a1897b0250bd57900e79116155a87d226</anchor>
      <arglist>(char *str, int data, char *matchstr, PATNODE **rootnode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_ptree</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a834bec12cbc3442b6d63c55719bea3d8</anchor>
      <arglist>(PATNODE *rootnode)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>aptree_search_data</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a71b83f53cb7e8d5f00f2cf07c0031a54</anchor>
      <arglist>(char *str, APATNODE *rootnode)</arglist>
    </member>
    <member kind="function">
      <type>APATNODE *</type>
      <name>aptree_make_root_node</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a6a66f03a4af96887df530b3250c5bb4b</anchor>
      <arglist>(void *data, BMALLOC_BASE **mroot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aptree_add_entry</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a53b77aa0e08133bb42d913da88d3f610</anchor>
      <arglist>(char *str, void *data, char *matchstr, APATNODE **rootnode, BMALLOC_BASE **mroot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aptree_remove_entry</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a4c9487558cf92d5236cb86064eef7bb5</anchor>
      <arglist>(char *str, APATNODE **rootnode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aptree_traverse_and_do</name>
      <anchorfile>ptree_8h.html</anchorfile>
      <anchor>a10c3c8ce43ae73254a481030123a778f</anchor>
      <arglist>(APATNODE *node, void(*callback)(void *))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>speech.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>speech_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAXSEQNUM</name>
      <anchorfile>speech_8h.html</anchorfile>
      <anchor>a27db6b5c1b3192e3a3566ce1010080a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSPEECHLEN</name>
      <anchorfile>speech_8h.html</anchorfile>
      <anchor>a24fc67ea54e785761d3a55ff0bca09ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INPUT_DELAY_SEC</name>
      <anchorfile>speech_8h.html</anchorfile>
      <anchor>a8603162a8e9b8b31095038afec429342</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OUTPROB_CACHE_PERIOD</name>
      <anchorfile>speech_8h.html</anchorfile>
      <anchor>abadcf2c4204ae5f82b847ab69ae9410f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>period2freq</name>
      <anchorfile>speech_8h.html</anchorfile>
      <anchor>a79a3f5601c92c1d5cf205aa4ab784a83</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>freq2period</name>
      <anchorfile>speech_8h.html</anchorfile>
      <anchor>a7f4c2381f0bd94336150e0b9bcc2787c</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wrsamp</name>
      <anchorfile>speech_8h.html</anchorfile>
      <anchor>a761d2e22a51312fbc368c1e7f7bfdba8</anchor>
      <arglist>(int fd, SP16 *buf, int len)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>wrwav_open</name>
      <anchorfile>speech_8h.html</anchorfile>
      <anchor>a95eecd29435dedc392f8a1125292540d</anchor>
      <arglist>(char *filename, int sfreq)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>wrwav_data</name>
      <anchorfile>speech_8h.html</anchorfile>
      <anchor>a07ff10c9dcdfa9db6740a938cb26da36</anchor>
      <arglist>(FILE *fp, SP16 *buf, int len)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>wrwav_close</name>
      <anchorfile>speech_8h.html</anchorfile>
      <anchor>ab4e781b2d13eb4e194a4e79d75d9416d</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strip_zero</name>
      <anchorfile>speech_8h.html</anchorfile>
      <anchor>a0bbbff6017eb098662bf443e527e9c61</anchor>
      <arglist>(SP16 a[], int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stddefs.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>stddefs_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>PI</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a598a3330b3c21701223ee0ca14316eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TPI</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a8b4dd00016aed25a0ea54e9a9acd1239</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOGTPI</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a2531a17c0e043b754b482cfe98a3aa68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_TEN</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a1344ce563471c7856cbc907b40415d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INV_LOG_TEN</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>abdb1347cf36ed3d93ce857ea97f1fdf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>strmatch</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a56790902b825cd9cb5fad55466bd39db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>strnmatch</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>ac2f22abca2b86596590cc84de666fd6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DELM</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a0b5df531850fcf447b381cb8e8eb80fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_ZERO</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>af5bc4a11e122f174c54d08cb132ff03a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_ADDMIN</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a50436b840c785ea555a76c4bfe9f3ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_WORD_NUM</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>acd1acd851506ca74f4c828418e43f4db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WORD_INVALID</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>afc72924885912ce7bb2db284acb3dfd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXLINELEN</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a624dbcb8b6ccc24c9bf891c174f60b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPATHLEN</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>addfa831c1473e710d2b71b72fd7fcfa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>boolean</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a7670a4e8a07d9ebb00411948b0bbf86d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>PROB</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a607b58cee6a387a6ebd86c79c0bf8403</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>LOGPROB</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a2f5ca39435b2ccc7e4280dd99aff248b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short</type>
      <name>SP16</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>af48b5bebafc8ac46913d026ad8e97d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>VECT</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>ad7de9db3c873b4375067ea25a32a4d00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>WORD_ID</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a81dadd815655e650073b63d18d218296</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LogOutputLevel</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a59ea88d6b1812c731f2c7276a659ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_NORMAL</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a59ea88d6b1812c731f2c7276a659ad7babb2c17c44c343a8367060db4175f39ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_VERBOSE</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a59ea88d6b1812c731f2c7276a659ad7bac74e4f8b7fa7b544b66d09e854b8773a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_DEBUG</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a59ea88d6b1812c731f2c7276a659ad7bab9f002c6ffbfd511da8090213227454e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_LR</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a96a58e29e8dbf2b5bdeb775cba46556ea932e4ec64fe27061a0ce76fcd100fbbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_RL</name>
      <anchorfile>stddefs_8h.html</anchorfile>
      <anchor>a96a58e29e8dbf2b5bdeb775cba46556ea560b801d03b388903cfbee1d81ef6151</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tcpip.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>tcpip_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>ADINNET_PORT</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>a104d1e65d083eca4f0d93982c04d7ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETAUDIO_DEVNAME</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>ac1b7de66fd56cda89e119e653feddf6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONNECTION_RETRY_TIMES</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>a1480324c5d7a389958e7a5a4dae635b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONNECTION_RETRY_INTERVAL</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>ab6dcdfb34359e2ad63fb853017199d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rd</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>a67d426fdc68b09a948c7fc5d5b7c5ca4</anchor>
      <arglist>(int fd, char *data, int *len, int maxlen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wt</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>a583464ddfa9762130dfbc553f607d31f</anchor>
      <arglist>(int fd, char *data, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ready_as_server</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>a70485f9003ed0673ccc03ab8f6d932d1</anchor>
      <arglist>(int port_num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>accept_from</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>ab07ef11df7cdc7a897127d1b05119a45</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>make_connection</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>a588f93aa4f6955a449a1f50441076c82</anchor>
      <arglist>(char *hostname, int port_num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>make_connection_unix</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>ab0b14ffd67d7691d6f1a2bd4decde9ff</anchor>
      <arglist>(char *address)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>close_socket</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>aaa8b554900909e62a6d615b292f29c5e</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup_socket</name>
      <anchorfile>tcpip_8h.html</anchorfile>
      <anchor>ae233b0ad0d1800bff3c206729690dcb2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>util.h</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>util_8h</filename>
    <class kind="struct">_bmalloc_base</class>
    <member kind="define">
      <type>#define</type>
      <name>MYBMALLOC_BLOCK_SIZE</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a9030aece3402371131a253f06cab28fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _bmalloc_base</type>
      <name>BMALLOC_BASE</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a16ac7cd92e0a5d5b7cc3fd592bdc13dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>getl</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a0a5cc5b1d5344df3624c69da22b602bf</anchor>
      <arglist>(char *, int, FILE *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>getl_fp</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a717900e0a8f4cdb1d92e688d908c1328</anchor>
      <arglist>(char *, int, FILE *)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_line_from_stdin</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a0a2f126edddb1c3415a340e4c5896e5a</anchor>
      <arglist>(char *buf, int buflen, char *prompt)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>fopen_readfile</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a362625608e4ee8d149fe9c9fea5a5b63</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fclose_readfile</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a30d6240dcd342123239280cd88c691cf</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>fopen_writefile</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a0541f5fa2ed48960e5938b0134cdb693</anchor>
      <arglist>(char *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fclose_writefile</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a1d5e4a85e8a1135aaeb39fab88693da7</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>myfread</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>ac3c8346f882198bf28b3950321be52bd</anchor>
      <arglist>(void *ptr, size_t size, size_t n, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>myfwrite</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a106a34fa81d1731bfb719dded8102489</anchor>
      <arglist>(void *ptr, size_t size, size_t n, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>myfgetc</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a297d178a96506babf03adfadf45c7771</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>myfeof</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>ae2db740f087bb2eedb3ed35ba844b0ea</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>myfrewind</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a1fede05a302fba2222cdc10a775f3807</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>mybmalloc2</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>af09f41794eecbbd606b4143af8124388</anchor>
      <arglist>(unsigned int size, BMALLOC_BASE **list)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mybstrdup2</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a50732736ae02f68a5afb48ef053c109d</anchor>
      <arglist>(char *, BMALLOC_BASE **list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mybfree2</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>aaaf37923f37a50995137a5894486254b</anchor>
      <arglist>(BMALLOC_BASE **list)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>mymalloc</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>aa48c2dcee3d0dfc02335202dbdab25de</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>mymalloc_big</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a68b7200512b61cf6ce4d202928bb5b42</anchor>
      <arglist>(size_t elsize, size_t nelem)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>myrealloc</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a8bdb248e5de8a19ba61472ce61fa2bcc</anchor>
      <arglist>(void *, size_t)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>mycalloc</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>ac006efeda94b1c7c8fc605b6c973255f</anchor>
      <arglist>(size_t, size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap_sample_bytes</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>acf5d0ea28089a8ca4b46cd6869c4e4ed</anchor>
      <arglist>(SP16 *buf, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap_bytes</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>aa781479c9f555dd3fd095c67aeacbaf9</anchor>
      <arglist>(char *buf, size_t unitbyte, size_t unitnum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jlog_set_output</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a3ffbe4eb8dc879412063a1958872b875</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>jlog_get_fp</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>adb644986973f02df454b3c0009d60ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jlog</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a3d0793ceebcd84b2df37f97727598d90</anchor>
      <arglist>(char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>jlog_flush</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a5ede57446aede375aea4d311b7b31c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mystrtok_quotation</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a1bacf1f6ed9359115bc10ffa0745d622</anchor>
      <arglist>(char *str, char *delim, int left_paren, int right_paren, int mode)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mystrtok_quote</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>af260e613b1a94341b4b28476d14443dd</anchor>
      <arglist>(char *str, char *delim)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mystrtok</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a5d37eec05f8a3c467837b99a9722ecac</anchor>
      <arglist>(char *str, char *delim)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mystrtok_movetonext</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a3190c52633fd21bbce941b78392c706d</anchor>
      <arglist>(char *str, char *delim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>ad48549ed43f4e649bbd46fd0ad337056</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout_version</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a956ef1b0e554ba1011a8e4f7384ba15b</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout_audio</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a0cf96ac67b8b39997c11bd7da4949c9f</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout_lm</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>aeced84e117c01e7e1ef71719497be268</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout_am</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>ac9e6752e4dcb4a51e26ea0cd091b9721</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout_lib</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a8f2b53272d8e2767d8f455cf2b97bcb3</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout_process</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a4a654d587051040e6d7da1341c81144b</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>qsort_reentrant</name>
      <anchorfile>util_8h.html</anchorfile>
      <anchor>a838f2f6588a8341eaa62f59835c55f0d</anchor>
      <arglist>(void *base, int count, int size, int(*compare)(const void *, const void *, void *), void *pointer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_esd.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__esd_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>adin_esd_standby</name>
      <anchorfile>adin__esd_8c.html</anchorfile>
      <anchor>a83ff8464c369c74599fe3eb980e304bb</anchor>
      <arglist>(int sfreq, void *dummy)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_esd_begin</name>
      <anchorfile>adin__esd_8c.html</anchorfile>
      <anchor>a72d765c20db97f3b4691cd327375e48c</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_esd_end</name>
      <anchorfile>adin__esd_8c.html</anchorfile>
      <anchor>a4fad87d5967eeb41521b4df9e9f4e625</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_esd_read</name>
      <anchorfile>adin__esd_8c.html</anchorfile>
      <anchor>ad3fbdafa57c58671985024d3c03c966f</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_esd_input_name</name>
      <anchorfile>adin__esd_8c.html</anchorfile>
      <anchor>a35bac4e0d5664cf6754f5a076675cc51</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_file.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__file_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>MYREAD</name>
      <anchorfile>adin__file_8c.html</anchorfile>
      <anchor>a5cdd514506fcaa2ee4838aaa34792cf3</anchor>
      <arglist>(A, B, C, D)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_file_standby</name>
      <anchorfile>adin__file_8c.html</anchorfile>
      <anchor>a5f978ed17915e0cf12277f3a1fcb7d8e</anchor>
      <arglist>(int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_file_begin</name>
      <anchorfile>adin__file_8c.html</anchorfile>
      <anchor>a633ff12ec4f7ee2bcaa3ce20b55a3e46</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_file_read</name>
      <anchorfile>adin__file_8c.html</anchorfile>
      <anchor>a96ee59a5d22054e83866175bfc1e2ad3</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_file_end</name>
      <anchorfile>adin__file_8c.html</anchorfile>
      <anchor>afd1e0e33256918da1d2bebcbf7f419ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_stdin_standby</name>
      <anchorfile>adin__file_8c.html</anchorfile>
      <anchor>af654236c02a46dc7f156e1cb45981cbb</anchor>
      <arglist>(int freq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_stdin_begin</name>
      <anchorfile>adin__file_8c.html</anchorfile>
      <anchor>ae571181a612f5119b66b7eb434f9a4cd</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_stdin_read</name>
      <anchorfile>adin__file_8c.html</anchorfile>
      <anchor>aa99eb32852126217230930f1530cf43b</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_file_get_current_filename</name>
      <anchorfile>adin__file_8c.html</anchorfile>
      <anchor>a040f4f3d0d79cb834faaee8f09281e51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_stdin_input_name</name>
      <anchorfile>adin__file_8c.html</anchorfile>
      <anchor>a66632fbed1ec2c92979983a93b98a684</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_mic_darwin_coreaudio.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__mic__darwin__coreaudio_8c</filename>
    <member kind="function">
      <type>char *</type>
      <name>adin_mic_input_name</name>
      <anchorfile>adin__mic__darwin__coreaudio_8c.html</anchorfile>
      <anchor>a3f993c0eff0c416afe84fe1ff21b9d5e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_mic_freebsd.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__mic__freebsd_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DEVICE</name>
      <anchorfile>adin__mic__freebsd_8c.html</anchorfile>
      <anchor>a84cb8bbda8042a324f49102bc200cc54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FREQALLOWRANGE</name>
      <anchorfile>adin__mic__freebsd_8c.html</anchorfile>
      <anchor>a74f8a999d34de3b46c8ce91f28444666</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POLLINTERVAL</name>
      <anchorfile>adin__mic__freebsd_8c.html</anchorfile>
      <anchor>a5e3671b088810d7fa51b7fc2f0d500be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_standby</name>
      <anchorfile>adin__mic__freebsd_8c.html</anchorfile>
      <anchor>a28a479f07e99f0357bd29495a5bca63d</anchor>
      <arglist>(int sfreq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_begin</name>
      <anchorfile>adin__mic__freebsd_8c.html</anchorfile>
      <anchor>a956fb4355c7cd585917feb87f83f64f3</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_end</name>
      <anchorfile>adin__mic__freebsd_8c.html</anchorfile>
      <anchor>a3301c0f32c4d9eb4d0ad161c3c7ac8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_mic_read</name>
      <anchorfile>adin__mic__freebsd_8c.html</anchorfile>
      <anchor>aff81929bac37075424a5b4de9d518b34</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_mic_input_name</name>
      <anchorfile>adin__mic__freebsd_8c.html</anchorfile>
      <anchor>a3f993c0eff0c416afe84fe1ff21b9d5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>struct pollfd</type>
      <name>fds</name>
      <anchorfile>adin__mic__freebsd_8c.html</anchorfile>
      <anchor>a74fb26535c3b734d6181ff2e1e4de06b</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_mic_linux.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__mic__linux_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_standby</name>
      <anchorfile>adin__mic__linux_8c.html</anchorfile>
      <anchor>a4083d9103596f08018add79a6564f08e</anchor>
      <arglist>(int sfreq, void *dummy)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_begin</name>
      <anchorfile>adin__mic__linux_8c.html</anchorfile>
      <anchor>a956fb4355c7cd585917feb87f83f64f3</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_end</name>
      <anchorfile>adin__mic__linux_8c.html</anchorfile>
      <anchor>a3301c0f32c4d9eb4d0ad161c3c7ac8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_mic_read</name>
      <anchorfile>adin__mic__linux_8c.html</anchorfile>
      <anchor>aff81929bac37075424a5b4de9d518b34</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_mic_input_name</name>
      <anchorfile>adin__mic__linux_8c.html</anchorfile>
      <anchor>a3f993c0eff0c416afe84fe1ff21b9d5e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_mic_linux_alsa.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__mic__linux__alsa_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>adin_alsa_standby</name>
      <anchorfile>adin__mic__linux__alsa_8c.html</anchorfile>
      <anchor>ab3a5d92c50ef204d222f232be4e8262e</anchor>
      <arglist>(int sfreq, void *dummy)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_alsa_begin</name>
      <anchorfile>adin__mic__linux__alsa_8c.html</anchorfile>
      <anchor>ab274bc17728cf4865c5f664ba034860f</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_alsa_end</name>
      <anchorfile>adin__mic__linux__alsa_8c.html</anchorfile>
      <anchor>af68e1fc8e39b237dfc31b6976dff5cd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_alsa_read</name>
      <anchorfile>adin__mic__linux__alsa_8c.html</anchorfile>
      <anchor>aec4e745ecb2171736e5845d484f2a90f</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_alsa_input_name</name>
      <anchorfile>adin__mic__linux__alsa_8c.html</anchorfile>
      <anchor>afd7d152a511883ed1b3065494fedbb3f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_mic_linux_oss.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__mic__linux__oss_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DEVICE</name>
      <anchorfile>adin__mic__linux__oss_8c.html</anchorfile>
      <anchor>a84cb8bbda8042a324f49102bc200cc54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FREQALLOWRANGE</name>
      <anchorfile>adin__mic__linux__oss_8c.html</anchorfile>
      <anchor>a74f8a999d34de3b46c8ce91f28444666</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPOLLINTERVAL</name>
      <anchorfile>adin__mic__linux__oss_8c.html</anchorfile>
      <anchor>a918a48f4a87f78f8a7732970faa704b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_FRAGMENT_MSEC</name>
      <anchorfile>adin__mic__linux__oss_8c.html</anchorfile>
      <anchor>a0deb484871297c20da51d72b08984ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN_FRAGMENT_SIZE</name>
      <anchorfile>adin__mic__linux__oss_8c.html</anchorfile>
      <anchor>a12405d5c29fbfd00548e6b4d81699a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_oss_standby</name>
      <anchorfile>adin__mic__linux__oss_8c.html</anchorfile>
      <anchor>a25b8f547272ed2aec48539dd277ae905</anchor>
      <arglist>(int sfreq, void *dummy)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_oss_begin</name>
      <anchorfile>adin__mic__linux__oss_8c.html</anchorfile>
      <anchor>a655b3575616a9f50cfc25ee4e12b004d</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_oss_end</name>
      <anchorfile>adin__mic__linux__oss_8c.html</anchorfile>
      <anchor>a7b4b4996ce68e640ef608dbfc2a1695e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_oss_read</name>
      <anchorfile>adin__mic__linux__oss_8c.html</anchorfile>
      <anchor>acc2e24afcafe9e1f5b8b3668d85f2eee</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_oss_input_name</name>
      <anchorfile>adin__mic__linux__oss_8c.html</anchorfile>
      <anchor>a82b5d8507c9535ce44b3b3c4f18257a0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_mic_o2.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__mic__o2_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_standby</name>
      <anchorfile>adin__mic__o2_8c.html</anchorfile>
      <anchor>a4083d9103596f08018add79a6564f08e</anchor>
      <arglist>(int sfreq, void *dummy)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_begin</name>
      <anchorfile>adin__mic__o2_8c.html</anchorfile>
      <anchor>a956fb4355c7cd585917feb87f83f64f3</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_end</name>
      <anchorfile>adin__mic__o2_8c.html</anchorfile>
      <anchor>a3301c0f32c4d9eb4d0ad161c3c7ac8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_mic_read</name>
      <anchorfile>adin__mic__o2_8c.html</anchorfile>
      <anchor>aff81929bac37075424a5b4de9d518b34</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_mic_input_name</name>
      <anchorfile>adin__mic__o2_8c.html</anchorfile>
      <anchor>a3f993c0eff0c416afe84fe1ff21b9d5e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_mic_sol2.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__mic__sol2_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DEVICE</name>
      <anchorfile>adin__mic__sol2_8c.html</anchorfile>
      <anchor>a84cb8bbda8042a324f49102bc200cc54</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_standby</name>
      <anchorfile>adin__mic__sol2_8c.html</anchorfile>
      <anchor>a28a479f07e99f0357bd29495a5bca63d</anchor>
      <arglist>(int sfreq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_begin</name>
      <anchorfile>adin__mic__sol2_8c.html</anchorfile>
      <anchor>a956fb4355c7cd585917feb87f83f64f3</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_end</name>
      <anchorfile>adin__mic__sol2_8c.html</anchorfile>
      <anchor>a3301c0f32c4d9eb4d0ad161c3c7ac8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_mic_read</name>
      <anchorfile>adin__mic__sol2_8c.html</anchorfile>
      <anchor>aff81929bac37075424a5b4de9d518b34</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_mic_input_name</name>
      <anchorfile>adin__mic__sol2_8c.html</anchorfile>
      <anchor>a3f993c0eff0c416afe84fe1ff21b9d5e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_mic_sp.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__mic__sp_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_standby</name>
      <anchorfile>adin__mic__sp_8c.html</anchorfile>
      <anchor>a4083d9103596f08018add79a6564f08e</anchor>
      <arglist>(int sfreq, void *dummy)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_begin</name>
      <anchorfile>adin__mic__sp_8c.html</anchorfile>
      <anchor>a956fb4355c7cd585917feb87f83f64f3</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_end</name>
      <anchorfile>adin__mic__sp_8c.html</anchorfile>
      <anchor>a3301c0f32c4d9eb4d0ad161c3c7ac8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_mic_read</name>
      <anchorfile>adin__mic__sp_8c.html</anchorfile>
      <anchor>aff81929bac37075424a5b4de9d518b34</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_mic_input_name</name>
      <anchorfile>adin__mic__sp_8c.html</anchorfile>
      <anchor>a3f993c0eff0c416afe84fe1ff21b9d5e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_mic_sun4.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__mic__sun4_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>J_DEF_VOLUME</name>
      <anchorfile>adin__mic__sun4_8c.html</anchorfile>
      <anchor>addc188f327ea4769a042beff6414bfc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DEVICE</name>
      <anchorfile>adin__mic__sun4_8c.html</anchorfile>
      <anchor>a84cb8bbda8042a324f49102bc200cc54</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_standby</name>
      <anchorfile>adin__mic__sun4_8c.html</anchorfile>
      <anchor>a4083d9103596f08018add79a6564f08e</anchor>
      <arglist>(int sfreq, void *dummy)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_begin</name>
      <anchorfile>adin__mic__sun4_8c.html</anchorfile>
      <anchor>a956fb4355c7cd585917feb87f83f64f3</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_end</name>
      <anchorfile>adin__mic__sun4_8c.html</anchorfile>
      <anchor>a3301c0f32c4d9eb4d0ad161c3c7ac8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_mic_read</name>
      <anchorfile>adin__mic__sun4_8c.html</anchorfile>
      <anchor>aff81929bac37075424a5b4de9d518b34</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_mic_input_name</name>
      <anchorfile>adin__mic__sun4_8c.html</anchorfile>
      <anchor>a3f993c0eff0c416afe84fe1ff21b9d5e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_na.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__na_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>adin__na_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>adin__na_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short</type>
      <name>SP16</name>
      <anchorfile>adin__na_8c.html</anchorfile>
      <anchor>af48b5bebafc8ac46913d026ad8e97d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NA_standby</name>
      <anchorfile>adin__na_8c.html</anchorfile>
      <anchor>ac79921c6b005b70662b35a2b2a54b52f</anchor>
      <arglist>(int sfreq, char *server_devname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NA_start</name>
      <anchorfile>adin__na_8c.html</anchorfile>
      <anchor>a7ca23678adf065a20a613c0c83e6558b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NA_stop</name>
      <anchorfile>adin__na_8c.html</anchorfile>
      <anchor>a41235416ae9d8821d7dbc71cb7a55109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NA_read</name>
      <anchorfile>adin__na_8c.html</anchorfile>
      <anchor>aa2aa62c9e5db0150afc1d97767eb713e</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_netaudio.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__netaudio_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>adin_netaudio_standby</name>
      <anchorfile>adin__netaudio_8c.html</anchorfile>
      <anchor>a8416064117e245e267eaf16e2b536a62</anchor>
      <arglist>(int sfreq, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_netaudio_begin</name>
      <anchorfile>adin__netaudio_8c.html</anchorfile>
      <anchor>a3c2bf36a429795984c3b825b5881b6cb</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_netaudio_end</name>
      <anchorfile>adin__netaudio_8c.html</anchorfile>
      <anchor>a180a400fd26b0ebade440e8792e22dfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_netaudio_read</name>
      <anchorfile>adin__netaudio_8c.html</anchorfile>
      <anchor>a828bf31b8cee2ef32f815774a7bd58a4</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_netaudio_input_name</name>
      <anchorfile>adin__netaudio_8c.html</anchorfile>
      <anchor>af2050419057fdfff3c47923e70175631</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_portaudio.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__portaudio_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAX_FRAGMENT_MSEC</name>
      <anchorfile>adin__portaudio_8c.html</anchorfile>
      <anchor>a0deb484871297c20da51d72b08984ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_standby</name>
      <anchorfile>adin__portaudio_8c.html</anchorfile>
      <anchor>a4083d9103596f08018add79a6564f08e</anchor>
      <arglist>(int sfreq, void *dummy)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_begin</name>
      <anchorfile>adin__portaudio_8c.html</anchorfile>
      <anchor>a956fb4355c7cd585917feb87f83f64f3</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_mic_end</name>
      <anchorfile>adin__portaudio_8c.html</anchorfile>
      <anchor>a3301c0f32c4d9eb4d0ad161c3c7ac8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_mic_read</name>
      <anchorfile>adin__portaudio_8c.html</anchorfile>
      <anchor>aff81929bac37075424a5b4de9d518b34</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_mic_input_name</name>
      <anchorfile>adin__portaudio_8c.html</anchorfile>
      <anchor>a3f993c0eff0c416afe84fe1ff21b9d5e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adin_sndfile.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__sndfile_8c</filename>
  </compound>
  <compound kind="file">
    <name>adin_tcpip.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>adin__tcpip_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_standby</name>
      <anchorfile>adin__tcpip_8c.html</anchorfile>
      <anchor>a404821727a8b4599fc727a285b76c810</anchor>
      <arglist>(int freq, void *port_str)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_begin</name>
      <anchorfile>adin__tcpip_8c.html</anchorfile>
      <anchor>a3ab5c6bd404da566b66c3ab6cd574ff7</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_end</name>
      <anchorfile>adin__tcpip_8c.html</anchorfile>
      <anchor>a8cfe4d597afd2720ad31bbe97c6a492b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_tcpip_read</name>
      <anchorfile>adin__tcpip_8c.html</anchorfile>
      <anchor>a7e0e3b964d157fbac72c8f7bdd5dd3b3</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_send_pause</name>
      <anchorfile>adin__tcpip_8c.html</anchorfile>
      <anchor>a99804bff2bcff9931b534f528d558db4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_send_resume</name>
      <anchorfile>adin__tcpip_8c.html</anchorfile>
      <anchor>aaa7d4cbeba017c77969db0461baf6994</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_tcpip_send_terminate</name>
      <anchorfile>adin__tcpip_8c.html</anchorfile>
      <anchor>a43a8d2b7f9c94fea36ef9444a9100ec3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_tcpip_input_name</name>
      <anchorfile>adin__tcpip_8c.html</anchorfile>
      <anchor>a2b7a1d1c9cba51fa89f18b381b6e1a17</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ds48to16.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>ds48to16_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>USE_HEADER_COEF</name>
      <anchorfile>ds48to16_8c.html</anchorfile>
      <anchor>aff55772787e8f6314a68e4a1878b7aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>mod</name>
      <anchorfile>ds48to16_8c.html</anchorfile>
      <anchor>abce71ea97a89b700325715cc6f68674a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>DS_BUFFER *</type>
      <name>ds48to16_new</name>
      <anchorfile>ds48to16_8c.html</anchorfile>
      <anchor>a65b1a3eb0ddee7a41de13a65cae0aa29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ds48to16_free</name>
      <anchorfile>ds48to16_8c.html</anchorfile>
      <anchor>a3d9ea810fb58be5e8fd801267109adc3</anchor>
      <arglist>(DS_BUFFER *ds)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ds48to16</name>
      <anchorfile>ds48to16_8c.html</anchorfile>
      <anchor>abb8fbab7d78738215f0dac96863f05c2</anchor>
      <arglist>(SP16 *dst, SP16 *src, int srclen, int maxdstlen, DS_BUFFER *ds)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>zc-e.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>zc-e_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>init_count_zc_e</name>
      <anchorfile>zc-e_8c.html</anchorfile>
      <anchor>a9a6d250e718aa3fa1e854d229c35212d</anchor>
      <arglist>(ZEROCROSS *zc, int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_count_zc_e</name>
      <anchorfile>zc-e_8c.html</anchorfile>
      <anchor>a47c6c10a74896bfa9c7688604acf6c3e</anchor>
      <arglist>(ZEROCROSS *zc, int c_trigger, int c_length, int c_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_count_zc_e</name>
      <anchorfile>zc-e_8c.html</anchorfile>
      <anchor>ad4a04b11ca33a1d79edd4d07f05f13b0</anchor>
      <arglist>(ZEROCROSS *zc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count_zc_e</name>
      <anchorfile>zc-e_8c.html</anchorfile>
      <anchor>a7350801f0f87a2e54e3c92399237c63a</anchor>
      <arglist>(ZEROCROSS *zc, SP16 *buf, int step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zc_copy_buffer</name>
      <anchorfile>zc-e_8c.html</anchorfile>
      <anchor>ac47b619189c4df5deb144643901fac7d</anchor>
      <arglist>(ZEROCROSS *zc, SP16 *newbuf, int *len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>zmean.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>zmean_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>zmean_reset</name>
      <anchorfile>zmean_8c.html</anchorfile>
      <anchor>ad4432838ef34ee9600f4cdd5e64e0902</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sub_zmean</name>
      <anchorfile>zmean_8c.html</anchorfile>
      <anchor>a935573df387b411621147644ddb66f7e</anchor>
      <arglist>(SP16 *speech, int samplenum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>param_malloc.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/anlz/</path>
    <filename>param__malloc_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>param_init_content</name>
      <anchorfile>param__malloc_8c.html</anchorfile>
      <anchor>a89d74c5f2eaf30962d13b9004f948745</anchor>
      <arglist>(HTK_Param *p)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>param_alloc</name>
      <anchorfile>param__malloc_8c.html</anchorfile>
      <anchor>a33a3b640adc68923dfcdedc31d7d26a3</anchor>
      <arglist>(HTK_Param *p, unsigned int samplenum, short veclen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>param_free_content</name>
      <anchorfile>param__malloc_8c.html</anchorfile>
      <anchor>a9c95f5c5e86c249d25269ee4e182d178</anchor>
      <arglist>(HTK_Param *p)</arglist>
    </member>
    <member kind="function">
      <type>HTK_Param *</type>
      <name>new_param</name>
      <anchorfile>param__malloc_8c.html</anchorfile>
      <anchor>a4b7587476fc6c3488b6523adfa14bfcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_param</name>
      <anchorfile>param__malloc_8c.html</anchorfile>
      <anchor>a746120c2433c212540a08ddc1e1f9b19</anchor>
      <arglist>(HTK_Param *pinfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>paramselect.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/anlz/</path>
    <filename>paramselect_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>guess_basenum</name>
      <anchorfile>paramselect_8c.html</anchorfile>
      <anchor>a159b0c2655746ce1c712ccffeb9b806f</anchor>
      <arglist>(HTK_Param *p, short qualtype)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>param_check_and_adjust</name>
      <anchorfile>paramselect_8c.html</anchorfile>
      <anchor>a7675fcfc914be4146351ef7bca87ddb0</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, HTK_Param *param, boolean vflag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>paramtypes.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/anlz/</path>
    <filename>paramtypes_8c</filename>
    <member kind="function">
      <type>short</type>
      <name>param_qualstr2code</name>
      <anchorfile>paramtypes_8c.html</anchorfile>
      <anchor>a7e33795e4875cb0612ec9d95b5dc9e14</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>short</type>
      <name>param_str2code</name>
      <anchorfile>paramtypes_8c.html</anchorfile>
      <anchor>ae0200e46672b304ec393512fd420443f</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>param_qualcode2str</name>
      <anchorfile>paramtypes_8c.html</anchorfile>
      <anchor>aad48d26637a1fb1e6b29d307eced270f</anchor>
      <arglist>(char *buf, short type, boolean descflag)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>param_code2str</name>
      <anchorfile>paramtypes_8c.html</anchorfile>
      <anchor>a39886aa09ba7385fb0634f355eeb7f81</anchor>
      <arglist>(char *buf, short type, boolean descflag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdparam.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/anlz/</path>
    <filename>rdparam_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>rdparam</name>
      <anchorfile>rdparam_8c.html</anchorfile>
      <anchor>ae1142976d2785643ad40cdbfb7c3fc08</anchor>
      <arglist>(char *filename, HTK_Param *pinfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>strip.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/anlz/</path>
    <filename>strip_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>IS_INVALID_SAMPLE</name>
      <anchorfile>strip_8c.html</anchorfile>
      <anchor>a0191469b0275b5e8b535942568a53639</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WINDOWLEN</name>
      <anchorfile>strip_8c.html</anchorfile>
      <anchor>a60474af144a5f7aabf671aece3b309c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strip_zero</name>
      <anchorfile>strip_8c.html</anchorfile>
      <anchor>a0bbbff6017eb098662bf443e527e9c61</anchor>
      <arglist>(SP16 a[], int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>strip_mfcc.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/anlz/</path>
    <filename>strip__mfcc_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>IS_INVALID_FRAME_MFCC</name>
      <anchorfile>strip__mfcc_8c.html</anchorfile>
      <anchor>a6616507de2f60549048071eec6467820</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>param_strip_zero</name>
      <anchorfile>strip__mfcc_8c.html</anchorfile>
      <anchor>a5dbb9b6ec69e3bc5dfc841945c465cf3</anchor>
      <arglist>(HTK_Param *param)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wrsamp.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/anlz/</path>
    <filename>wrsamp_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>wrsamp</name>
      <anchorfile>wrsamp_8c.html</anchorfile>
      <anchor>a761d2e22a51312fbc368c1e7f7bfdba8</anchor>
      <arglist>(int fd, SP16 *buf, int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wrwav.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/anlz/</path>
    <filename>wrwav_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>MYWRITE</name>
      <anchorfile>wrwav_8c.html</anchorfile>
      <anchor>af5a1c1dccdef74a1152f005f6e46bbcd</anchor>
      <arglist>(A, B, C, D)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>wrwav_open</name>
      <anchorfile>wrwav_8c.html</anchorfile>
      <anchor>a95eecd29435dedc392f8a1125292540d</anchor>
      <arglist>(char *filename, int sfreq)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>wrwav_data</name>
      <anchorfile>wrwav_8c.html</anchorfile>
      <anchor>a07ff10c9dcdfa9db6740a938cb26da36</anchor>
      <arglist>(FILE *fp, SP16 *buf, int len)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>wrwav_close</name>
      <anchorfile>wrwav_8c.html</anchorfile>
      <anchor>ab4e781b2d13eb4e194a4e79d75d9416d</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cpair.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/dfa/</path>
    <filename>cpair_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>dfa_cp</name>
      <anchorfile>cpair_8c.html</anchorfile>
      <anchor>a0cf1426375919d5bba0ee2d334f6248b</anchor>
      <arglist>(DFA_INFO *dfa, int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>dfa_cp_begin</name>
      <anchorfile>cpair_8c.html</anchorfile>
      <anchor>ac458ac9d2c8413d2e753f9d34b9931dd</anchor>
      <arglist>(DFA_INFO *dfa, int i)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>dfa_cp_end</name>
      <anchorfile>cpair_8c.html</anchorfile>
      <anchor>a364d9f8d363597a7b2c99379ebdb54ff</anchor>
      <arglist>(DFA_INFO *dfa, int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dfa_cp</name>
      <anchorfile>cpair_8c.html</anchorfile>
      <anchor>a4b1f2f91fbfabe731f48be4e3ae31464</anchor>
      <arglist>(DFA_INFO *dfa, int i, int j, boolean value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dfa_cp_begin</name>
      <anchorfile>cpair_8c.html</anchorfile>
      <anchor>ac367c1996bd667d5a3a9af1d5e3ec7ec</anchor>
      <arglist>(DFA_INFO *dfa, int i, boolean value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dfa_cp_end</name>
      <anchorfile>cpair_8c.html</anchorfile>
      <anchor>a7a7ba4cf85dc4a48e7205b4b19df7913</anchor>
      <arglist>(DFA_INFO *dfa, int i, boolean value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init_dfa_cp</name>
      <anchorfile>cpair_8c.html</anchorfile>
      <anchor>aadc10a7fb6dae67469d7a401e4543029</anchor>
      <arglist>(DFA_INFO *dfa)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>malloc_dfa_cp</name>
      <anchorfile>cpair_8c.html</anchorfile>
      <anchor>a58e921e0f4e08a4d586266407500fc49</anchor>
      <arglist>(DFA_INFO *dfa, int term_num, int size)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>dfa_cp_append</name>
      <anchorfile>cpair_8c.html</anchorfile>
      <anchor>ae655a54389bba0cfc8cc4453e25701a6</anchor>
      <arglist>(DFA_INFO *dfa, DFA_INFO *src, int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_dfa_cp</name>
      <anchorfile>cpair_8c.html</anchorfile>
      <anchor>a68473c73f0614f58db4de3c455914fff</anchor>
      <arglist>(DFA_INFO *dfa)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dfa_lookup.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/dfa/</path>
    <filename>dfa__lookup_8c</filename>
    <member kind="function">
      <type>WORD_ID</type>
      <name>dfa_symbol_lookup</name>
      <anchorfile>dfa__lookup_8c.html</anchorfile>
      <anchor>a8ca234c7948a09452837fb5fa8cfd33e</anchor>
      <arglist>(DFA_INFO *dinfo, char *terminalname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dfa_malloc.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/dfa/</path>
    <filename>dfa__malloc_8c</filename>
    <member kind="function">
      <type>DFA_INFO *</type>
      <name>dfa_info_new</name>
      <anchorfile>dfa__malloc_8c.html</anchorfile>
      <anchor>af0af90e8406a09b56674be08fe9f8f09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dfa_info_free</name>
      <anchorfile>dfa__malloc_8c.html</anchorfile>
      <anchor>a2aab3db7f3b520c6160df1dc8b0ee835</anchor>
      <arglist>(DFA_INFO *dfa)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dfa_util.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/dfa/</path>
    <filename>dfa__util_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>print_dfa_info</name>
      <anchorfile>dfa__util_8c.html</anchorfile>
      <anchor>a29b8c7371ad640303191fbda152a693b</anchor>
      <arglist>(FILE *fp, DFA_INFO *dinfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_dfa_cp</name>
      <anchorfile>dfa__util_8c.html</anchorfile>
      <anchor>af3cc054a74402809c3b5ce864e76335b</anchor>
      <arglist>(FILE *fp, DFA_INFO *dinfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>init_dfa.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/dfa/</path>
    <filename>init__dfa_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>init_dfa</name>
      <anchorfile>init__dfa_8c.html</anchorfile>
      <anchor>a5aeb02138f618c22e656d8b3c076bc19</anchor>
      <arglist>(DFA_INFO *dinfo, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>make_dfa_voca_ref</name>
      <anchorfile>init__dfa_8c.html</anchorfile>
      <anchor>a24474786cd38cf9a910e38845cb38c12</anchor>
      <arglist>(DFA_INFO *dinfo, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dfa_find_pause_word</name>
      <anchorfile>init__dfa_8c.html</anchorfile>
      <anchor>ae5698bbea61f1f222ceb9765025a05c2</anchor>
      <arglist>(DFA_INFO *dfa, WORD_INFO *winfo, HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>dfa_pause_word_append</name>
      <anchorfile>init__dfa_8c.html</anchorfile>
      <anchor>afc38f39f114ddb7b7fa65cf4c2ec2346</anchor>
      <arglist>(DFA_INFO *dst, DFA_INFO *src, int coffset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mkcpair.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/dfa/</path>
    <filename>mkcpair_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>extract_cpair</name>
      <anchorfile>mkcpair_8c.html</anchorfile>
      <anchor>a992b765bef417a79b5b52b0286316761</anchor>
      <arglist>(DFA_INFO *dinfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>cpair_append</name>
      <anchorfile>mkcpair_8c.html</anchorfile>
      <anchor>a9ea8d2237824790fc2c7e69eaa9f5238</anchor>
      <arglist>(DFA_INFO *dst, DFA_INFO *src, int coffset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mkterminfo.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/dfa/</path>
    <filename>mkterminfo_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>make_terminfo</name>
      <anchorfile>mkterminfo_8c.html</anchorfile>
      <anchor>a95c2863f0461233069eb905df1d9b4e2</anchor>
      <arglist>(TERM_INFO *tinfo, DFA_INFO *dinfo, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_terminfo</name>
      <anchorfile>mkterminfo_8c.html</anchorfile>
      <anchor>ad78cdd7749a093a227262bfc7a1cfd7f</anchor>
      <arglist>(TERM_INFO *tinfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>terminfo_append</name>
      <anchorfile>mkterminfo_8c.html</anchorfile>
      <anchor>ac7b1a7136d3e8e9d7cb23410940fefaf</anchor>
      <arglist>(TERM_INFO *dst, TERM_INFO *src, int coffset, int woffset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rddfa.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/dfa/</path>
    <filename>rddfa_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>dfa_state_init</name>
      <anchorfile>rddfa_8c.html</anchorfile>
      <anchor>a92cd8cd83ecdf190c72755080d8a9ed7</anchor>
      <arglist>(DFA_INFO *dinfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dfa_state_expand</name>
      <anchorfile>rddfa_8c.html</anchorfile>
      <anchor>a5bb40ee0f134128b43d1844a0e530726</anchor>
      <arglist>(DFA_INFO *dinfo, int needed)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>rddfa</name>
      <anchorfile>rddfa_8c.html</anchorfile>
      <anchor>a7e5562631f416353a95d165909312d84</anchor>
      <arglist>(FILE *fp, DFA_INFO *dinfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>rddfa_fp</name>
      <anchorfile>rddfa_8c.html</anchorfile>
      <anchor>a04084b0cf14a99ada70c814d953c7708</anchor>
      <arglist>(FILE *fp, DFA_INFO *dinfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>rddfa_line</name>
      <anchorfile>rddfa_8c.html</anchorfile>
      <anchor>a72325671e5a52c673a02b38492aa1271</anchor>
      <arglist>(char *line, DFA_INFO *dinfo, int *state_max, int *arc_num, int *terminal_max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dfa_append</name>
      <anchorfile>rddfa_8c.html</anchorfile>
      <anchor>ac1cf3d30698623ab313769f2aa64ec18</anchor>
      <arglist>(DFA_INFO *dst, DFA_INFO *src, int soffset, int coffset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cdhmm.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>cdhmm_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>add_right_context</name>
      <anchorfile>cdhmm_8c.html</anchorfile>
      <anchor>a68c358baa949e005d624651b072a5cb6</anchor>
      <arglist>(char name[], char *rc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_left_context</name>
      <anchorfile>cdhmm_8c.html</anchorfile>
      <anchor>a521d95610433e215a900fdf935b6eb6a</anchor>
      <arglist>(char name[], char *lc)</arglist>
    </member>
    <member kind="function">
      <type>HMM_Logical *</type>
      <name>get_right_context_HMM</name>
      <anchorfile>cdhmm_8c.html</anchorfile>
      <anchor>aa1889d466b62af7ebb10a4f630fad280</anchor>
      <arglist>(HMM_Logical *base, char *rc_name, HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>HMM_Logical *</type>
      <name>get_left_context_HMM</name>
      <anchorfile>cdhmm_8c.html</anchorfile>
      <anchor>a402efa2185847de8425955aa37707377</anchor>
      <arglist>(HMM_Logical *base, char *lc_name, HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>center_name</name>
      <anchorfile>cdhmm_8c.html</anchorfile>
      <anchor>a6485b164784185954a7c855f5c559e29</anchor>
      <arglist>(char *hmmname, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>leftcenter_name</name>
      <anchorfile>cdhmm_8c.html</anchorfile>
      <anchor>a46a3aa339f446233fc2f35ae7433dbb5</anchor>
      <arglist>(char *hmmname, char *buf)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>rightcenter_name</name>
      <anchorfile>cdhmm_8c.html</anchorfile>
      <anchor>ab7dfe80c2d4976575ab85d3d6fcb63a9</anchor>
      <arglist>(char *hmmname, char *buf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cdset.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>cdset_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>CD_STATE_SET_STEP</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga3700ac3d7b15482e19174931cb9e648d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>CD_Set *</type>
      <name>cdset_lookup</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga43f616f3bfab4e116b3a447857049515</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *cdstr)</arglist>
    </member>
    <member kind="function">
      <type>CD_Set *</type>
      <name>lcdset_lookup_by_hmmname</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga6787796b1a041b3f9752003920da78b6</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *hmmname)</arglist>
    </member>
    <member kind="function">
      <type>CD_Set *</type>
      <name>rcdset_lookup_by_hmmname</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>gae84b6e22a78467fd9a7d89ad95013e31</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *hmmname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_all_cdinfo</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga058d7cf32cbd329a5516948dc4a70d29</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>regist_cdset</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga82ea08274488fb21c3820de4584b8c5c</anchor>
      <arglist>(APATNODE **root, HTK_HMM_Data *d, char *cdname, BMALLOC_BASE **mroot)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>make_cdset</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>gad0eece72a2aa126991a7029465406813</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_cdset</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga21361fa87ab20786215d960324f9ba74</anchor>
      <arglist>(APATNODE **root, BMALLOC_BASE **mroot)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_hmm_restriction.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>check__hmm__restriction_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>htk_hmm_has_several_arc_on_edge</name>
      <anchorfile>check__hmm__restriction_8c.html</anchorfile>
      <anchor>a23e0b8ac38b52d16f175e32af8a009ef</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>check_hmm_limit</name>
      <anchorfile>check__hmm__restriction_8c.html</anchorfile>
      <anchor>a753590f66d41d96ef5bd1eb17f02efdd</anchor>
      <arglist>(HTK_HMM_Data *dt)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>check_all_hmm_limit</name>
      <anchorfile>check__hmm__restriction_8c.html</anchorfile>
      <anchor>a4f73f4a93c995125de576de57ae4e4f1</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>is_skippable_model</name>
      <anchorfile>check__hmm__restriction_8c.html</anchorfile>
      <anchor>a5576bdca4b5b4a84c15eab97ca127d10</anchor>
      <arglist>(HTK_HMM_Data *d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>check_hmmtype.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>check__hmmtype_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>check_hmm_options</name>
      <anchorfile>check__hmmtype_8c.html</anchorfile>
      <anchor>aa7a3fac65c817708470b7741fcd401d9</anchor>
      <arglist>(HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>check_param_coherence</name>
      <anchorfile>check__hmmtype_8c.html</anchorfile>
      <anchor>a7a25b4b7806a73f02c007829efd84382</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_Param *pinfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>check_param_basetype</name>
      <anchorfile>check__hmmtype_8c.html</anchorfile>
      <anchor>a470fb92e4b732c5d075c1fa24325d50f</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_Param *pinfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>chkhmmlist.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>chkhmmlist_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>make_hmm_basephone_list</name>
      <anchorfile>chkhmmlist_8c.html</anchorfile>
      <anchor>a400cc3d69720e9bb0a7118ada8bf64f1</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_all_basephone_detail</name>
      <anchorfile>chkhmmlist_8c.html</anchorfile>
      <anchor>a2dc6b37cfba172ee07acb7f84b3a1b9b</anchor>
      <arglist>(HMM_basephone *base)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_all_basephone_name</name>
      <anchorfile>chkhmmlist_8c.html</anchorfile>
      <anchor>af567c0153fd3f697299cb20e4f59331b</anchor>
      <arglist>(HMM_basephone *base)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test_interword_triphone</name>
      <anchorfile>chkhmmlist_8c.html</anchorfile>
      <anchor>a4b2533cfe78d86b9d0dd46038d29cdf6</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>make_base_phone</name>
      <anchorfile>chkhmmlist_8c.html</anchorfile>
      <anchor>ade7569031b6402b053bac57854218224</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_phone_info</name>
      <anchorfile>chkhmmlist_8c.html</anchorfile>
      <anchor>ae2017fde212e7606cb2b392eaaca97a7</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmminfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>guess_cdHMM.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>guess__cdHMM_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>guess_if_cd_hmm</name>
      <anchorfile>guess__cdHMM_8c.html</anchorfile>
      <anchor>a7c6041434ee3ea3111a68925326350af</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hmm_lookup.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>hmm__lookup_8c</filename>
    <member kind="function">
      <type>HTK_HMM_Data *</type>
      <name>htk_hmmdata_lookup_physical</name>
      <anchorfile>hmm__lookup_8c.html</anchorfile>
      <anchor>a623983d526b49ca2a01d43ec562a575b</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *keyname)</arglist>
    </member>
    <member kind="function">
      <type>HMM_Logical *</type>
      <name>htk_hmmdata_lookup_logical</name>
      <anchorfile>hmm__lookup_8c.html</anchorfile>
      <anchor>a36f2a6eff6d6f318dd9898619ed192ce</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *keyname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_add_physical_to_logical</name>
      <anchorfile>hmm__lookup_8c.html</anchorfile>
      <anchor>aa6840873b786c050bec3afed8a578037</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hmm_add_pseudo_phones</name>
      <anchorfile>hmm__lookup_8c.html</anchorfile>
      <anchor>aa85aae89a9ab869f1e24b5d894728d6d</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hmm_logical_state_num</name>
      <anchorfile>hmm__lookup_8c.html</anchorfile>
      <anchor>aca37551517562412111c56c8e7daffff</anchor>
      <arglist>(HMM_Logical *lg)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Trans *</type>
      <name>hmm_logical_trans</name>
      <anchorfile>hmm__lookup_8c.html</anchorfile>
      <anchor>a84527d417b5caea36190ff9ec267630d</anchor>
      <arglist>(HMM_Logical *lg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>init_phmm.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>init__phmm_8c</filename>
    <member kind="function">
      <type>HTK_HMM_INFO *</type>
      <name>hmminfo_new</name>
      <anchorfile>init__phmm_8c.html</anchorfile>
      <anchor>acf12ed77b7c19e86775b7b7efb891472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hmminfo_free</name>
      <anchorfile>init__phmm_8c.html</anchorfile>
      <anchor>a56dfe39c43d18350e959dc2082179346</anchor>
      <arglist>(HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>init_hmminfo</name>
      <anchorfile>init__phmm_8c.html</anchorfile>
      <anchor>a74581e580784b863a4fdd7b2a8158d58</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *hmmfilename, char *namemapfile, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>htk_hmm_set_pause_model</name>
      <anchorfile>init__phmm_8c.html</anchorfile>
      <anchor>a8ff76ebf297709cfbfb114faf706078f</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *spmodel_name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>put_htkdata_info.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>put__htkdata__info_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>put_htk_trans</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>a03091e4fe0b1fb2be0394d393119ebcf</anchor>
      <arglist>(FILE *fp, HTK_HMM_Trans *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_htk_var</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>a6c89650fe0422ca6055ea8361f49ea1e</anchor>
      <arglist>(FILE *fp, HTK_HMM_Var *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_htk_dens</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>a49623849b226924f8c33fa0d88a6380c</anchor>
      <arglist>(FILE *fp, HTK_HMM_Dens *d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_htk_mpdf</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>a51e83462b474e6bc433f8d5a3b66fece</anchor>
      <arglist>(FILE *fp, HTK_HMM_PDF *m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_htk_state</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>acbece7425822ac6997c59060effd7f82</anchor>
      <arglist>(FILE *fp, HTK_HMM_State *s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_htk_hmm</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>a4edda233b01719ec1980e5552623cdfd</anchor>
      <arglist>(FILE *fp, HTK_HMM_Data *h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_logical_hmm</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>ac52290f6a1aa30df42757dbfe387b933</anchor>
      <arglist>(FILE *fp, HMM_Logical *logical)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_hmm_arc</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>a078fb4d6062be4b53157e9367334f881</anchor>
      <arglist>(FILE *fp, HMM *d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_hmm_outprob</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>a1f3fdd14a9c2a2b78b576212658f6ce4</anchor>
      <arglist>(FILE *fp, HMM *d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_hmm</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>a87a8b665c2a87f094e5b9a52f123a2f5</anchor>
      <arglist>(FILE *fp, HMM *d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_param_head</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>aad66cd39d365a6fbf43a8a8b968bc922</anchor>
      <arglist>(FILE *fp, HTK_Param_Header *h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_vec</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>aa3fb7583f20544f2481284464c0a3600</anchor>
      <arglist>(FILE *fp, VECT **p, int num, short veclen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_param</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>a8268b856547c74bed4effc5e6e45bb5b</anchor>
      <arglist>(FILE *fp, HTK_Param *pinfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_param_info</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>ad2347a444438305900d1436a36228b1b</anchor>
      <arglist>(FILE *fp, HTK_Param *pinfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_hmmdef_info</name>
      <anchorfile>put__htkdata__info_8c.html</anchorfile>
      <anchor>a8f84d3ea9d4c2520ad8b63a4f19607fa</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmminfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmdef.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmdef_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAXBUFLEN</name>
      <anchorfile>rdhmmdef_8c.html</anchorfile>
      <anchor>a0c51b9a83d264825d6d303edd784e889</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rderr</name>
      <anchorfile>rdhmmdef_8c.html</anchorfile>
      <anchor>a55d42585f49ab19a57d29167344540f3</anchor>
      <arglist>(char *str)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>read_token</name>
      <anchorfile>rdhmmdef_8c.html</anchorfile>
      <anchor>aa00f4c8847e392218999db9b06e0599a</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>htk_hmm_inverse_variances</name>
      <anchorfile>rdhmmdef_8c.html</anchorfile>
      <anchor>a2fa7a70a92f6e181f7f0ee98ee176251</anchor>
      <arglist>(HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>rdhmmdef</name>
      <anchorfile>rdhmmdef_8c.html</anchorfile>
      <anchor>a351aeb272201a1299b0060e51ebdf2ba</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rdhmmdef_token</name>
      <anchorfile>rdhmmdef_8c.html</anchorfile>
      <anchor>ade2999f49a4afaa79c11840345011d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmdef_data.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmdef__data_8c</filename>
    <member kind="function">
      <type>HTK_HMM_Data *</type>
      <name>htk_hmmdata_new</name>
      <anchorfile>rdhmmdef__data_8c.html</anchorfile>
      <anchor>a47397d6b05044e97991ee38bbd733646</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>htk_hmmdata_add</name>
      <anchorfile>rdhmmdef__data_8c.html</anchorfile>
      <anchor>a53b06aeb32815898f63c44c92db674f2</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_Data *new)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_HMM</name>
      <anchorfile>rdhmmdef__data_8c.html</anchorfile>
      <anchor>ad4126467e360d522d511952183eabacb</anchor>
      <arglist>(char *name, FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rdhmmdef_token</name>
      <anchorfile>rdhmmdef__data_8c.html</anchorfile>
      <anchor>ade2999f49a4afaa79c11840345011d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmdef_dens.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmdef__dens_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>dens_add</name>
      <anchorfile>rdhmmdef__dens_8c.html</anchorfile>
      <anchor>a0f8b0b5a94d72da18bed99228d237400</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_Dens *new)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Dens *</type>
      <name>dens_lookup</name>
      <anchorfile>rdhmmdef__dens_8c.html</anchorfile>
      <anchor>a247a11750900b850cc08a62a6face126</anchor>
      <arglist>(HTK_HMM_INFO *hmm, char *keyname)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Dens *</type>
      <name>get_dens_data</name>
      <anchorfile>rdhmmdef__dens_8c.html</anchorfile>
      <anchor>a44ae14ed83d06fa3dd55f5723c839f4f</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_dens_macro</name>
      <anchorfile>rdhmmdef__dens_8c.html</anchorfile>
      <anchor>a98f494c7c85c85126bba20a743793bab</anchor>
      <arglist>(char *name, FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rdhmmdef_token</name>
      <anchorfile>rdhmmdef__dens_8c.html</anchorfile>
      <anchor>ade2999f49a4afaa79c11840345011d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmdef_mpdf.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmdef__mpdf_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>mpdf_add</name>
      <anchorfile>rdhmmdef__mpdf_8c.html</anchorfile>
      <anchor>a7484d6cd5860caa4234b6ab6993b6085</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_PDF *new)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_PDF *</type>
      <name>mpdf_lookup</name>
      <anchorfile>rdhmmdef__mpdf_8c.html</anchorfile>
      <anchor>ab3df2a84b03f04949dc29db1aeaf0cf2</anchor>
      <arglist>(HTK_HMM_INFO *hmm, char *keyname)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_PDF *</type>
      <name>get_mpdf_data</name>
      <anchorfile>rdhmmdef__mpdf_8c.html</anchorfile>
      <anchor>ae696f1dbf8854d6f896e132790628469</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm, int mix_num, short stream_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_mpdf_macro</name>
      <anchorfile>rdhmmdef__mpdf_8c.html</anchorfile>
      <anchor>aa20a47d98a20020aecb88762c0e959ab</anchor>
      <arglist>(char *name, FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rdhmmdef_token</name>
      <anchorfile>rdhmmdef__mpdf_8c.html</anchorfile>
      <anchor>ade2999f49a4afaa79c11840345011d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmdef_options.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmdef__options_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>set_global_opt</name>
      <anchorfile>rdhmmdef__options_8c.html</anchorfile>
      <anchor>a679cb69c0e0d8f9a63e472a77f78dffc</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_cov_str</name>
      <anchorfile>rdhmmdef__options_8c.html</anchorfile>
      <anchor>a4be53b810a925959c1c6780d30e88c94</anchor>
      <arglist>(short covtype)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_dur_str</name>
      <anchorfile>rdhmmdef__options_8c.html</anchorfile>
      <anchor>a0e1bad38e68b36390027aee5ae067e15</anchor>
      <arglist>(short durtype)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rdhmmdef_token</name>
      <anchorfile>rdhmmdef__options_8c.html</anchorfile>
      <anchor>ade2999f49a4afaa79c11840345011d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmdef_regtree.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmdef__regtree_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>def_regtree_macro</name>
      <anchorfile>rdhmmdef__regtree_8c.html</anchorfile>
      <anchor>aba05b25f56e06b4ac19de684ccaf6d43</anchor>
      <arglist>(char *name, FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rdhmmdef_token</name>
      <anchorfile>rdhmmdef__regtree_8c.html</anchorfile>
      <anchor>ade2999f49a4afaa79c11840345011d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmdef_state.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmdef__state_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>state_add</name>
      <anchorfile>rdhmmdef__state_8c.html</anchorfile>
      <anchor>a12492e936124a308c87cbfa3c49c2086</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_State *new)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_State *</type>
      <name>state_lookup</name>
      <anchorfile>rdhmmdef__state_8c.html</anchorfile>
      <anchor>af2425542b70345cfa5a386c4c29bb200</anchor>
      <arglist>(HTK_HMM_INFO *hmm, char *keyname)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_State *</type>
      <name>get_state_data</name>
      <anchorfile>rdhmmdef__state_8c.html</anchorfile>
      <anchor>a9e37b324548c5e7f0a1b6411a62fa691</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_state_macro</name>
      <anchorfile>rdhmmdef__state_8c.html</anchorfile>
      <anchor>a5d9a08214211e12286c8665002729ceb</anchor>
      <arglist>(char *name, FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rdhmmdef_token</name>
      <anchorfile>rdhmmdef__state_8c.html</anchorfile>
      <anchor>ade2999f49a4afaa79c11840345011d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmdef_streamweight.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmdef__streamweight_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>sw_add</name>
      <anchorfile>rdhmmdef__streamweight_8c.html</anchorfile>
      <anchor>a34dd7f0b47527f6f639654ca34224b40</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_StreamWeight *new)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_StreamWeight *</type>
      <name>get_streamweight_data</name>
      <anchorfile>rdhmmdef__streamweight_8c.html</anchorfile>
      <anchor>ad2db00fb24c2b6f9737b861a28e88829</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_streamweight_macro</name>
      <anchorfile>rdhmmdef__streamweight_8c.html</anchorfile>
      <anchor>a9397d213f3db569c5cc42ebe50da087b</anchor>
      <arglist>(char *name, FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rdhmmdef_token</name>
      <anchorfile>rdhmmdef__streamweight_8c.html</anchorfile>
      <anchor>ade2999f49a4afaa79c11840345011d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmdef_tiedmix.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmdef__tiedmix_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>codebook_add</name>
      <anchorfile>rdhmmdef__tiedmix_8c.html</anchorfile>
      <anchor>acd8d5bccba28d22695247f3c2a712d0b</anchor>
      <arglist>(HTK_HMM_INFO *hmm, GCODEBOOK *new)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tmix_read</name>
      <anchorfile>rdhmmdef__tiedmix_8c.html</anchorfile>
      <anchor>a4797bfb92af440bf4e81d63598ba40b6</anchor>
      <arglist>(FILE *fp, HTK_HMM_PDF *mpdf, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rdhmmdef_token</name>
      <anchorfile>rdhmmdef__tiedmix_8c.html</anchorfile>
      <anchor>ade2999f49a4afaa79c11840345011d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmdef_trans.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmdef__trans_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>trans_add</name>
      <anchorfile>rdhmmdef__trans_8c.html</anchorfile>
      <anchor>a51ccb1128a1deaff0ba237ec5fea2437</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_Trans *new)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Trans *</type>
      <name>get_trans_data</name>
      <anchorfile>rdhmmdef__trans_8c.html</anchorfile>
      <anchor>a2c6efc643e099d062eb47bf2fb5656db</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_trans_macro</name>
      <anchorfile>rdhmmdef__trans_8c.html</anchorfile>
      <anchor>a15a957b25ac3edbebfeed009b05fa59a</anchor>
      <arglist>(char *name, FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rdhmmdef_token</name>
      <anchorfile>rdhmmdef__trans_8c.html</anchorfile>
      <anchor>ade2999f49a4afaa79c11840345011d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmdef_var.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmdef__var_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>var_add</name>
      <anchorfile>rdhmmdef__var_8c.html</anchorfile>
      <anchor>a69b3281fea1a63d2dc217c6b13242fa6</anchor>
      <arglist>(HTK_HMM_INFO *hmm, HTK_HMM_Var *new)</arglist>
    </member>
    <member kind="function">
      <type>HTK_HMM_Var *</type>
      <name>get_var_data</name>
      <anchorfile>rdhmmdef__var_8c.html</anchorfile>
      <anchor>a4f7cb3adeb6d27025b6f41c336f176eb</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>def_var_macro</name>
      <anchorfile>rdhmmdef__var_8c.html</anchorfile>
      <anchor>af8b73d986226d5af4e81b4e54265faee</anchor>
      <arglist>(char *name, FILE *fp, HTK_HMM_INFO *hmm)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>rdhmmdef_token</name>
      <anchorfile>rdhmmdef__var_8c.html</anchorfile>
      <anchor>ade2999f49a4afaa79c11840345011d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdhmmlist.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>rdhmmlist_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAXLINEINHMMLIST</name>
      <anchorfile>rdhmmlist_8c.html</anchorfile>
      <anchor>ae2619b58fe368417101e73343511c132</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>rdhmmlist</name>
      <anchorfile>rdhmmlist_8c.html</anchorfile>
      <anchor>a8ffedd8b1432fc8fd0f7fc364a931e23</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmminfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>read_binhmm.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>read__binhmm_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>read_binhmm</name>
      <anchorfile>read__binhmm_8c.html</anchorfile>
      <anchor>ac9770f1fd81137791e52bd371e10a729</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm, boolean gzfile_p, Value *para)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>write_binhmm.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>write__binhmm_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>write_binhmm</name>
      <anchorfile>write__binhmm_8c.html</anchorfile>
      <anchor>a0d55469f8bdc25ff87cee71ab2b95edd</anchor>
      <arglist>(FILE *fp, HTK_HMM_INFO *hmm, Value *para)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rdwt.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/net/</path>
    <filename>rdwt_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>BUFSZ</name>
      <anchorfile>rdwt_8c.html</anchorfile>
      <anchor>ab26c26cbf7a0c97d8960c3cfb413f882</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rd</name>
      <anchorfile>rdwt_8c.html</anchorfile>
      <anchor>a67d426fdc68b09a948c7fc5d5b7c5ca4</anchor>
      <arglist>(int fd, char *data, int *len, int maxlen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wt</name>
      <anchorfile>rdwt_8c.html</anchorfile>
      <anchor>a583464ddfa9762130dfbc553f607d31f</anchor>
      <arglist>(int fd, char *data, int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>server-client.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/net/</path>
    <filename>server-client_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>ready_as_server</name>
      <anchorfile>server-client_8c.html</anchorfile>
      <anchor>a70485f9003ed0673ccc03ab8f6d932d1</anchor>
      <arglist>(int port_num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>accept_from</name>
      <anchorfile>server-client_8c.html</anchorfile>
      <anchor>ab07ef11df7cdc7a897127d1b05119a45</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>make_connection</name>
      <anchorfile>server-client_8c.html</anchorfile>
      <anchor>a588f93aa4f6955a449a1f50441076c82</anchor>
      <arglist>(char *hostname, int port_num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>make_connection_unix</name>
      <anchorfile>server-client_8c.html</anchorfile>
      <anchor>ab0b14ffd67d7691d6f1a2bd4decde9ff</anchor>
      <arglist>(char *address)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>close_socket</name>
      <anchorfile>server-client_8c.html</anchorfile>
      <anchor>aaa8b554900909e62a6d615b292f29c5e</anchor>
      <arglist>(int sd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup_socket</name>
      <anchorfile>server-client_8c.html</anchorfile>
      <anchor>ae233b0ad0d1800bff3c206729690dcb2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>init_ngram.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/ngram/</path>
    <filename>init__ngram_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>init_ngram_bin</name>
      <anchorfile>init__ngram_8c.html</anchorfile>
      <anchor>a1f45f7f4c68f0fbe3210495c176a4828</anchor>
      <arglist>(NGRAM_INFO *ndata, char *bin_ngram_file)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>init_ngram_arpa</name>
      <anchorfile>init__ngram_8c.html</anchorfile>
      <anchor>ac7fc3a2a92a41cd8503d8bbf616ef1af</anchor>
      <arglist>(NGRAM_INFO *ndata, char *ngram_file, int dir)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>init_ngram_arpa_additional</name>
      <anchorfile>init__ngram_8c.html</anchorfile>
      <anchor>a58c322144e1f4cb434efee8a27868a99</anchor>
      <arglist>(NGRAM_INFO *ndata, char *bigram_file)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>make_voca_ref</name>
      <anchorfile>init__ngram_8c.html</anchorfile>
      <anchor>ae622a61663c01b00943105a33dc9b873</anchor>
      <arglist>(NGRAM_INFO *ndata, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_unknown_id</name>
      <anchorfile>init__ngram_8c.html</anchorfile>
      <anchor>a1aa23039e9813d2b117c4c6806983d76</anchor>
      <arglist>(NGRAM_INFO *ndata, char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fix_uniprob_srilm</name>
      <anchorfile>init__ngram_8c.html</anchorfile>
      <anchor>accc3a772baa15200ed1041f1199e7624</anchor>
      <arglist>(NGRAM_INFO *ndata, WORD_INFO *winfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_access.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/ngram/</path>
    <filename>ngram__access_8c</filename>
    <member kind="function">
      <type>NNID</type>
      <name>search_ngram</name>
      <anchorfile>ngram__access_8c.html</anchorfile>
      <anchor>a121f2bd9463d11219ac0bd3884bdf5ce</anchor>
      <arglist>(NGRAM_INFO *ndata, int n, WORD_ID *w)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>ngram_prob</name>
      <anchorfile>ngram__access_8c.html</anchorfile>
      <anchor>abf5119abd8ca892c9007c4f03e2df787</anchor>
      <arglist>(NGRAM_INFO *ndata, int n, WORD_ID *w)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>uni_prob</name>
      <anchorfile>ngram__access_8c.html</anchorfile>
      <anchor>ad4ae760668068d687ec7dc15480e6063</anchor>
      <arglist>(NGRAM_INFO *ndata, WORD_ID w)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>bi_prob</name>
      <anchorfile>ngram__access_8c.html</anchorfile>
      <anchor>ac4fe24465041175d6908262e5c66de1e</anchor>
      <arglist>(NGRAM_INFO *ndata, WORD_ID w1, WORD_ID w2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bi_prob_func_set</name>
      <anchorfile>ngram__access_8c.html</anchorfile>
      <anchor>a33b3a07ddf30c12aa6e6e664e817042a</anchor>
      <arglist>(NGRAM_INFO *ndata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_compact_context.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/ngram/</path>
    <filename>ngram__compact__context_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>ngram_compact_context</name>
      <anchorfile>ngram__compact__context_8c.html</anchorfile>
      <anchor>ad0b439cbf16816be2f766bb0d6c3f1f7</anchor>
      <arglist>(NGRAM_INFO *ndata, int n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_lookup.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/ngram/</path>
    <filename>ngram__lookup_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>ngram_make_lookup_tree</name>
      <anchorfile>ngram__lookup_8c.html</anchorfile>
      <anchor>a3758ab05678f76d5e411b14df6dfc295</anchor>
      <arglist>(NGRAM_INFO *ndata)</arglist>
    </member>
    <member kind="function">
      <type>WORD_ID</type>
      <name>ngram_lookup_word</name>
      <anchorfile>ngram__lookup_8c.html</anchorfile>
      <anchor>af9a0c88353b2de8d0330718be2318a75</anchor>
      <arglist>(NGRAM_INFO *ndata, char *wordstr)</arglist>
    </member>
    <member kind="function">
      <type>WORD_ID</type>
      <name>make_ngram_ref</name>
      <anchorfile>ngram__lookup_8c.html</anchorfile>
      <anchor>a6064dc5fde3964dd64ac47b3168ffe49</anchor>
      <arglist>(NGRAM_INFO *ndata, char *wstr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_malloc.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/ngram/</path>
    <filename>ngram__malloc_8c</filename>
    <member kind="function">
      <type>NGRAM_INFO *</type>
      <name>ngram_info_new</name>
      <anchorfile>ngram__malloc_8c.html</anchorfile>
      <anchor>ae777d2adbe6797539b9867f5c2e07a7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ngram_info_free</name>
      <anchorfile>ngram__malloc_8c.html</anchorfile>
      <anchor>ad35779ad38bfc41125cb2319e665c562</anchor>
      <arglist>(NGRAM_INFO *ndata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_read_arpa.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/ngram/</path>
    <filename>ngram__read__arpa_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>ngram_read_arpa</name>
      <anchorfile>ngram__read__arpa_8c.html</anchorfile>
      <anchor>a81b29d950f174f8843408c2931da1837</anchor>
      <arglist>(FILE *fp, NGRAM_INFO *ndata, boolean addition)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_read_bin.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/ngram/</path>
    <filename>ngram__read__bin_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>ngram_read_bin</name>
      <anchorfile>ngram__read__bin_8c.html</anchorfile>
      <anchor>a3ad0145181ebcf4ed4f9979cbabf721c</anchor>
      <arglist>(FILE *fp, NGRAM_INFO *ndata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_util.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/ngram/</path>
    <filename>ngram__util_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>print_ngram_info</name>
      <anchorfile>ngram__util_8c.html</anchorfile>
      <anchor>a437b0539c85462bdc71e0ae92b3d1353</anchor>
      <arglist>(FILE *fp, NGRAM_INFO *ndata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ngram_write_bin.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/ngram/</path>
    <filename>ngram__write__bin_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>ngram_write_bin</name>
      <anchorfile>ngram__write__bin_8c.html</anchorfile>
      <anchor>a25dd96cd04b7d8cf2f46208ffbe51bc6</anchor>
      <arglist>(FILE *fp, NGRAM_INFO *ndata, char *headerstr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>addlog.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>addlog_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>TBLSIZE</name>
      <anchorfile>addlog_8c.html</anchorfile>
      <anchor>a2a83df9229bbee8c4169a909c825fe3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VRANGE</name>
      <anchorfile>addlog_8c.html</anchorfile>
      <anchor>aa826a7df672bf9172fce0f6bb0d78c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TMAG</name>
      <anchorfile>addlog_8c.html</anchorfile>
      <anchor>aa3a3cf6e254995cb6754dd4498f23616</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_log_tbl</name>
      <anchorfile>addlog_8c.html</anchorfile>
      <anchor>aebdb3c07e84f554c46f6a60235b4286e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>addlog</name>
      <anchorfile>addlog_8c.html</anchorfile>
      <anchor>aaa46c6a69af0a26821f7672125ba3d3e</anchor>
      <arglist>(LOGPROB x, LOGPROB y)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>addlog_array</name>
      <anchorfile>addlog_8c.html</anchorfile>
      <anchor>a3eefc60e02da9b4ad7a326b46954da9b</anchor>
      <arglist>(LOGPROB *a, int n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>calc_mix.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>calc__mix_8c</filename>
    <member kind="function">
      <type>LOGPROB</type>
      <name>calc_mix</name>
      <anchorfile>calc__mix_8c.html</anchorfile>
      <anchor>adee853004316d81e67196bfbf09174b2</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>calc_tied_mix.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>calc__tied__mix_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>calc_tied_mix_init</name>
      <anchorfile>calc__tied__mix_8c.html</anchorfile>
      <anchor>a5047ded595cc72e6e28461d5098ebe4b</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>calc_tied_mix_prepare</name>
      <anchorfile>calc__tied__mix_8c.html</anchorfile>
      <anchor>afc6924bae9248171ddc828ba49aae1a7</anchor>
      <arglist>(HMMWork *wrk, int framenum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_tied_mix_free</name>
      <anchorfile>calc__tied__mix_8c.html</anchorfile>
      <anchor>af931795f379068facc7d68b586db661a</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>calc_tied_mix</name>
      <anchorfile>calc__tied__mix_8c.html</anchorfile>
      <anchor>ad1e2568c7ad2d950fa43e96854428546</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>calc_compound_mix</name>
      <anchorfile>calc__tied__mix_8c.html</anchorfile>
      <anchor>a3e70b0e16a394f8cc5ab5b06d5515759</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gms.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>gms_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>SD</name>
      <anchorfile>gms_8c.html</anchorfile>
      <anchor>a04b7a530d058f413e7fbef28f57e445b</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCOPY</name>
      <anchorfile>gms_8c.html</anchorfile>
      <anchor>a71db35a0ed6319be193bd519cc009894</anchor>
      <arglist>(D, S)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SVAL</name>
      <anchorfile>gms_8c.html</anchorfile>
      <anchor>ae57752de933fa67a969e6a5474b81c17</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STVAL</name>
      <anchorfile>gms_8c.html</anchorfile>
      <anchor>a90658fc20c0fa1c9e7d1361634fe8326</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gms_init</name>
      <anchorfile>gms_8c.html</anchorfile>
      <anchor>ae3943d48628eeae589938f6dd53085b5</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gms_prepare</name>
      <anchorfile>gms_8c.html</anchorfile>
      <anchor>ab347978d6b898c7486959e0fa3e4d60b</anchor>
      <arglist>(HMMWork *wrk, int framenum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gms_free</name>
      <anchorfile>gms_8c.html</anchorfile>
      <anchor>a8dcf75bd0b8248230bc7d0c0916a833e</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>gms_state</name>
      <anchorfile>gms_8c.html</anchorfile>
      <anchor>a36352b2ab066b484a9601a60e4025d72</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gms_gprune.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>gms__gprune_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>GS_MAX_PROB</name>
      <anchorfile>gms__gprune_8c.html</anchorfile>
      <anchor>aec74da3a4c6047a2c7c2a452d0e2131b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LAST_BEST</name>
      <anchorfile>gms__gprune_8c.html</anchorfile>
      <anchor>a0ef156b4989fc1226938bf94fd597640</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gms_gprune_init</name>
      <anchorfile>gms__gprune_8c.html</anchorfile>
      <anchor>a56bde870da4f120e78a75fe8d45bd2ac</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gms_gprune_prepare</name>
      <anchorfile>gms__gprune_8c.html</anchorfile>
      <anchor>ad8f4b8d967e3821b3b4f5839182ac538</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gms_gprune_free</name>
      <anchorfile>gms__gprune_8c.html</anchorfile>
      <anchor>a41a245a2683cff2b4099677d5a7b0f93</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute_gs_scores</name>
      <anchorfile>gms__gprune_8c.html</anchorfile>
      <anchor>af6a3f2eea21d1fd016285d877967db0f</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gprune_beam.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>gprune__beam_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>gprune_beam_init</name>
      <anchorfile>gprune__beam_8c.html</anchorfile>
      <anchor>aac4d8905431dc7917487f7abf32e6bfc</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_beam_free</name>
      <anchorfile>gprune__beam_8c.html</anchorfile>
      <anchor>a7cd38d84a9a5708f450b2bb9d4784396</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_beam</name>
      <anchorfile>gprune__beam_8c.html</anchorfile>
      <anchor>a3fafbfe36189faeefbd5ebd7bc3cc003</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens **g, int gnum, int *last_id, int lnum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gprune_common.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>gprune__common_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>cache_push</name>
      <anchorfile>gprune__common_8c.html</anchorfile>
      <anchor>a8e91cb75a98f3a15a4745ccc4ad38d43</anchor>
      <arglist>(HMMWork *wrk, int id, LOGPROB score, int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gprune_heu.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>gprune__heu_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>gprune_heu_init</name>
      <anchorfile>gprune__heu_8c.html</anchorfile>
      <anchor>a9609f5e188579080c67384c978c50c75</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_heu_free</name>
      <anchorfile>gprune__heu_8c.html</anchorfile>
      <anchor>adeb19ba31f1d3849bccfd799d1b5fd1c</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_heu</name>
      <anchorfile>gprune__heu_8c.html</anchorfile>
      <anchor>a91c87c949fbff727844446af5c09453d</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens **g, int gnum, int *last_id, int lnum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gprune_none.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>gprune__none_8c</filename>
    <member kind="function">
      <type>LOGPROB</type>
      <name>compute_g_base</name>
      <anchorfile>gprune__none_8c.html</anchorfile>
      <anchor>afd22229849a4f57c2765ef5dbd18a5a3</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens *binfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gprune_none_init</name>
      <anchorfile>gprune__none_8c.html</anchorfile>
      <anchor>a8881786635567a8dccc1b67b2430303a</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_none_free</name>
      <anchorfile>gprune__none_8c.html</anchorfile>
      <anchor>a105669f3330424cd9f5749d88a13edda</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_none</name>
      <anchorfile>gprune__none_8c.html</anchorfile>
      <anchor>a436b971b31925a3f0cf1b9a746f69d0d</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens **g, int num, int *last_id, int lnum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gprune_safe.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>gprune__safe_8c</filename>
    <member kind="function">
      <type>LOGPROB</type>
      <name>compute_g_safe</name>
      <anchorfile>gprune__safe_8c.html</anchorfile>
      <anchor>a3ff519469af3adc154fd16d870d4ef76</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens *binfo, LOGPROB thres)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>gprune_safe_init</name>
      <anchorfile>gprune__safe_8c.html</anchorfile>
      <anchor>a81670a13685bdc34aa6ada19badbea2c</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_safe_free</name>
      <anchorfile>gprune__safe_8c.html</anchorfile>
      <anchor>a668cec8f38b6191c7c68b4f6f592388d</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gprune_safe</name>
      <anchorfile>gprune__safe_8c.html</anchorfile>
      <anchor>a04cfcf852e9380d974875ab77fcaa02c</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens **g, int gnum, int *last_id, int lnum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mkwhmm.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>mkwhmm_8c</filename>
    <member kind="function">
      <type>HMM *</type>
      <name>new_make_word_hmm_with_lm</name>
      <anchorfile>mkwhmm_8c.html</anchorfile>
      <anchor>a6c4229d720d46c4467a276f485cbaa8e</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, HMM_Logical **hdseq, int hdseqlen, boolean *has_sp, LOGPROB *lscore)</arglist>
    </member>
    <member kind="function">
      <type>HMM *</type>
      <name>new_make_word_hmm</name>
      <anchorfile>mkwhmm_8c.html</anchorfile>
      <anchor>a0568ba98dab8ed5730d7d6bc310e4335</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, HMM_Logical **hdseq, int hdseqlen, boolean *has_sp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_hmm</name>
      <anchorfile>mkwhmm_8c.html</anchorfile>
      <anchor>a362b7a48a653cb947c8df9f9ed716ded</anchor>
      <arglist>(HMM *d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>outprob.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>outprob_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>LOG_UNDEF</name>
      <anchorfile>outprob_8c.html</anchorfile>
      <anchor>ae58694751e64024aeef85ba321b75952</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>outprob_cache_init</name>
      <anchorfile>outprob_8c.html</anchorfile>
      <anchor>a35a8dc0f1778bf5c300a5a0eb3500615</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>outprob_cache_prepare</name>
      <anchorfile>outprob_8c.html</anchorfile>
      <anchor>ad9c28af649859647a6e23a4ba02a816a</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outprob_cache_free</name>
      <anchorfile>outprob_8c.html</anchorfile>
      <anchor>a5204927358b2e6473c21243777de3655</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>outprob_state</name>
      <anchorfile>outprob_8c.html</anchorfile>
      <anchor>af8403cde97f405069c9ba34d75c9b41a</anchor>
      <arglist>(HMMWork *wrk, int t, HTK_HMM_State *stateinfo, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outprob_cd_nbest_init</name>
      <anchorfile>outprob_8c.html</anchorfile>
      <anchor>a726d677d0530bdf983e6a3d8a8742fb6</anchor>
      <arglist>(HMMWork *wrk, int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outprob_cd_nbest_free</name>
      <anchorfile>outprob_8c.html</anchorfile>
      <anchor>a732794f818dcf3822596b21ef59d8ca1</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>outprob_cd</name>
      <anchorfile>outprob_8c.html</anchorfile>
      <anchor>a6595146c2b90142e16a2bd7e6fb3aacd</anchor>
      <arglist>(HMMWork *wrk, int t, CD_State_Set *lset, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>outprob</name>
      <anchorfile>outprob_8c.html</anchorfile>
      <anchor>a82261fe7bb0ce60fe98aed32a9c59c2a</anchor>
      <arglist>(HMMWork *wrk, int t, HMM_STATE *hmmstate, HTK_Param *param)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>outprob_init.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>outprob__init_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>outprob_init</name>
      <anchorfile>outprob__init_8c.html</anchorfile>
      <anchor>a77b1019b645bef97232da674d73d3884</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_INFO *hmminfo, HTK_HMM_INFO *gshmm, int gms_num, int gprune_method, int gprune_mixnum)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>outprob_prepare</name>
      <anchorfile>outprob__init_8c.html</anchorfile>
      <anchor>a2ce20a3f6244025b75965aa93d791176</anchor>
      <arglist>(HMMWork *wrk, int framenum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outprob_free</name>
      <anchorfile>outprob__init_8c.html</anchorfile>
      <anchor>ac989dc74eea72fd7578fba701f23a675</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vsegment.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>vsegment_8c</filename>
    <member kind="function">
      <type>LOGPROB</type>
      <name>viterbi_segment</name>
      <anchorfile>vsegment_8c.html</anchorfile>
      <anchor>a21d3c589a1bf53237130af810ff108b4</anchor>
      <arglist>(HMM *hmm, HTK_Param *param, HMMWork *wrk, boolean multipath, int *endstates, int ulen, int **id_ret, int **seg_ret, LOGPROB **uscore_ret, int *slen_ret)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aptree.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>aptree_8c</filename>
    <member kind="function">
      <type>void *</type>
      <name>aptree_search_data</name>
      <anchorfile>aptree_8c.html</anchorfile>
      <anchor>a27c3d6a0e054202ecf7d5a6f0e9bf78b</anchor>
      <arglist>(char *str, APATNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>APATNODE *</type>
      <name>aptree_make_root_node</name>
      <anchorfile>aptree_8c.html</anchorfile>
      <anchor>a6a66f03a4af96887df530b3250c5bb4b</anchor>
      <arglist>(void *data, BMALLOC_BASE **mroot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aptree_add_entry</name>
      <anchorfile>aptree_8c.html</anchorfile>
      <anchor>a53b77aa0e08133bb42d913da88d3f610</anchor>
      <arglist>(char *str, void *data, char *matchstr, APATNODE **rootnode, BMALLOC_BASE **mroot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aptree_remove_entry</name>
      <anchorfile>aptree_8c.html</anchorfile>
      <anchor>a4c9487558cf92d5236cb86064eef7bb5</anchor>
      <arglist>(char *str, APATNODE **rootnode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>aptree_traverse_and_do</name>
      <anchorfile>aptree_8c.html</anchorfile>
      <anchor>a10c3c8ce43ae73254a481030123a778f</anchor>
      <arglist>(APATNODE *node, void(*callback)(void *))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>confout.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>confout_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>confout_version</name>
      <anchorfile>confout_8c.html</anchorfile>
      <anchor>a956ef1b0e554ba1011a8e4f7384ba15b</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout_audio</name>
      <anchorfile>confout_8c.html</anchorfile>
      <anchor>a0cf96ac67b8b39997c11bd7da4949c9f</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout_lm</name>
      <anchorfile>confout_8c.html</anchorfile>
      <anchor>aeced84e117c01e7e1ef71719497be268</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout_am</name>
      <anchorfile>confout_8c.html</anchorfile>
      <anchor>ac9e6752e4dcb4a51e26ea0cd091b9721</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout_lib</name>
      <anchorfile>confout_8c.html</anchorfile>
      <anchor>a8f2b53272d8e2767d8f455cf2b97bcb3</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout_process</name>
      <anchorfile>confout_8c.html</anchorfile>
      <anchor>a4a654d587051040e6d7da1341c81144b</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>confout</name>
      <anchorfile>confout_8c.html</anchorfile>
      <anchor>ad48549ed43f4e649bbd46fd0ad337056</anchor>
      <arglist>(FILE *strm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>endian.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>endian_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>swap_bytes</name>
      <anchorfile>endian_8c.html</anchorfile>
      <anchor>aa781479c9f555dd3fd095c67aeacbaf9</anchor>
      <arglist>(char *buf, size_t unitbyte, size_t unitnum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap_sample_bytes</name>
      <anchorfile>endian_8c.html</anchorfile>
      <anchor>acf5d0ea28089a8ca4b46cd6869c4e4ed</anchor>
      <arglist>(SP16 *buf, int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gzfile.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>gzfile_8c</filename>
    <member kind="function">
      <type>FILE *</type>
      <name>fopen_readfile</name>
      <anchorfile>gzfile_8c.html</anchorfile>
      <anchor>a780e51cc5f8e35bf71151f54ee306998</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fclose_readfile</name>
      <anchorfile>gzfile_8c.html</anchorfile>
      <anchor>a9024cc90aaf11d2fe70c128fe642cfe2</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>myfread</name>
      <anchorfile>gzfile_8c.html</anchorfile>
      <anchor>ac3c8346f882198bf28b3950321be52bd</anchor>
      <arglist>(void *ptr, size_t size, size_t n, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>myfgetc</name>
      <anchorfile>gzfile_8c.html</anchorfile>
      <anchor>a297d178a96506babf03adfadf45c7771</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>myfeof</name>
      <anchorfile>gzfile_8c.html</anchorfile>
      <anchor>ae2db740f087bb2eedb3ed35ba844b0ea</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>myfrewind</name>
      <anchorfile>gzfile_8c.html</anchorfile>
      <anchor>a1fede05a302fba2222cdc10a775f3807</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>fopen_writefile</name>
      <anchorfile>gzfile_8c.html</anchorfile>
      <anchor>ac4cfe67f9eefa54865c8f919a8f403b7</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fclose_writefile</name>
      <anchorfile>gzfile_8c.html</anchorfile>
      <anchor>ab0cf8c6c9dbcaad67fe48e0a45b93acf</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>myfwrite</name>
      <anchorfile>gzfile_8c.html</anchorfile>
      <anchor>a106a34fa81d1731bfb719dded8102489</anchor>
      <arglist>(void *ptr, size_t size, size_t n, FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>jlog.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>jlog_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAX_PRINTF_LEN</name>
      <anchorfile>jlog_8c.html</anchorfile>
      <anchor>a46a184236602eb6417c460847c617ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jlog_set_output</name>
      <anchorfile>jlog_8c.html</anchorfile>
      <anchor>a3ffbe4eb8dc879412063a1958872b875</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>jlog_get_fp</name>
      <anchorfile>jlog_8c.html</anchorfile>
      <anchor>adb644986973f02df454b3c0009d60ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jlog</name>
      <anchorfile>jlog_8c.html</anchorfile>
      <anchor>a197e36588226c8b7fc11e621cf669f53</anchor>
      <arglist>(char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>jlog_flush</name>
      <anchorfile>jlog_8c.html</anchorfile>
      <anchor>a5ede57446aede375aea4d311b7b31c31</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mybmalloc.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>mybmalloc_8c</filename>
    <member kind="function">
      <type>void *</type>
      <name>mybmalloc2</name>
      <anchorfile>mybmalloc_8c.html</anchorfile>
      <anchor>af09f41794eecbbd606b4143af8124388</anchor>
      <arglist>(unsigned int size, BMALLOC_BASE **list)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mybstrdup2</name>
      <anchorfile>mybmalloc_8c.html</anchorfile>
      <anchor>a15439434c18ea3c31a0274d4aa5ff4c4</anchor>
      <arglist>(char *s, BMALLOC_BASE **list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mybfree2</name>
      <anchorfile>mybmalloc_8c.html</anchorfile>
      <anchor>aaaf37923f37a50995137a5894486254b</anchor>
      <arglist>(BMALLOC_BASE **list)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mymalloc.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>mymalloc_8c</filename>
    <member kind="function">
      <type>void *</type>
      <name>mymalloc</name>
      <anchorfile>mymalloc_8c.html</anchorfile>
      <anchor>aa48c2dcee3d0dfc02335202dbdab25de</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>mymalloc_big</name>
      <anchorfile>mymalloc_8c.html</anchorfile>
      <anchor>a68b7200512b61cf6ce4d202928bb5b42</anchor>
      <arglist>(size_t elsize, size_t nelem)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>myrealloc</name>
      <anchorfile>mymalloc_8c.html</anchorfile>
      <anchor>adbed21501e83b30a454d9850bdf180f8</anchor>
      <arglist>(void *ptr, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>mycalloc</name>
      <anchorfile>mymalloc_8c.html</anchorfile>
      <anchor>a87eceac8f7eb5f7792b619581788562c</anchor>
      <arglist>(size_t nelem, size_t elsize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mystrtok.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>mystrtok_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>ISTOKEN</name>
      <anchorfile>mystrtok_8c.html</anchorfile>
      <anchor>ab7c70f055a19d79a45a5f3a21cc5ef7d</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mystrtok_quotation</name>
      <anchorfile>mystrtok_8c.html</anchorfile>
      <anchor>a1bacf1f6ed9359115bc10ffa0745d622</anchor>
      <arglist>(char *str, char *delim, int left_paren, int right_paren, int mode)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mystrtok_quote</name>
      <anchorfile>mystrtok_8c.html</anchorfile>
      <anchor>af260e613b1a94341b4b28476d14443dd</anchor>
      <arglist>(char *str, char *delim)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mystrtok</name>
      <anchorfile>mystrtok_8c.html</anchorfile>
      <anchor>a5d37eec05f8a3c467837b99a9722ecac</anchor>
      <arglist>(char *str, char *delim)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>mystrtok_movetonext</name>
      <anchorfile>mystrtok_8c.html</anchorfile>
      <anchor>a3190c52633fd21bbce941b78392c706d</anchor>
      <arglist>(char *str, char *delim)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ptree.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>ptree_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>testbit</name>
      <anchorfile>ptree_8c.html</anchorfile>
      <anchor>a4a306052b708c348456a126ffae63f6f</anchor>
      <arglist>(char *str, int slen, int bitplace)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testbit_max</name>
      <anchorfile>ptree_8c.html</anchorfile>
      <anchor>af9dd1bd8676b44ffd409873e14d0ba66</anchor>
      <arglist>(char *str, int bitplace, int maxbitplace)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>where_the_bit_differ</name>
      <anchorfile>ptree_8c.html</anchorfile>
      <anchor>a4098f166903380b850b50674c8a1359c</anchor>
      <arglist>(char *str1, char *str2)</arglist>
    </member>
    <member kind="function">
      <type>PATNODE *</type>
      <name>make_ptree</name>
      <anchorfile>ptree_8c.html</anchorfile>
      <anchor>a46d2513846de938988b1586af3ffe617</anchor>
      <arglist>(char **words, int *data, int wordsnum, int bitplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disp_ptree</name>
      <anchorfile>ptree_8c.html</anchorfile>
      <anchor>abcdb432752f4fc2b2285627f26188384</anchor>
      <arglist>(PATNODE *node, int level)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ptree_search_data</name>
      <anchorfile>ptree_8c.html</anchorfile>
      <anchor>a7d875c47d094df5ec9dc54e4c043073b</anchor>
      <arglist>(char *str, PATNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ptree_replace_data</name>
      <anchorfile>ptree_8c.html</anchorfile>
      <anchor>adc6028c4c09727aec2a9c7daca9c2903</anchor>
      <arglist>(char *str, int val, PATNODE *node)</arglist>
    </member>
    <member kind="function">
      <type>PATNODE *</type>
      <name>ptree_make_root_node</name>
      <anchorfile>ptree_8c.html</anchorfile>
      <anchor>a495cb769ab4b148c46f5bb9cc6f3ec68</anchor>
      <arglist>(int data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ptree_add_entry</name>
      <anchorfile>ptree_8c.html</anchorfile>
      <anchor>a1897b0250bd57900e79116155a87d226</anchor>
      <arglist>(char *str, int data, char *matchstr, PATNODE **rootnode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_ptree</name>
      <anchorfile>ptree_8c.html</anchorfile>
      <anchor>a85d29d0ab96a0566b362b5ebd4b20fe5</anchor>
      <arglist>(PATNODE *node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>qsort.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>qsort_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>qsort_reentrant</name>
      <anchorfile>qsort_8c.html</anchorfile>
      <anchor>a838f2f6588a8341eaa62f59835c55f0d</anchor>
      <arglist>(void *base, int count, int size, int(*compare)(const void *, const void *, void *), void *pointer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>readfile.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>readfile_8c</filename>
    <member kind="function">
      <type>char *</type>
      <name>getl</name>
      <anchorfile>readfile_8c.html</anchorfile>
      <anchor>a14aea852392c0bcc89701f1960b691f2</anchor>
      <arglist>(char *buf, int maxlen, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>getl_fp</name>
      <anchorfile>readfile_8c.html</anchorfile>
      <anchor>a9ffd84aaef2acbfea43bd07b7d405bc3</anchor>
      <arglist>(char *buf, int maxlen, FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_line_from_stdin</name>
      <anchorfile>readfile_8c.html</anchorfile>
      <anchor>a0a2f126edddb1c3415a340e4c5896e5a</anchor>
      <arglist>(char *buf, int buflen, char *prompt)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>strcasecmp.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>strcasecmp_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>strcasecmp</name>
      <anchorfile>strcasecmp_8c.html</anchorfile>
      <anchor>a8a09ab483b8e2cd3d33a40836360d4d7</anchor>
      <arglist>(char *s1, char *s2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strncasecmp</name>
      <anchorfile>strcasecmp_8c.html</anchorfile>
      <anchor>acdb63bb9bb0d435c20cffd9218655e19</anchor>
      <arglist>(char *s1, char *s2, size_t n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>init_voca.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/voca/</path>
    <filename>init__voca_8c</filename>
    <member kind="function">
      <type>boolean</type>
      <name>init_voca</name>
      <anchorfile>init__voca_8c.html</anchorfile>
      <anchor>a65b4f7e97c7eba99ad6944c6674dc9d3</anchor>
      <arglist>(WORD_INFO *winfo, char *filename, HTK_HMM_INFO *hmminfo, boolean not_conv_tri, boolean force_dict)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>init_wordlist</name>
      <anchorfile>init__voca_8c.html</anchorfile>
      <anchor>ac803626f7d4c7b9befd79641a98a7055</anchor>
      <arglist>(WORD_INFO *winfo, char *filename, HTK_HMM_INFO *hmminfo, char *headphone, char *tailphone, char *contextphone, boolean force_dict)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>voca_load_htkdict.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/voca/</path>
    <filename>voca__load__htkdict_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>PHONEMELEN_STEP</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>a377618b418337ff7895b5b936cbb76eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>cycle_triphone</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>a9bc1dbfdde824ed2c576ddf7c6eea863</anchor>
      <arglist>(char *p)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>cycle_triphone_flush</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>aad9e8a7284b827ffb74ede2565302d79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>voca_set_stats</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>a2a0f3b6a5f98ad9219d04be6ca86c125</anchor>
      <arglist>(WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>voca_load_start</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>af7a76fd73ac2790057b5209bf4a18f58</anchor>
      <arglist>(WORD_INFO *winfo, HTK_HMM_INFO *hmminfo, boolean ignore_tri_conv)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_load_line</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>a41bb6f8690d01c68ba1eab338dfdbda2</anchor>
      <arglist>(char *buf, WORD_INFO *winfo, HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_load_end</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>aebf31a65399be0769b47031eb3ee51ec</anchor>
      <arglist>(WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_load_htkdict</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>a704ea6c869439ca724705aed3a81b519</anchor>
      <arglist>(FILE *fp, WORD_INFO *winfo, HTK_HMM_INFO *hmminfo, boolean ignore_tri_conv)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_load_htkdict_fp</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>a8a26cf778e1a858d94c4bce201d2a902</anchor>
      <arglist>(FILE *fp, WORD_INFO *winfo, HTK_HMM_INFO *hmminfo, boolean ignore_tri_conv)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_append_htkdict</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>a85ff93e9a3f3e2c76c78207d3e4dbdde</anchor>
      <arglist>(char *entry, WORD_INFO *winfo, HTK_HMM_INFO *hmminfo, boolean ignore_tri_conv)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_load_htkdict_line</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>a8f813644063981b856ce4d99ee6bb15e</anchor>
      <arglist>(char *buf, WORD_ID *vnum_p, int linenum, WORD_INFO *winfo, HTK_HMM_INFO *hmminfo, boolean do_conv, boolean *ok_flag)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_mono2tri</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>a90489df798b2a5f094f93a79101226b0</anchor>
      <arglist>(WORD_INFO *winfo, HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_append</name>
      <anchorfile>voca__load__htkdict_8c.html</anchorfile>
      <anchor>af166c47dc49d5fbef074bbc58466c204</anchor>
      <arglist>(WORD_INFO *dstinfo, WORD_INFO *srcinfo, int coffset, int woffset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>voca_load_wordlist.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/voca/</path>
    <filename>voca__load__wordlist_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>PHONEMELEN_STEP</name>
      <anchorfile>voca__load__wordlist_8c.html</anchorfile>
      <anchor>a377618b418337ff7895b5b936cbb76eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_load_word_line</name>
      <anchorfile>voca__load__wordlist_8c.html</anchorfile>
      <anchor>ae4707990bf197a143450d780b47d8247</anchor>
      <arglist>(char *buf, WORD_INFO *winfo, HTK_HMM_INFO *hmminfo, char *headphone, char *tailphone, char *contextphone)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_load_wordlist</name>
      <anchorfile>voca__load__wordlist_8c.html</anchorfile>
      <anchor>a7a7c7e96aab141dc93f80a0cfd3015c8</anchor>
      <arglist>(FILE *fp, WORD_INFO *winfo, HTK_HMM_INFO *hmminfo, char *headphone, char *tailphone, char *contextphone)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_load_wordlist_fp</name>
      <anchorfile>voca__load__wordlist_8c.html</anchorfile>
      <anchor>a63ff46121079bdb61d890038d0414725</anchor>
      <arglist>(FILE *fp, WORD_INFO *winfo, HTK_HMM_INFO *hmminfo, char *headphone, char *tailphone, char *contextphone)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>voca_load_wordlist_line</name>
      <anchorfile>voca__load__wordlist_8c.html</anchorfile>
      <anchor>aff5011e886ae82d3e183467cbf9be5de</anchor>
      <arglist>(char *buf, WORD_ID *vnum_p, int linenum, WORD_INFO *winfo, HTK_HMM_INFO *hmminfo, boolean do_conv, boolean *ok_flag, char *headphone, char *tailphone, char *contextphone)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>voca_lookup.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/voca/</path>
    <filename>voca__lookup_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>WSSTEP</name>
      <anchorfile>voca__lookup_8c.html</anchorfile>
      <anchor>a0fd7932a7c3c28a3bb8f7f9d85b1c899</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>WORD_ID</type>
      <name>voca_lookup_wid</name>
      <anchorfile>voca__lookup_8c.html</anchorfile>
      <anchor>aea26135dec0abb7828f3a9ad5cd31b22</anchor>
      <arglist>(char *keyword, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>WORD_ID *</type>
      <name>new_str2wordseq</name>
      <anchorfile>voca__lookup_8c.html</anchorfile>
      <anchor>ae1ed7542929656127b1133920df819ae</anchor>
      <arglist>(WORD_INFO *winfo, char *s, int *len_return)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>voca_malloc.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/voca/</path>
    <filename>voca__malloc_8c</filename>
    <member kind="function">
      <type>WORD_INFO *</type>
      <name>word_info_new</name>
      <anchorfile>voca__malloc_8c.html</anchorfile>
      <anchor>ac9691bb079a1b4778ea75bed7061bf09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>word_info_free</name>
      <anchorfile>voca__malloc_8c.html</anchorfile>
      <anchor>abbb1a6ed2102d1ea72112923d69c5490</anchor>
      <arglist>(WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>winfo_init</name>
      <anchorfile>voca__malloc_8c.html</anchorfile>
      <anchor>a4aed287dbfdac83de43f79405ea30e6b</anchor>
      <arglist>(WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>winfo_expand</name>
      <anchorfile>voca__malloc_8c.html</anchorfile>
      <anchor>ab266edbbd0d6a6e1ec72878beb49ccdd</anchor>
      <arglist>(WORD_INFO *winfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>voca_util.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/voca/</path>
    <filename>voca__util_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>print_voca_info</name>
      <anchorfile>voca__util_8c.html</anchorfile>
      <anchor>aa26719a72d0c499179715cfd54455eb1</anchor>
      <arglist>(FILE *fp, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_voca</name>
      <anchorfile>voca__util_8c.html</anchorfile>
      <anchor>aab810fad40b3b1c48d0f33ba7ed3aff2</anchor>
      <arglist>(FILE *fp, WORD_INFO *winfo, WORD_ID wid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mfcc-core.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/wav2mfcc/</path>
    <filename>mfcc-core_8c</filename>
    <member kind="function">
      <type>float</type>
      <name>Mel</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>a0c073b0ee46effe967997f6a03b0c3df</anchor>
      <arglist>(int k, float fres)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>InitFBank</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>a6412e9da1e506ee437f548a8906371ee</anchor>
      <arglist>(MFCCWork *w, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeFBank</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>a1e3b9b4a729f486a5af22045864e64d8</anchor>
      <arglist>(FBankInfo *fb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ZMeanFrame</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>a3f1e4ad5eb25e99f67ebd9bfdd490aee</anchor>
      <arglist>(float *wave, int framesize)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>CalcLogRawE</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>a55bc464c3796777aa9367befb0aa5b85</anchor>
      <arglist>(float *wave, int framesize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PreEmphasise</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>ac8885357f13871f4a8feaf9707f9a9a6</anchor>
      <arglist>(float *wave, int framesize, float preEmph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Hamming</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>a74c65105fd6ba645a1bc3ae7feecd53f</anchor>
      <arglist>(float *wave, int framesize, MFCCWork *w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FFT</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>a5526fd252379de6dfd10e576e44e1a62</anchor>
      <arglist>(float *xRe, float *xIm, int p, MFCCWork *w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeFBank</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>aafd0417f60f9e00ef9e239900aa77733</anchor>
      <arglist>(float *wave, MFCCWork *w, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>CalcC0</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>ae0f7344497d9636c31835263d1e7241a</anchor>
      <arglist>(MFCCWork *w, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MakeMFCC</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>a85e91c3fc3199ae237197bb2c757b18d</anchor>
      <arglist>(float *mfcc, Value *para, MFCCWork *w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WeightCepstrum</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>a0452d4a57668f76c87b6b9c3b2a1b73f</anchor>
      <arglist>(float *mfcc, Value *para, MFCCWork *w)</arglist>
    </member>
    <member kind="function">
      <type>MFCCWork *</type>
      <name>WMP_work_new</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>a96c2975f17a789a86539cbff4c39dcc6</anchor>
      <arglist>(Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WMP_calc</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>af794b54bfb4c2aeb8ef675ca2f0fd566</anchor>
      <arglist>(MFCCWork *w, float *mfcc, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WMP_free</name>
      <anchorfile>mfcc-core_8c.html</anchorfile>
      <anchor>ac9511ad27b7befd0c3eec2a93ab433d2</anchor>
      <arglist>(MFCCWork *w)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>para.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/wav2mfcc/</path>
    <filename>para_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>ISTOKEN</name>
      <anchorfile>para_8c.html</anchorfile>
      <anchor>ab7c70f055a19d79a45a5f3a21cc5ef7d</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undef_para</name>
      <anchorfile>para_8c.html</anchorfile>
      <anchor>a37184004dd58e88d07bb265816f98155</anchor>
      <arglist>(Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_default_para</name>
      <anchorfile>para_8c.html</anchorfile>
      <anchor>af53d5a15553f6a399bab620b2368595e</anchor>
      <arglist>(Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_default_para_htk</name>
      <anchorfile>para_8c.html</anchorfile>
      <anchor>ade09bf58909f56c943590a43a9edf5dc</anchor>
      <arglist>(Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_para</name>
      <anchorfile>para_8c.html</anchorfile>
      <anchor>a379b056c7c0d5f0c2e438141114bba26</anchor>
      <arglist>(Value *dst, Value *src)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>htk_config_file_parse</name>
      <anchorfile>para_8c.html</anchorfile>
      <anchor>adbce6ae62af173d6f6a2a5da0dfa4369</anchor>
      <arglist>(char *HTKconffile, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_para_from_header</name>
      <anchorfile>para_8c.html</anchorfile>
      <anchor>a18b6e1a2b30b28e2929502a53465e681</anchor>
      <arglist>(Value *para, short param_type, short vec_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_para</name>
      <anchorfile>para_8c.html</anchorfile>
      <anchor>afb1e870e12618757f101754beac430ce</anchor>
      <arglist>(FILE *fp, Value *para)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ss.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/wav2mfcc/</path>
    <filename>ss_8c</filename>
    <member kind="function">
      <type>float *</type>
      <name>new_SS_load_from_file</name>
      <anchorfile>ss_8c.html</anchorfile>
      <anchor>a3fa260d3a239f46dfb4d328bff0275db</anchor>
      <arglist>(char *filename, int *slen)</arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>new_SS_calculate</name>
      <anchorfile>ss_8c.html</anchorfile>
      <anchor>afd69fb772a194d4d9d09f8ad0e49ae10</anchor>
      <arglist>(SP16 *wave, int wavelen, int *slen, MFCCWork *w, Value *para)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wav2mfcc-buffer.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/wav2mfcc/</path>
    <filename>wav2mfcc-buffer_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>Wav2MFCC</name>
      <anchorfile>wav2mfcc-buffer_8c.html</anchorfile>
      <anchor>af95bae9b187c2882bdb23800d58b4dc1</anchor>
      <arglist>(SP16 *wave, float **mfcc, Value *para, int nSamples, MFCCWork *w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NormaliseLogE</name>
      <anchorfile>wav2mfcc-buffer_8c.html</anchorfile>
      <anchor>a9c32b812a1305acbe8b44cdd823b8138</anchor>
      <arglist>(float **mfcc, int frame_num, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Delta</name>
      <anchorfile>wav2mfcc-buffer_8c.html</anchorfile>
      <anchor>a24141bf90d3e64d26f451edf2cbf9fbd</anchor>
      <arglist>(float **c, int frame, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Accel</name>
      <anchorfile>wav2mfcc-buffer_8c.html</anchorfile>
      <anchor>a1a7e413ba6ca7a9464c826ef56c8a2d5</anchor>
      <arglist>(float **c, int frame, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CMN</name>
      <anchorfile>wav2mfcc-buffer_8c.html</anchorfile>
      <anchor>a85b9d73890b5c422b5c09835f68f70f3</anchor>
      <arglist>(float **mfcc, int frame_num, int dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MVN</name>
      <anchorfile>wav2mfcc-buffer_8c.html</anchorfile>
      <anchor>a341b0e44202452ce3303b45c9ddbb2ea</anchor>
      <arglist>(float **mfcc, int frame_num, Value *para)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wav2mfcc-pipe.c</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/wav2mfcc/</path>
    <filename>wav2mfcc-pipe_8c</filename>
    <member kind="function">
      <type>DeltaBuf *</type>
      <name>WMP_deltabuf_new</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>ac022c9a6ad25be798e85724329809e73</anchor>
      <arglist>(int veclen, int windowlen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WMP_deltabuf_free</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>a9d4600ef4f75fbc417dd93ed557ecb21</anchor>
      <arglist>(DeltaBuf *db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WMP_deltabuf_prepare</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>a747da62a4ff134e471d3c3b999fa6931</anchor>
      <arglist>(DeltaBuf *db)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>WMP_deltabuf_proceed</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>a5abc1ef25f9ca9e865fd629ceccbf5f6</anchor>
      <arglist>(DeltaBuf *db, float *new_mfcc)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>WMP_deltabuf_flush</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>a59e4a226b90aafbc16c91a384e1cafa2</anchor>
      <arglist>(DeltaBuf *db)</arglist>
    </member>
    <member kind="function">
      <type>CMNWork *</type>
      <name>CMN_realtime_new</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>ab781119f69eaccb476ba18867b36d524</anchor>
      <arglist>(Value *para, float weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CMN_realtime_free</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>a85bca678a879056e9803fb8c44e9628f</anchor>
      <arglist>(CMNWork *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CMN_realtime_prepare</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>a76d8932971ba36d0113a60273922822b</anchor>
      <arglist>(CMNWork *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CMN_realtime</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>a8a01b298bde37226449a5627f318bfc8</anchor>
      <arglist>(CMNWork *c, float *mfcc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CMN_realtime_update</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>ac490ec2d933a8474b32522330c0943f8</anchor>
      <arglist>(CMNWork *c, HTK_Param *param)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>CMN_load_from_file</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>a2ba0b85c1692dfc454dae52ccc3c9ea5</anchor>
      <arglist>(CMNWork *c, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>CMN_save_to_file</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>a267d606c3a1b4fb11c6a3a518caef7b5</anchor>
      <arglist>(CMNWork *c, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>energy_max_init</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>ab958fde0d78436f2d7ab2e6af00fc2ba</anchor>
      <arglist>(ENERGYWork *energy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>energy_max_prepare</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>a33efa3cdceb05ecd643b8adf2cb9f329</anchor>
      <arglist>(ENERGYWork *energy, Value *para)</arglist>
    </member>
    <member kind="function">
      <type>LOGPROB</type>
      <name>energy_max_normalize</name>
      <anchorfile>wav2mfcc-pipe_8c.html</anchorfile>
      <anchor>a28f167daea2cbbedb0952d97af2b8c0e</anchor>
      <arglist>(ENERGYWork *energy, LOGPROB f, Value *para)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mkbingram.c</name>
    <path>/home/anash/simon/simonsource/julius/mkbingram/</path>
    <filename>mkbingram_8c</filename>
  </compound>
  <compound kind="file">
    <name>adin_oss.c</name>
    <path>/home/anash/simon/simonsource/julius/plugin/</path>
    <filename>adin__oss_8c</filename>
    <includes id="plugin__defs_8h" name="plugin_defs.h" local="yes" imported="no">plugin_defs.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PLUGIN_TITLE</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>a1cd6dff74073d7ab0131878fa019cb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INPUT_OPT</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>ae00bca6f8d7e54d9ad18cad2cf7ff147</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>initialize</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>a03aede8ff91764482bb5e9accfae9b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_plugin_info</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>ab8e72d30f3fa5fad941cfb0539cee612</anchor>
      <arglist>(int opcode, char *buf, int buflen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adin_get_optname</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>a0eef8da167c233c963d10aee8526c407</anchor>
      <arglist>(char *buf, int buflen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_get_configuration</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>ac39a1be0476a9d97f5ecb39de5d3f5f2</anchor>
      <arglist>(int opcode)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_standby</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>a803a2e99dd643edaa50ae61877edc62e</anchor>
      <arglist>(int sfreq, void *dummy)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_open</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>a7120898d8e1567ec00eec089345ddad0</anchor>
      <arglist>(char *pathname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>adin_read</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>a6176085ebff799202e3fd917ce4db42d</anchor>
      <arglist>(SP16 *buf, int sampnum)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_close</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>a843e24d5ee70770206d8e22891b74ee4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_terminate</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>a0b3d8b8ffd980f64fcd6a65729bf2ff8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_pause</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>a2a1c9c1386ed55a6d331850a8bc35dbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>adin_resume</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>a7bc2ea7f8d3f4057274f80aa61112df7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>adin_input_name</name>
      <anchorfile>adin__oss_8c.html</anchorfile>
      <anchor>a474f96943779a5491af630431d96a4c9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>audio_postprocess.c</name>
    <path>/home/anash/simon/simonsource/julius/plugin/</path>
    <filename>audio__postprocess_8c</filename>
    <includes id="plugin__defs_8h" name="plugin_defs.h" local="yes" imported="no">plugin_defs.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PLUGIN_TITLE</name>
      <anchorfile>audio__postprocess_8c.html</anchorfile>
      <anchor>a1cd6dff74073d7ab0131878fa019cb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>initialize</name>
      <anchorfile>audio__postprocess_8c.html</anchorfile>
      <anchor>a03aede8ff91764482bb5e9accfae9b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_plugin_info</name>
      <anchorfile>audio__postprocess_8c.html</anchorfile>
      <anchor>ab8e72d30f3fa5fad941cfb0539cee612</anchor>
      <arglist>(int opcode, char *buf, int buflen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adin_postprocess</name>
      <anchorfile>audio__postprocess_8c.html</anchorfile>
      <anchor>a9dd56f6cf1f2ea41d1a2faeb73e915f9</anchor>
      <arglist>(SP16 *buf, int len)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>calcmix.c</name>
    <path>/home/anash/simon/simonsource/julius/plugin/</path>
    <filename>calcmix_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>PLUGIN_TITLE</name>
      <anchorfile>calcmix_8c.html</anchorfile>
      <anchor>a1cd6dff74073d7ab0131878fa019cb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>initialize</name>
      <anchorfile>calcmix_8c.html</anchorfile>
      <anchor>a03aede8ff91764482bb5e9accfae9b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_plugin_info</name>
      <anchorfile>calcmix_8c.html</anchorfile>
      <anchor>ab8e72d30f3fa5fad941cfb0539cee612</anchor>
      <arglist>(int opcode, char *buf, int buflen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calcmix_get_optname</name>
      <anchorfile>calcmix_8c.html</anchorfile>
      <anchor>a110bc1c74d4281aca6ac4ecd9aa3c296</anchor>
      <arglist>(char *buf, int buflen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calcmix</name>
      <anchorfile>calcmix_8c.html</anchorfile>
      <anchor>a9638a47964e65eb54511913fbd636dc2</anchor>
      <arglist>(HMMWork *wrk, HTK_HMM_Dens **g, int num, int *last_id, int lnum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calcmix_free</name>
      <anchorfile>calcmix_8c.html</anchorfile>
      <anchor>a171320cb9b64924a79d8fc5a6e025ac0</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>calcmix_init</name>
      <anchorfile>calcmix_8c.html</anchorfile>
      <anchor>a747cf4ffb3382f02a4d0b0f39b2a1376</anchor>
      <arglist>(HMMWork *wrk)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>feature_postprocess.c</name>
    <path>/home/anash/simon/simonsource/julius/plugin/</path>
    <filename>feature__postprocess_8c</filename>
    <includes id="plugin__defs_8h" name="plugin_defs.h" local="yes" imported="no">plugin_defs.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PLUGIN_TITLE</name>
      <anchorfile>feature__postprocess_8c.html</anchorfile>
      <anchor>a1cd6dff74073d7ab0131878fa019cb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>initialize</name>
      <anchorfile>feature__postprocess_8c.html</anchorfile>
      <anchor>a03aede8ff91764482bb5e9accfae9b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_plugin_info</name>
      <anchorfile>feature__postprocess_8c.html</anchorfile>
      <anchor>ab8e72d30f3fa5fad941cfb0539cee612</anchor>
      <arglist>(int opcode, char *buf, int buflen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fvin_postprocess</name>
      <anchorfile>feature__postprocess_8c.html</anchorfile>
      <anchor>a370889dae4d40970ad8caf25e78d6ffd</anchor>
      <arglist>(float *vecbuf, int veclen, int nframe)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fvin.c</name>
    <path>/home/anash/simon/simonsource/julius/plugin/</path>
    <filename>fvin_8c</filename>
    <includes id="plugin__defs_8h" name="plugin_defs.h" local="yes" imported="no">plugin_defs.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PLUGIN_TITLE</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>a1cd6dff74073d7ab0131878fa019cb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>initialize</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>a03aede8ff91764482bb5e9accfae9b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_plugin_info</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>ab8e72d30f3fa5fad941cfb0539cee612</anchor>
      <arglist>(int opcode, char *buf, int buflen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fvin_get_optname</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>a59c0a0ace38603921c19a409047ecf0e</anchor>
      <arglist>(char *buf, int buflen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fvin_get_configuration</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>a203d690d2669f0669b240205bba0cf59</anchor>
      <arglist>(int opcode)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>fvin_standby</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>aacfd20e24b9fe038e7547f0e5a877040</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>fvin_open</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>a5fe7616199c8ad3ca1e75874b2592ce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fvin_read</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>af52b102d2deb7b4059df173bdafed8d7</anchor>
      <arglist>(float *vecbuf, int veclen)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>fvin_close</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>a082654c514a54b9bd6481b30831faf37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>fvin_terminate</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>aadf067e5e5229f7bc551b1e7e428ad1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>fvin_pause</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>a6737c52d8071a206819bac6168684ca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>fvin_resume</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>a96826d7d352bda7da5616966199edd54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>fvin_input_name</name>
      <anchorfile>fvin_8c.html</anchorfile>
      <anchor>a70a8722e44fb685e4c3613a5ce0b7c9a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>generic_callback.c</name>
    <path>/home/anash/simon/simonsource/julius/plugin/</path>
    <filename>generic__callback_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>PLUGIN_TITLE</name>
      <anchorfile>generic__callback_8c.html</anchorfile>
      <anchor>a1cd6dff74073d7ab0131878fa019cb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>initialize</name>
      <anchorfile>generic__callback_8c.html</anchorfile>
      <anchor>a03aede8ff91764482bb5e9accfae9b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_plugin_info</name>
      <anchorfile>generic__callback_8c.html</anchorfile>
      <anchor>ab8e72d30f3fa5fad941cfb0539cee612</anchor>
      <arglist>(int opcode, char *buf, int buflen)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>startup</name>
      <anchorfile>generic__callback_8c.html</anchorfile>
      <anchor>a2d6c1f8a4a76ebde9c94a64f3d3fbd6c</anchor>
      <arglist>(void *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plugin_defs.h</name>
    <path>/home/anash/simon/simonsource/julius/plugin/</path>
    <filename>plugin__defs_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>ADIN_EOF</name>
      <anchorfile>plugin__defs_8h.html</anchorfile>
      <anchor>a63760fabab674a3c59385e1e9923ba60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>result.c</name>
    <path>/home/anash/simon/simonsource/julius/plugin/</path>
    <filename>result_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>PLUGIN_TITLE</name>
      <anchorfile>result_8c.html</anchorfile>
      <anchor>a1cd6dff74073d7ab0131878fa019cb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>initialize</name>
      <anchorfile>result_8c.html</anchorfile>
      <anchor>a03aede8ff91764482bb5e9accfae9b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_plugin_info</name>
      <anchorfile>result_8c.html</anchorfile>
      <anchor>ab8e72d30f3fa5fad941cfb0539cee612</anchor>
      <arglist>(int opcode, char *buf, int buflen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>result_best_str</name>
      <anchorfile>result_8c.html</anchorfile>
      <anchor>a2cc2c1f9cff539096dc36ceeb0ed84cb</anchor>
      <arglist>(char *result_str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>activewindow.h</name>
    <path>/home/anash/simon/simonsource/plugins/Conditions/ActiveWindow/</path>
    <filename>activewindow_8h</filename>
    <class kind="class">ActiveWindow</class>
  </compound>
  <compound kind="file">
    <name>orconditionassociation.h</name>
    <path>/home/anash/simon/simonsource/plugins/Conditions/OrConditionAssociation/</path>
    <filename>orconditionassociation_8h</filename>
    <class kind="class">OrConditionAssociation</class>
  </compound>
  <compound kind="file">
    <name>processopenedcondition.h</name>
    <path>/home/anash/simon/simonsource/plugins/Conditions/ProcessOpened/</path>
    <filename>processopenedcondition_8h</filename>
    <class kind="class">ProcessOpenedCondition</class>
  </compound>
  <compound kind="file">
    <name>contextview.h</name>
    <path>/home/anash/simon/simonsource/simon/src/simoncontextui/</path>
    <filename>contextview_8h</filename>
    <class kind="class">ContextView</class>
  </compound>
  <compound kind="file">
    <name>contextviewprivate.h</name>
    <path>/home/anash/simon/simonsource/simon/src/simoncontextui/</path>
    <filename>contextviewprivate_8h</filename>
    <class kind="class">ContextViewPrivate</class>
  </compound>
  <compound kind="file">
    <name>newcondition.h</name>
    <path>/home/anash/simon/simonsource/simon/src/simoncontextui/</path>
    <filename>newcondition_8h</filename>
    <class kind="class">NewCondition</class>
  </compound>
  <compound kind="file">
    <name>contextadapter.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextadapter/</path>
    <filename>contextadapter_8h</filename>
    <class kind="class">ContextAdapter</class>
  </compound>
  <compound kind="file">
    <name>compoundcondition.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>compoundcondition_8h</filename>
    <includes id="condition_8h" name="condition.h" local="yes" imported="no">condition.h</includes>
    <includes id="compoundconditionmodel_8h" name="compoundconditionmodel.h" local="yes" imported="no">compoundconditionmodel.h</includes>
    <class kind="class">CompoundCondition</class>
  </compound>
  <compound kind="file">
    <name>compoundconditionmodel.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>compoundconditionmodel_8h</filename>
    <class kind="class">CompoundConditionModel</class>
  </compound>
  <compound kind="file">
    <name>condition.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>condition_8h</filename>
    <class kind="class">Condition</class>
  </compound>
  <compound kind="file">
    <name>conditionassociation.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>conditionassociation_8h</filename>
    <includes id="condition_8h" name="condition.h" local="yes" imported="no">condition.h</includes>
    <class kind="class">ConditionAssociation</class>
  </compound>
  <compound kind="file">
    <name>conditionconfiguration.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>conditionconfiguration_8h</filename>
  </compound>
  <compound kind="file">
    <name>contextmanager.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>contextmanager_8h</filename>
    <includes id="compoundcondition_8h" name="compoundcondition.h" local="yes" imported="no">compoundcondition.h</includes>
    <class kind="class">ContextManager</class>
  </compound>
  <compound kind="file">
    <name>createconditionwidget.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>createconditionwidget_8h</filename>
    <class kind="class">CreateConditionWidget</class>
  </compound>
  <compound kind="file">
    <name>linuxprocessinfogatherer.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>linuxprocessinfogatherer_8h</filename>
    <includes id="processinfogatherer_8h" name="processinfogatherer.h" local="yes" imported="no">processinfogatherer.h</includes>
    <class kind="class">LinuxProcessInfoGatherer</class>
  </compound>
  <compound kind="file">
    <name>processinfo.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>processinfo_8h</filename>
    <includes id="processinfogatherer_8h" name="processinfogatherer.h" local="yes" imported="no">processinfogatherer.h</includes>
    <class kind="class">ProcessInfo</class>
  </compound>
  <compound kind="file">
    <name>processinfogatherer.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>processinfogatherer_8h</filename>
    <class kind="class">ProcessInfoGatherer</class>
  </compound>
  <compound kind="file">
    <name>windowsprocessinfogatherer.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>windowsprocessinfogatherer_8h</filename>
    <includes id="processinfogatherer_8h" name="processinfogatherer.h" local="yes" imported="no">processinfogatherer.h</includes>
    <class kind="class">WindowsProcessInfoGatherer</class>
  </compound>
  <compound kind="file">
    <name>command.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simonscenarios/</path>
    <filename>command_8h</filename>
    <includes id="commandmanager_8h" name="commandmanager.h" local="yes" imported="no">commandmanager.h</includes>
    <class kind="class">Command</class>
    <member kind="define">
      <type>#define</type>
      <name>STATIC_CREATE_INSTANCE_H</name>
      <anchorfile>command_8h.html</anchorfile>
      <anchor>a81864e76159a293b5fda31a78cdf64bd</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATIC_CREATE_INSTANCE_C</name>
      <anchorfile>command_8h.html</anchorfile>
      <anchor>ac49cd7336451b22799020095b675b80e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>QList&lt; Command * &gt;</type>
      <name>CommandList</name>
      <anchorfile>command_8h.html</anchorfile>
      <anchor>aa7417777f002e57e46147aa2368d6b84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>commandmanager.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simonscenarios/</path>
    <filename>commandmanager_8h</filename>
    <includes id="simoncommand_8h" name="simoncommand.h" local="yes" imported="no">simoncommand.h</includes>
    <includes id="command_8h" name="command.h" local="yes" imported="no">command.h</includes>
    <class kind="class">CommandManager</class>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DESERIALIZE_COMMANDS_PRIVATE_H</name>
      <anchorfile>commandmanager_8h.html</anchorfile>
      <anchor>a0d7a87f7b10192a1919cba88e1c29cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DESERIALIZE_COMMANDS_PRIVATE_C</name>
      <anchorfile>commandmanager_8h.html</anchorfile>
      <anchor>af9e81381f47ae5a4829a9b932fea3a56</anchor>
      <arglist>(x, y)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>promptstable.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simonscenarios/</path>
    <filename>promptstable_8h</filename>
    <class kind="class">PromptsTable</class>
  </compound>
  <compound kind="file">
    <name>simoncommand.h</name>
    <path>/home/anash/simon/simonsource/simonlib/simonscenarios/</path>
    <filename>simoncommand_8h</filename>
    <member kind="enumvalue">
      <name>DefaultState</name>
      <anchorfile>namespaceSimonCommand.html</anchorfile>
      <anchor>a7d5152d00dd56e48d2482fb872f0ce2baede87ff120a65f4f78495a073a560932</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GreedyState</name>
      <anchorfile>namespaceSimonCommand.html</anchorfile>
      <anchor>a7d5152d00dd56e48d2482fb872f0ce2ba506c60cc3d26ce8be33298fd1baf3f8c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>jfunc</name>
    <title>JuliusLib API</title>
    <filename>group__jfunc.html</filename>
    <subgroup>engine</subgroup>
    <subgroup>callback</subgroup>
    <subgroup>pauseresume</subgroup>
    <subgroup>userfunc</subgroup>
    <subgroup>jfunc_process</subgroup>
    <subgroup>grammar</subgroup>
    <subgroup>jconf</subgroup>
    <subgroup>instance</subgroup>
  </compound>
  <compound kind="group">
    <name>engine</name>
    <title>Basic API</title>
    <filename>group__engine.html</filename>
    <member kind="function">
      <type>void</type>
      <name>j_enable_debug_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga159797864c19c0a46cee9af8c70e5d1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_disable_debug_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga5f304c8ccf599a3b6813b719c32c0415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_enable_verbose_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>gab41949417c809a4ae8361fd11131b5e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_disable_verbose_message</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga4d804a8f811d397d66ce8633469981a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_adin_init</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga7c1a22bb0b6643677344b3dc447f40a1</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>j_get_current_filename</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga3df833b8b112e10c25285385c3617425</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_recog_info</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga3ac4b8ca220d600ba31db847ffcaf616</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_output_argument_help</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga1acf73ed40757844445427f6351bb5a2</anchor>
      <arglist>(FILE *fp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_open_stream</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga4ad24f7376c87fc70240b600a7be504b</anchor>
      <arglist>(Recog *recog, char *file_or_dev_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_close_stream</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga368d0af636deae430c50bacdc814ee12</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_recognize_stream</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga02b1895548eb357703978c9d3baf6af1</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_add_option</name>
      <anchorfile>group__engine.html</anchorfile>
      <anchor>ga806519f2220289c98cc34a71837f22d9</anchor>
      <arglist>(char *fmt, int argnum, int reqargnum, char *desc, boolean(*func)(Jconf *jconf, char *arg[], int argnum))</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>callback</name>
    <title>Callback API</title>
    <filename>group__callback.html</filename>
    <member kind="function">
      <type>int</type>
      <name>callback_add</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>ga3bb0b2f104c78caac33540f0fd505f8a</anchor>
      <arglist>(Recog *recog, int code, void(*func)(Recog *recog, void *data), void *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>callback_add_adin</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>gaebafed830161a2795804e682b99b2514</anchor>
      <arglist>(Recog *recog, int code, void(*func)(Recog *recog, SP16 *buf, int len, void *data), void *data)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>callback_exist</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>gaaa31a3b8f9ffbd5f91a6736081b9af14</anchor>
      <arglist>(Recog *recog, int code)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>callback_delete</name>
      <anchorfile>group__callback.html</anchorfile>
      <anchor>gaea4764d2269ae63d3a4fc0d45f232a3c</anchor>
      <arglist>(Recog *recog, int id)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>pauseresume</name>
    <title>Pause and Resume API</title>
    <filename>group__pauseresume.html</filename>
    <member kind="function">
      <type>void</type>
      <name>j_request_pause</name>
      <anchorfile>group__pauseresume.html</anchorfile>
      <anchor>gaaf64281af30d4007a7acf7be08104d81</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_request_terminate</name>
      <anchorfile>group__pauseresume.html</anchorfile>
      <anchor>ga75e24631e7c8eee8de55eeaa7108e031</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_request_resume</name>
      <anchorfile>group__pauseresume.html</anchorfile>
      <anchor>gae646f13f485ca7cfaf05d70157116815</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>userfunc</name>
    <title>User function API</title>
    <filename>group__userfunc.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>j_regist_user_lm_func</name>
      <anchorfile>group__userfunc.html</anchorfile>
      <anchor>gaedd5d3c750ecdb89a2d18ff0c1ef08f4</anchor>
      <arglist>(PROCESS_LM *lm, LOGPROB(*unifunc)(WORD_INFO *winfo, WORD_ID w, LOGPROB ngram_prob), LOGPROB(*bifunc)(WORD_INFO *winfo, WORD_ID context, WORD_ID w, LOGPROB ngram_prob), LOGPROB(*probfunc)(WORD_INFO *winfo, WORD_ID *contexts, int context_len, WORD_ID w, LOGPROB ngram_prob))</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_regist_user_param_func</name>
      <anchorfile>group__userfunc.html</anchorfile>
      <anchor>gaff2672d5e383a858162fc0b3889c49b1</anchor>
      <arglist>(Recog *recog, boolean(*user_calc_vector)(MFCCCalc *, SP16 *, int))</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>jfunc_process</name>
    <title>Process API</title>
    <filename>group__jfunc__process.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_deactivate</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>ga2705ae764b5baa317600f1f2665beec5</anchor>
      <arglist>(Recog *recog, char *name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_deactivate_by_id</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>gab09315eab11ce0d4e4dd2f658a074091</anchor>
      <arglist>(Recog *recog, int id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_activate</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>gadb78985eeec25ee3f6dd98759ce0eb45</anchor>
      <arglist>(Recog *recog, char *name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_activate_by_id</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>gaacf422cdda0164d9870e0f7906a718bf</anchor>
      <arglist>(Recog *recog, int id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_add_lm</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>ga44fcdad118a7cdcf8c5cf7360a80b1f0</anchor>
      <arglist>(Recog *recog, JCONF_LM *lmconf, JCONF_SEARCH *sconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_remove</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>ga6cc4c2c30f0423537a624ded7ccf25d6</anchor>
      <arglist>(Recog *recog, JCONF_SEARCH *sconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_lm_remove</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>gab631e42798ac144122f71a122693b05d</anchor>
      <arglist>(Recog *recog, JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_process_am_remove</name>
      <anchorfile>group__jfunc__process.html</anchorfile>
      <anchor>ga97c45cc2a55cc091d0d4592248ecf114</anchor>
      <arglist>(Recog *recog, JCONF_AM *amconf)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>grammar</name>
    <title>Grammar / Dictionary API</title>
    <filename>group__grammar.html</filename>
    <member kind="function">
      <type>void</type>
      <name>multigram_add_gramlist</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga0f54f1ed5525ca2f1963198ceffe045e</anchor>
      <arglist>(char *dfafile, char *dictfile, JCONF_LM *j, int lmvar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multigram_remove_gramlist</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga7c27300dc987807896874071c0d4933d</anchor>
      <arglist>(JCONF_LM *j)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_prefix_list</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga1c7891709ec7b262da7ce038a0f4d15e</anchor>
      <arglist>(char *prefix_list, char *cwd, JCONF_LM *j, int lmvar)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_prefix_filelist</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga415ee039308a4c2473f1e939094bd2af</anchor>
      <arglist>(char *listfile, JCONF_LM *j, int lmvar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>schedule_grammar_update</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga8d69aab470d87ebf2c0554f91ee28001</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_reset_reload</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gaf858ad3e0dc254d2a86248253305ef77</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_build</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gae139a7b25e1a0f134934c9bd82bb5d2b</anchor>
      <arglist>(RecogProcess *r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_add</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gabc3c1c62bcc9bd6ae09e466ec9568b0e</anchor>
      <arglist>(DFA_INFO *dfa, WORD_INFO *winfo, char *name, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_delete</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga598bc6971258422c2d0745421ad017fa</anchor>
      <arglist>(int delid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multigram_delete_all</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga9af8242aac15eafad6c8b0b7520766fc</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_activate</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga3f23f9085a1f9358840aa2f94bf55985</anchor>
      <arglist>(int gid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_deactivate</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga7adfc823f0b77aeefaa11fd9d6a6e4cf</anchor>
      <arglist>(int gid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_update</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga14c27377cd2e29c53f6310561fc00618</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_all_num</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga73640bf5cafd73fca5445d8d4a243006</anchor>
      <arglist>(PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_gram_from_category</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gade85ef421b438d07e444ff18686e3f93</anchor>
      <arglist>(int category, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_gram_from_wid</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga1d75742d2e51ce4d784854a118cc7837</anchor>
      <arglist>(WORD_ID wid, PROCESS_LM *lm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multigram_get_id_by_name</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga8d8c5ac62f23dacf1cfc89c40593cb0f</anchor>
      <arglist>(PROCESS_LM *lm, char *gramname)</arglist>
    </member>
    <member kind="function">
      <type>MULTIGRAM *</type>
      <name>multigram_get_grammar_by_name</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>ga4d3954419521c0579d45ccecf672af5a</anchor>
      <arglist>(PROCESS_LM *lm, char *gramname)</arglist>
    </member>
    <member kind="function">
      <type>MULTIGRAM *</type>
      <name>multigram_get_grammar_by_id</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gac0a644c826ebd6ddf9eaa120a87e56c1</anchor>
      <arglist>(PROCESS_LM *lm, unsigned short id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_words_to_grammar</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gae9cf185ffabd67c9a121e9a4fe5773c6</anchor>
      <arglist>(PROCESS_LM *lm, MULTIGRAM *m, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_words_to_grammar_by_name</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gabf0e596bc902739ddd037bedf3f47b23</anchor>
      <arglist>(PROCESS_LM *lm, char *gramname, WORD_INFO *winfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>multigram_add_words_to_grammar_by_id</name>
      <anchorfile>group__grammar.html</anchorfile>
      <anchor>gac5b545f46d7d404860ca1b021f0e30f5</anchor>
      <arglist>(PROCESS_LM *lm, unsigned short id, WORD_INFO *winfo)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>jconf</name>
    <title>Jconf configuration API</title>
    <filename>group__jconf.html</filename>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_jconf_am_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga1b728cd399a92696bcce2ac313bf81f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_am_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gae05eaae0cdabb52e2b6c53a1c642c6b0</anchor>
      <arglist>(JCONF_AM *amconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_am_regist</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga9b021ae8e669215361e38d0e1b536212</anchor>
      <arglist>(Jconf *jconf, JCONF_AM *amconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_LM *</type>
      <name>j_jconf_lm_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga277864b6488d1aa7e50aece4ef004b1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_lm_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga89c092748551b74bdc511469a41d0b0d</anchor>
      <arglist>(JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_lm_regist</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga0e7536503fc049282812121db5246877</anchor>
      <arglist>(Jconf *jconf, JCONF_LM *lmconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_SEARCH *</type>
      <name>j_jconf_search_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga1614b1059354ac310ef11cf19a7c6583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_search_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga56100c4a69c82abd1b695a31a369a3cb</anchor>
      <arglist>(JCONF_SEARCH *sconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_search_regist</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga11d4bee3c93ca7b54871d9e871a4d3ce</anchor>
      <arglist>(Jconf *jconf, JCONF_SEARCH *sconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>Jconf *</type>
      <name>j_jconf_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gafd2a0745fd95d7db0e06d983eddd4ce7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_jconf_free</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gaa07cb421866a97821431c5686f1b458d</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_config_load_args</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga82c73e004e6b44456382484d8ba94382</anchor>
      <arglist>(Jconf *jconf, int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>j_config_load_file</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga716235b262e39da8de8794f7469a8e79</anchor>
      <arglist>(Jconf *jconf, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>Jconf *</type>
      <name>j_config_load_args_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga20d67c58e3aafe742d3c1d773a452d3a</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>Jconf *</type>
      <name>j_config_load_file_new</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gae76edfad2908d3c61b4bde024e34b1ec</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_get_amconf_by_name</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gab97169db221b50d0da190d842ed544d2</anchor>
      <arglist>(Jconf *jconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_get_amconf_by_id</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga1d7751d5d5890f0de8ea2bff7030e195</anchor>
      <arglist>(Jconf *jconf, int id)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_AM *</type>
      <name>j_get_amconf_default</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga5a12f1b3ff0c37a7d475435bbcf5e358</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_LM *</type>
      <name>j_get_lmconf_by_name</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gaff7081c98a6fa70d6f08bb4cb4e59c2a</anchor>
      <arglist>(Jconf *jconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_LM *</type>
      <name>j_get_lmconf_by_id</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga44bf59ea9f72972dbf4676542662f6e5</anchor>
      <arglist>(Jconf *jconf, int id)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_SEARCH *</type>
      <name>j_get_searchconf_by_name</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga8d118af9934a25cad02c510187af5cab</anchor>
      <arglist>(Jconf *jconf, char *name)</arglist>
    </member>
    <member kind="function">
      <type>JCONF_SEARCH *</type>
      <name>j_get_searchconf_by_id</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>gaaccdee4213bf1368fe5c51c26d690691</anchor>
      <arglist>(Jconf *jconf, int id)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_jconf_finalize</name>
      <anchorfile>group__jconf.html</anchorfile>
      <anchor>ga2609f4e91c9aba445523fc07a27fae62</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>instance</name>
    <title>LM/AM/SR instance API</title>
    <filename>group__instance.html</filename>
    <member kind="function">
      <type>Recog *</type>
      <name>j_recog_new</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>gab227652fedd329c864ee9d979b7ec9f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>j_recog_free</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga2067c284c3331aac903e2dacc51904a6</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
    <member kind="function">
      <type>Recog *</type>
      <name>j_create_instance_from_jconf</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga971da157919cd74720405eabc478db99</anchor>
      <arglist>(Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_load_am</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga4c6e0cea343b273fe5d72137753c0180</anchor>
      <arglist>(Recog *recog, JCONF_AM *amconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_load_lm</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga85270aea586e95c7a2bf96759e994f38</anchor>
      <arglist>(Recog *recog, JCONF_LM *lmconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_load_all</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga598cafcd9f0525e0b026970eba53fe1a</anchor>
      <arglist>(Recog *recog, Jconf *jconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_launch_recognition_instance</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>ga8132198f24e3fb5e4576f43090fef27d</anchor>
      <arglist>(Recog *recog, JCONF_SEARCH *sconf)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>j_final_fusion</name>
      <anchorfile>group__instance.html</anchorfile>
      <anchor>gadbbf58d07165ff213b34a987b8089093</anchor>
      <arglist>(Recog *recog)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>hmminfo</name>
    <title>HTK HMM definition</title>
    <filename>group__hmminfo.html</filename>
    <class kind="struct">HTK_HMM_StreamInfo</class>
    <class kind="struct">HTK_HMM_Options</class>
    <class kind="struct">_HTK_HMM_trans</class>
    <class kind="struct">_HTK_HMM_variance</class>
    <class kind="struct">_HTK_HMM_dens</class>
    <class kind="struct">_HTK_HMM_stream_weight</class>
    <class kind="struct">_HTK_HMM_PDF</class>
    <class kind="struct">_HTK_HMM_state</class>
    <class kind="struct">_HTK_HMM_data</class>
    <class kind="struct">GCODEBOOK</class>
    <class kind="struct">BASEPHONE</class>
    <class kind="struct">HMM_basephone</class>
    <class kind="struct">HTK_HMM_INFO</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_STATE_NUM</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga3a6d9f0dc2a809b011230c11a53e96be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HMM_RC_DLIM</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gaf31879ab7697a269206c72687f6e931a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HMM_LC_DLIM</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga0898042467a0255c44522ed1e9f16f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HMM_RC_DLIM_C</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gafe32184fcc3e1aef610bc20f0ff4dfb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HMM_LC_DLIM_C</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gafc95185b98919cdddbb1d0f43e67d034</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPMODEL_NAME_DEFAULT</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gafa17d5be9e43a169e42af6ab9d4106bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_HMMNAME_LEN</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga03339d0923a3899e303b85dae880a0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_trans</type>
      <name>HTK_HMM_Trans</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga8ab5c5219c3655485a76c379b8294c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_variance</type>
      <name>HTK_HMM_Var</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gaab6f75417b0e1fe9e9ca80224b312d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_dens</type>
      <name>HTK_HMM_Dens</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga6986f1830e0ff36c27e812d55b5ec9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_stream_weight</type>
      <name>HTK_HMM_StreamWeight</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga4ea4fc181e4978fbd6c324c89dbb438d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_PDF</type>
      <name>HTK_HMM_PDF</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga4d2b789fadf7f3f6b5a1e3a67c80f48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_state</type>
      <name>HTK_HMM_State</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga5baa80cfe7ecbddc5c6190f995deb4ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HTK_HMM_data</type>
      <name>HTK_HMM_Data</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga9c34c4e14e0e57e7781a3b99576499a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>iwcd_type</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>ga93934e278971e926c03d75c74bc7262d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IWCD_UNDEF</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gga93934e278971e926c03d75c74bc7262daf57116b0c32931227663cc80c8975c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IWCD_MAX</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gga93934e278971e926c03d75c74bc7262daba15835add05a3dccf473ea35e53bc8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IWCD_AVG</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gga93934e278971e926c03d75c74bc7262dab84bb92cc30dfb8b29156e644e0df4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IWCD_NBEST</name>
      <anchorfile>group__hmminfo.html</anchorfile>
      <anchor>gga93934e278971e926c03d75c74bc7262da549bc04192bb9b38cb548dad0bc6a92c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>cdset</name>
    <title>Context-Dependent HMM set</title>
    <filename>group__cdset.html</filename>
    <class kind="struct">CD_State_Set</class>
    <class kind="struct">_cd_set</class>
    <class kind="struct">HMM_CDSET_INFO</class>
    <class kind="struct">_HMM_logical</class>
    <member kind="typedef">
      <type>struct _cd_set</type>
      <name>CD_Set</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga9317cf1051eb7a551208e279b400c8cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _HMM_logical</type>
      <name>HMM_Logical</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>gac1b6e3797d0942199f330ff2026347cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CD_STATE_SET_STEP</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga3700ac3d7b15482e19174931cb9e648d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>CD_Set *</type>
      <name>cdset_lookup</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga43f616f3bfab4e116b3a447857049515</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *cdstr)</arglist>
    </member>
    <member kind="function">
      <type>CD_Set *</type>
      <name>lcdset_lookup_by_hmmname</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga6787796b1a041b3f9752003920da78b6</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *hmmname)</arglist>
    </member>
    <member kind="function">
      <type>CD_Set *</type>
      <name>rcdset_lookup_by_hmmname</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>gae84b6e22a78467fd9a7d89ad95013e31</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo, char *hmmname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_all_cdinfo</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga058d7cf32cbd329a5516948dc4a70d29</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>regist_cdset</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga82ea08274488fb21c3820de4584b8c5c</anchor>
      <arglist>(APATNODE **root, HTK_HMM_Data *d, char *cdname, BMALLOC_BASE **mroot)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>make_cdset</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>gad0eece72a2aa126991a7029465406813</anchor>
      <arglist>(HTK_HMM_INFO *hmminfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_cdset</name>
      <anchorfile>group__cdset.html</anchorfile>
      <anchor>ga21361fa87ab20786215d960324f9ba74</anchor>
      <arglist>(APATNODE **root, BMALLOC_BASE **mroot)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__A_CELL2__</name>
    <filename>struct____A__CELL2____.html</filename>
    <member kind="variable">
      <type>unsigned short</type>
      <name>n</name>
      <anchorfile>struct____A__CELL2____.html</anchorfile>
      <anchor>aa824860321e3ff8ff69e09b59a0f2c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>arc</name>
      <anchorfile>struct____A__CELL2____.html</anchorfile>
      <anchor>ab39c0f91e734672c45a659b0508a14d8</anchor>
      <arglist>[A_CELL2_ALLOC_STEP]</arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>a</name>
      <anchorfile>struct____A__CELL2____.html</anchorfile>
      <anchor>ab4b4a82101a59b977bacdcf75e7de057</anchor>
      <arglist>[A_CELL2_ALLOC_STEP]</arglist>
    </member>
    <member kind="variable">
      <type>struct __A_CELL2__ *</type>
      <name>next</name>
      <anchorfile>struct____A__CELL2____.html</anchorfile>
      <anchor>ab71ff0bbfa6e19c4aa4c38b100de3905</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__adin__</name>
    <filename>struct____adin____.html</filename>
    <member kind="variable">
      <type>boolean(*</type>
      <name>ad_standby</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>af65213255154189311cd1dd2b7716528</anchor>
      <arglist>)(int, void *)</arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>ad_begin</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a5adf69e17dd5e8b09127fe9fca80025e</anchor>
      <arglist>)(char *)</arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>ad_end</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a66f969ef35b92641f478cf03de54bd60</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>ad_resume</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a63133647206dcf49c2df2563a79fb75f</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>ad_pause</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>acf65a666e1eab19780c9a14e86ac5bd6</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>ad_terminate</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>ac01f3569a2da369900c37557f9b034b6</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>ad_read</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>acda2619e154279b2d19496735cd4a9d9</anchor>
      <arglist>)(SP16 *, int)</arglist>
    </member>
    <member kind="variable">
      <type>char *(*</type>
      <name>ad_input_name</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>abb609153640ca9d2f55f5753a195d298</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>thres</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a786f7165ae698c892af7602a10aad85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>noise_zerocross</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a3562f1da98fe0f6c301e76a40fd07bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nc_max</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>acf8711a11e1dbf4d578bcec1f310c8c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>adin_cut_on</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>ad14a03a810df99629d69ec8c298e14f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>silence_cut_default</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a4678d3690972bc68d6c7cc5b30d7dcf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>strip_flag</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>ab04785e1e8bef54d26c1567b89a68cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>enable_thread</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a091ef58c45a68fa6ad3b9ac6667fff51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>need_zmean</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>aadc31f352219b4ab07c33a88ecb72a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>c_length</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a8da2e73dcb7b8528de6daba496dba599</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>c_offset</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a2f1bff65d59920fd12eb39a6f6d00260</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SP16 *</type>
      <name>swapbuf</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a6fa11d5a9831198b01510e4198e538da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sbsize</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a7531f6ffa72a31abcf14806c0a95de6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sblen</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a7e5149c0da528792e1ec2bbe200e29ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rest_tail</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a9d03bf08af292b61843ef9a23e2c6c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ZEROCROSS</type>
      <name>zc</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>ab0c29f382582e81d6268029542eea182</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SP16 *</type>
      <name>buffer</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>adcec4eff3f7b953440a3f16eb86a2eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bpmax</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a5ca4e54425efacb208b6de0114dd6fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bp</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a833cd4489ab03c0a075f21d16a7e0963</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>current_len</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>aa18a641dbf7fc2cddc5a1de98592b4c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SP16 *</type>
      <name>cbuf</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>acff8533d2682c481fd65c69dbe41f590</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>down_sample</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>ae084fb2cf64d9f83671efa22af347487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SP16 *</type>
      <name>buffer48</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a5353b5bef5c3894632f6c135583557b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>io_rate</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>aeaa0d5b3ea7cae527aee8de1d746dac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>is_valid_data</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>ae421038fc98c709ec94278c5bb49254d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nc</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a6dd7029d912bf106b6cd15e65266276e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>end_of_stream</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>aab9d261267fc40df43dad2b2dc47dd7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>need_init</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a3de212ee90b00e5c75c3510b8e9eb211</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DS_BUFFER *</type>
      <name>ds</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a1c2e1bbda7d0006875e78aacbb4b9e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>rehash</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>af06ab25b302c3a65891cba082ae1c92c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>input_side_segment</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a68e580ff542557b56c586cf1f964031f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>total_captured_len</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>a28158cede037a26b381e744460bcb674</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>last_trigger_sample</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>ac3f16a643832b3754ec05bf999578ead</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>current_input_name</name>
      <anchorfile>struct____adin____.html</anchorfile>
      <anchor>ae1b5e26ccff645d33fbc946fd7078c79</anchor>
      <arglist>[MAXPATHLEN]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__arc__</name>
    <filename>struct____arc____.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>label</name>
      <anchorfile>struct____arc____.html</anchorfile>
      <anchor>a64a26a347084060e573224b74b3618a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>STATEQ *</type>
      <name>to</name>
      <anchorfile>struct____arc____.html</anchorfile>
      <anchor>ae1ae3f7cac4396b5a84c1d761ad3a543</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __arc__ *</type>
      <name>next</name>
      <anchorfile>struct____arc____.html</anchorfile>
      <anchor>a30bd43200b7d740b392a4069a3e69614</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__backtrellis__</name>
    <filename>struct____backtrellis____.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>framelen</name>
      <anchorfile>struct____backtrellis____.html</anchorfile>
      <anchor>a63ee7f26c4b19eaf718c9838b7193bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>num</name>
      <anchorfile>struct____backtrellis____.html</anchorfile>
      <anchor>a1621a661c948f93f70f3ca304b17db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TRELLIS_ATOM ***</type>
      <name>rw</name>
      <anchorfile>struct____backtrellis____.html</anchorfile>
      <anchor>a81a6da8e643085cee5efa0fad0362da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TRELLIS_ATOM *</type>
      <name>list</name>
      <anchorfile>struct____backtrellis____.html</anchorfile>
      <anchor>aaf5b5a47927f6c148dfc56aad4e31cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BMALLOC_BASE *</type>
      <name>root</name>
      <anchorfile>struct____backtrellis____.html</anchorfile>
      <anchor>a834b59af2c3d8edcb4e937a7cb0a81b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__confnet_cluster__</name>
    <filename>struct____confnet__cluster____.html</filename>
    <member kind="variable">
      <type>WordGraph **</type>
      <name>wg</name>
      <anchorfile>struct____confnet__cluster____.html</anchorfile>
      <anchor>ae6a87ed9090fe4e4431d744deeebf414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>wgnum</name>
      <anchorfile>struct____confnet__cluster____.html</anchorfile>
      <anchor>a5f66f50edaea3be98ecb612d1d76229b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>wgnum_alloc</name>
      <anchorfile>struct____confnet__cluster____.html</anchorfile>
      <anchor>a9881057d7a657d4c91f76c7a530d85ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID *</type>
      <name>words</name>
      <anchorfile>struct____confnet__cluster____.html</anchorfile>
      <anchor>a9b15171e567d6a0138b9825570eae23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>pp</name>
      <anchorfile>struct____confnet__cluster____.html</anchorfile>
      <anchor>a67cc3e12a10c469ca205635a729b2157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>wordsnum</name>
      <anchorfile>struct____confnet__cluster____.html</anchorfile>
      <anchor>a199a4f05b6294f0fcf7e07ca882be759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __confnet_cluster__ *</type>
      <name>next</name>
      <anchorfile>struct____confnet__cluster____.html</anchorfile>
      <anchor>ab4d8290623a37eda09b6b826ddb3b251</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__FSBeam__</name>
    <filename>struct____FSBeam____.html</filename>
    <member kind="variable">
      <type>TOKEN2 *</type>
      <name>tlist</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a7b3ddfd7a1021566966ea04d476bf525</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>TOKENID *</type>
      <name>tindex</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a5b38ab5fb5abf624df2ca24c0784f5b6</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxtnum</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a49e09c50ba07b8e188f8182078fc28e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>expand_step</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a1816b8addc4548f72092a913fb5ab2fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>expanded</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>ae61d6ceed94e9319e5abbdae3f050b55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tnum</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a9f10b7b892e1b0251297486f953ea574</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_start</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a6ef3aaa7fb070876a6c9d1b9a1606335</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n_end</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>add4f4805a5955af30d97144cd0be7f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tl</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>adf41a46c6cca2accc9f902dbdbd4f534</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tn</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a60e9ca91618ab1aa4bd5da3e6c556e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TOKENID *</type>
      <name>token</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a6897d6cd774ab3a3ee695c0a74109558</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>totalnodenum</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a4ad2412c70fc2b94a625bce9f13dc8dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TRELLIS_ATOM</type>
      <name>bos</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a0efd1bc395662b232da98cea4039eb67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>nodes_malloced</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a369399bab384300c248a12ece51d9869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lm_weight</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>aa5859b9ed295cd168f71d9e76283753e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lm_penalty</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a0f63d7e6db75be22bd195afe00b70c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lm_penalty_trans</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a2f3c3edf00ad32fc5733a3f6a95ad651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>penalty1</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a3435971529051877ff2f1a5672faec1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>in_sparea</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a76c7b582ad58ede82ade6322d3acb1f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tmp_sparea_start</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>ab68d5371bb2a2efef584e2ff06ffc58a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>last_tre_word</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a16e89f6ec4f476f0729ceba324db82e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>first_sparea</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a5df22647b832d62aec33a0e2551d9d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sp_duration</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>a0da19dc50221f35b38a3ff896cf17636</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>pausemodelnames</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>aa5a15f46a35876caeb42a13e16d01280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>pausemodel</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>afc0f39f90f130a5173efbd406b537dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pausemodelnum</name>
      <anchorfile>struct____FSBeam____.html</anchorfile>
      <anchor>ab70c7f7f9d4d21a26790e44a7b2d950a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__gmm_calc__</name>
    <filename>struct____gmm__calc____.html</filename>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>gmm_score</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>a5c33f6731c9e47d17a64f7a0acc71560</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean *</type>
      <name>is_voice</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>a8ef09324864a3383c3b169fa309d8ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>framecount</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>aeae88353d8b039ddd90123d64fb2437c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>OP_nstream</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>a653eea26c2df093da840bb158bd813a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECT *</type>
      <name>OP_vec_stream</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>a3dea1231d31442543ea0a8a39ed9f6a1</anchor>
      <arglist>[MAXSTREAMNUM]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>OP_veclen_stream</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>ab5e37cc5fb8eee131445563a6f3b6f7c</anchor>
      <arglist>[MAXSTREAMNUM]</arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>OP_calced_score</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>adb88e215ddc711be748268bda413ac8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>OP_calced_id</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>a891c2af0a52cdaea83d88a90c5491637</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OP_calced_num</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>afeb431d1acf1d10233e8f30be4914924</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OP_calced_maxnum</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>acccde368b18e502fa12216e042587bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OP_gprune_num</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>ac29d5ff3edf13b263f609f691f8ca601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECT *</type>
      <name>OP_vec</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>ad3382a82bce7ece98f2715aac84811d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>OP_veclen</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>a962b40cf73b2492385cfbe400174d136</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_Data *</type>
      <name>max_d</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>a41b89498fc47b58bf039e0c2161ff17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_i</name>
      <anchorfile>struct____gmm__calc____.html</anchorfile>
      <anchor>ae1a0a0182576bc2690ed3a0497b0cc32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__gram_list__</name>
    <filename>struct____gram__list____.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>dfafile</name>
      <anchorfile>struct____gram__list____.html</anchorfile>
      <anchor>ad33880f8b0f2c6d23c1032fda2c75a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>dictfile</name>
      <anchorfile>struct____gram__list____.html</anchorfile>
      <anchor>af58eddb034548a8af2d9856404fe2d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __gram_list__ *</type>
      <name>next</name>
      <anchorfile>struct____gram__list____.html</anchorfile>
      <anchor>a57bece885d430aa71def6343777b2855</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__hmmwork__</name>
    <filename>struct____hmmwork____.html</filename>
    <member kind="variable">
      <type>LOGPROB(*</type>
      <name>calc_outprob</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a3eddcc47f3b110332e02b36c9419a97d</anchor>
      <arglist>)(struct __hmmwork__ *)</arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB(*</type>
      <name>calc_outprob_state</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a300cc556c9d1b170923c1fe4565ccd61</anchor>
      <arglist>)(struct __hmmwork__ *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>compute_gaussset</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a8420d8be86fb0e80c2448619f69e204f</anchor>
      <arglist>)(struct __hmmwork__ *, HTK_HMM_Dens **g, int num, int *last_id, int lnum)</arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>compute_gaussset_init</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a02c7493c8c8ad6588877a642a5f25059</anchor>
      <arglist>)(struct __hmmwork__ *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>compute_gaussset_free</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>abb3e7f8bef070dfa2f8dad0b6e21e5ce</anchor>
      <arglist>)(struct __hmmwork__ *)</arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_INFO *</type>
      <name>OP_hmminfo</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a0da06a463c7829e771d526b8a753518a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_INFO *</type>
      <name>OP_gshmm</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a0009f8e5d7da2b6d7f781a3932b0540a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_Param *</type>
      <name>OP_param</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a528f130af31caa18adb2d2b2b25a7ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OP_gprune_num</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a7abf71c446dabe75a75b2ce0eaa3863f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OP_time</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a71deff6c65e84efea1bc39088fa05fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OP_last_time</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>aefd7466f1fce60546db1ef907f2d6d4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_State *</type>
      <name>OP_state</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>ae7e7c41eed85e0d7fd6bf0929a6d8661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OP_state_id</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a21f1fed838e61edfafaa27280ed0959b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>OP_nstream</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>aba4a6831863aa8e41543a0206c90bedf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECT *</type>
      <name>OP_vec_stream</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a6f61549597cf389c92251d33519bbbba</anchor>
      <arglist>[MAXSTREAMNUM]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>OP_veclen_stream</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>aa2805d231a94ca12a27e452518a673a6</anchor>
      <arglist>[MAXSTREAMNUM]</arglist>
    </member>
    <member kind="variable">
      <type>VECT *</type>
      <name>OP_vec</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a56a7b711c8a1c583708a8c2598d5a291</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>OP_veclen</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>afe6cdeebdea85accbad01cbfa9a05b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OP_calced_maxnum</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a000c1ca57515b007c76e56694d93d5f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>OP_calced_score</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>aab860e8d44fccef3aa8d01fc7443e325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>OP_calced_id</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a569615f9a64580ccdba44193e1d052e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>OP_calced_num</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a7c9339b01f6faf7b128d3b8ca1e5607c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>statenum</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>af64b59c23cd145b75958a0cc7fea6921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB **</type>
      <name>outprob_cache</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>ace87bae0bb1652d8cdeaf85e9beccd70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>outprob_allocframenum</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>abf073509cac9e00ee04f38be163466fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BMALLOC_BASE *</type>
      <name>croot</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a4cfd4c87a2ea4e15d47186ba8efcf5ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>last_cache</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a8c950f97791217a770f145cf457d0ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MIXCACHE ***</type>
      <name>mixture_cache</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a47d84129205e6bc7783d791bb7cb02a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short **</type>
      <name>mixture_cache_num</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>ac04cc1deff931e6ebb7c3dc5cf6d7c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BMALLOC_BASE *</type>
      <name>mroot</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>ad31a4316eadbdfc4498d07e09c10ba25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>tmix_last_id</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a2211a8ce78fc6d67c928cb6bf2ce5c09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tmix_allocframenum</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a12dafa4f7f5d701727891556db6e5a3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean *</type>
      <name>mixcalced</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a0b5a3ca7a02bb4250c5d5522f21fe791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>dimthres</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>aaad009e44c817e0f4cc549ebfa4a7b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dimthres_num</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a324892e3eb63e811abac3106f6a307a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>backmax</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a5eff9a0c4122253ef7250759c58b45b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>backmax_num</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>ae9452523be7835cb545f02b3e8f32550</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>cd_nbest_maxprobs</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a7b2ac72ec1c66de41f90398cbb9394a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cd_nbest_maxn</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>aecf5be21cd592e193a64c5e4283f933b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>my_nbest</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a37e9c22f77b680dc43584873cd90787c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gms_allocframenum</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>af35e7228935d9637a112399a7a66f337</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GS_SET *</type>
      <name>gsset</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>aecd2d131ca2e450bfcd115c61e786562</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gsset_num</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>ac1a90c998b6380b4230de24427269006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>state2gs</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a181483fe561497732aff38cefd7fc3f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean *</type>
      <name>gms_is_selected</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a84e5f9b721f72aed69d2055078585d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB **</type>
      <name>fallback_score</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>af8701bde29d43f66a863ed12c2d1b9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>gsindex</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a228ac25a99f5eb90b3fad57631cba716</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>t_fs</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>afea2224c3818edb868e027caa0d8b195</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int **</type>
      <name>gms_last_max_id_list</name>
      <anchorfile>struct____hmmwork____.html</anchorfile>
      <anchor>a31aaa660cfa1d9a2ae19b6fdb905e8c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__j_plugin_entry__</name>
    <filename>struct____j__plugin__entry____.html</filename>
  </compound>
  <compound kind="struct">
    <name>__j_useropt__</name>
    <filename>struct____j__useropt____.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>optstr</name>
      <anchorfile>struct____j__useropt____.html</anchorfile>
      <anchor>aea00f1ecbf50739c4285c2fa60a2f82e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>desc</name>
      <anchorfile>struct____j__useropt____.html</anchorfile>
      <anchor>a7c4536868822e0fd14372289cbab9d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>argnum</name>
      <anchorfile>struct____j__useropt____.html</anchorfile>
      <anchor>a6ca447a6b8e5e74e46b10270138e3dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>reqargnum</name>
      <anchorfile>struct____j__useropt____.html</anchorfile>
      <anchor>aff968606131b12a28aa5fc5ef4780838</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>func</name>
      <anchorfile>struct____j__useropt____.html</anchorfile>
      <anchor>acfd179f97d6756680aa3c896c0dbbd06</anchor>
      <arglist>)(Jconf *jconf, char *arg[], int argnum)</arglist>
    </member>
    <member kind="variable">
      <type>struct __j_useropt__ *</type>
      <name>next</name>
      <anchorfile>struct____j__useropt____.html</anchorfile>
      <anchor>a2634a648f0e2a250aef5c6451aa77f2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__Jconf__</name>
    <filename>struct____Jconf____.html</filename>
    <member kind="variable">
      <type>JCONF_AM *</type>
      <name>am_root</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a33ef7cda0368a724d162250b2d9acb4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JCONF_LM *</type>
      <name>lm_root</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a980fb069a5bcadc7e5d7e505e59ee9b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JCONF_SEARCH *</type>
      <name>search_root</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>abe5df7d8247329f9a4b4baf88f14751e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JCONF_LM *</type>
      <name>lmnow</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>ab2b54d77629610cf2fe0cbd7c204d766</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JCONF_AM *</type>
      <name>amnow</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a4944818216ea554b3a7e434ba028378a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JCONF_SEARCH *</type>
      <name>searchnow</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>aefed59baef1ce07ea4f753597c0dfda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JCONF_AM *</type>
      <name>gmm</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a635b71af85b49f0c36d7d33f36629167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>optsection</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a91186d66911119d38aa917e4686de2cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>optsectioning</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a3b69724d7c691d6de254e5dbfcfd46ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a725279585ae9b51a165d059ba8f4a592</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>speech_input</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a9fa7cb91cd1633a10676aa620e8ff4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>device</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>aed3421d37a09e1f685acd1ee5e85f144</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>plugin_source</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a82893b402cdb6edbb629f4b1f3d66793</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>sfreq</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a81a16864838770783572037216b1482a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>period</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a4762297ebcd947447214797b1e8c15d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>framesize</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>aaf7ae6fdab64a03d5a032210023b367f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>frameshift</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a2644040524b77a765883d77309ddef81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>use_ds48to16</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a854e8ccd81b7a1c5a4c71a1ddd2f5352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>inputlist_filename</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a98f91b2aef12c9487fdc5b2d789f51a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>adinnet_port</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>aaab09ce05ba4f84a92dd783194cd36d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>paramtype_check_flag</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>aad01a6f64389afb146ec96b1fe0527fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>level_thres</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>aeeb10a3a11ab0daf4bf5f1289c297b9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>head_margin_msec</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a167d26e42dbb17dc533d0d50d8695bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tail_margin_msec</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a0063a5c0d5e47a60f952bf6a6e130fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zero_cross_num</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a6dec2b137c5ea10439ef384e892691ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>silence_cut</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>ad2ce522ea27351766d72247a5556adb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>strip_zero_sample</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a44467a835b95945e2e04c13bc7d6a525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>use_zmean</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a57e76c24c8786feb7878607a01a9029e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gmm_filename</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>ae66f86b59e5eb3e4b5160951ad680324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gmm_gprune_num</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a08ecaf6cf349bb200285bfd1165d4a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>gmm_reject_cmn_string</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>aca1a5f9fa9441157428fcefe8d1a259a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rejectshortlen</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a9180b06f998251f3f3db7d6962c76d0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>realtime_flag</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a5c136b53ca1ce5b7066e7a47f45851d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>force_realtime_flag</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>ad10d30ee4eb16b6ae49976e15fe860f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>forced_realtime</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a89757d4bc702d23bdc4036fd9f0c71b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>segment</name>
      <anchorfile>struct____Jconf____.html</anchorfile>
      <anchor>a3ebe140d6b016ff7422477d204ff49f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__jconf_am__</name>
    <filename>struct____jconf__am____.html</filename>
    <member kind="variable">
      <type>short</type>
      <name>id</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a9a2a81517f27a74eb9f2a41368ff4fb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a9c68563af2288c10a2a21453771e5f3a</anchor>
      <arglist>[JCONF_MODULENAME_MAXLEN]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>hmmfilename</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a3ef6393f71b136c49df22b96ead61178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>mapfilename</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>aa055f297cd17be9861a218bab06bd9ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gprune_method</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>aefed1a5118ee1db4124ad0abc11246f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mixnum_thres</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>aebbf4b6b6c6686f1bf53f5a44ccd6b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>spmodel_name</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a7a20816ddefe9f614534c95986b12152</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>hmm_gs_filename</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>aafbecf576f728216feec24a8fad9a3f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gs_statenum</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a480dab295b5ce575630abbf13f62f2e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>iwcdmethod</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>aa3afc09151a82cfd9d407d5de24360ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>iwcdmaxn</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>ad979a87bf1d04f1fe84991fe1a6e14a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>iwsp_penalty</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a4d66ab9c7007f366e874fa5b7ffa718c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>force_multipath</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a1fff28b8a00bf2f9eced4a9f82ec10da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gprune_plugin_source</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>af11ba72090e80cb323bb8ce63585c73d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Value</type>
      <name>para</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>ab7502ec04b7bcb5e06e2a76556fcedfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Value</type>
      <name>para_default</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a65d1202b50494e84e32ef099146bdf10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Value</type>
      <name>para_hmm</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a47aa4c185df9acb8a763a3380ac12507</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Value</type>
      <name>para_htk</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a8062684ac53f53363b8b7e34ff57c5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cmnload_filename</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>ad876d96a199d97be0d21f4b337a8d38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>cmn_update</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>ad8556febd3ac0422400e5c4caeb5bc36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>cmnsave_filename</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a915d512688f8d3a86d091076f7ab9455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>cmn_map_weight</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a96abbc1f3593005a2bb449070392dd01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ss_alpha</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a37168b1ba89407128d726b17ef227a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ss_floor</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>a804799503ea0a2d6a4c91b067ecd3a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>sscalc</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>acca09ca46d55d9662cce6cf9cd1798f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sscalc_len</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>aa194daa56a2eefeaec26b09d56bf5616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>ssload_filename</name>
      <anchorfile>struct____jconf__am____.html</anchorfile>
      <anchor>ae6bad7aaafccd67ad4395f9ae3b82207</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__jconf_lm__</name>
    <filename>struct____jconf__lm____.html</filename>
    <member kind="variable">
      <type>short</type>
      <name>id</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a8ca8e4164a9e73f2ac974965a6373901</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a87be56e6bdcfdbe6adaccfedc5892b04</anchor>
      <arglist>[JCONF_MODULENAME_MAXLEN]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lmtype</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a0bc13d6064cd6b4db6c010086268a078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lmvar</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>ae357934ce4cb26372e05c58749d3d9f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>dictfilename</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>ad4a76ed05ab41af9b3af37c85c0c37a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>head_silname</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a2635e442c7c1ff3fa89caa77595afc55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>tail_silname</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>af2f1e1b09de68042d748aa9e925f7594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>forcedict_flag</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a5390b944a5045f4e34ed7a2169f014c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>ngram_filename</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a2c2b36cb707a9c8f4cc5d9046e7ecf93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>ngram_filename_lr_arpa</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a888474251cf1fe17a4bad610829020cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>ngram_filename_rl_arpa</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a2a003e96f4bb0908519639473d6300d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>dfa_filename</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>ae7b057ea2dba93b93b4503b382e6a48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GRAMLIST *</type>
      <name>gramlist_root</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a72d79e70df039257df6e4e69063faa1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GRAMLIST *</type>
      <name>wordlist_root</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a1aa91268ae34676f52ff09a76bd9ec44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>enable_iwsp</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>ad4f2758ce2a6595d82b29dccceae793b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>enable_iwspword</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a0441caf273f10a80df705cff22d8a25d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>iwspentry</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a95b0a9272b8d18efd6e61ca6bb8f4f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>wordrecog_head_silence_model_name</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a5739a997a2939f5ed84cdcc16ed4cc54</anchor>
      <arglist>[MAX_HMMNAME_LEN]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>wordrecog_tail_silence_model_name</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a4c1c34483ff1ff7386435658ae4e30cb</anchor>
      <arglist>[MAX_HMMNAME_LEN]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>wordrecog_silence_context_name</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a7ba8ee553503c651ee168f5883833bfe</anchor>
      <arglist>[MAX_HMMNAME_LEN]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>unknown_name</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>a561bca8b8c96d076b70b6b03034c79d0</anchor>
      <arglist>[UNK_WORD_MAXLEN]</arglist>
    </member>
    <member kind="variable">
      <type>struct __jconf_lm__ *</type>
      <name>next</name>
      <anchorfile>struct____jconf__lm____.html</anchorfile>
      <anchor>ab967e4a4ce890e3805e455cbb1ed90bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__jconf_search__</name>
    <filename>struct____jconf__search____.html</filename>
    <member kind="variable">
      <type>short</type>
      <name>id</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a9a8903da005d06911834ccf16ac890fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a1323ba1ddfef7f7f99b4a2f4782ca462</anchor>
      <arglist>[JCONF_MODULENAME_MAXLEN]</arglist>
    </member>
    <member kind="variable">
      <type>JCONF_AM *</type>
      <name>amconf</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>afd3c4dc81d4bb624641026ff5822426a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JCONF_LM *</type>
      <name>lmconf</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>ab7ee7502a3f502813387d629c5953ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>compute_only_1pass</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>ab6493309b736c4a90375a92689e52018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>ccd_handling</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>aa46ec37099fa9609ac7100cb50e41da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>force_ccd_handling</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>af8ad7077375a85eed95ba4d99d4effa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lm_weight</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a36f5e475c91a671cea0077ff218554b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lm_penalty</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a0b5fd643b27e937a1b0d4c38972c1b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lm_weight2</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a24920b435f61386983a9448b26be873a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lm_penalty2</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a63a576e9199a8ef0d5ddd8ed0a4bc785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lm_penalty_trans</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>aaa8a552adb0b61ac27a562e783951388</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>penalty1</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>ad811af6220f84b5e76a022f5a8171a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>penalty2</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a04eb4618f3d6fb96d6a12a9274bd9ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>lmp2_specified</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a5b61db1bf87a9a9151c8a89beef700a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>lmp_specified</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>aea1327f27282c7c9c7bc0b674e8183c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>specified_trellis_beam_width</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a6ff0b1f070048e3b835407e509b330d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>old_tree_function_flag</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>ae152451899a44820a0a6d15372e60439</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nbest</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a3e604d531c91051e2a1f7658c84652e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>enveloped_bestfirst_width</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a12730056eee500247764e70463501dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>hypo_overflow</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a74b35d747e0cbcf60f658747be2f264b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stack_size</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>af7f0a51c9925f6a2fcb945b23ef71896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lookup_range</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a65ca3171e568b6954c5501d41a39d7b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>looktrellis_flag</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>af97a729ba4c4caefbcdd5500e26bfe26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>enabled</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a62337bfc8823f18bca1ab0e85f26a962</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>lattice</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>af2295600b011f7cc8ed92b97c8e462ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>confnet</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>aec29e243438ca8df3a7001b8bbe344fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>graph_merge_neighbor_range</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a68606d78f5f7ec27f4c7bf3b9598b1c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sp_frame_duration</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a07170489518681e552d45a4445b58b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>pausemodelname</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a08c66c530e9fc2f8011d9d45531fe1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>align_result_word_flag</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a7f4ea9e2a3fa15800f3509f16560429e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>align_result_phoneme_flag</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>ad44b37722f343a69943dd9c932b954d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>align_result_state_flag</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>acfcf1be0af75dfd2d3ee701b9311face</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>output_hypo_maxnum</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a075621c2442a013cc8c742cc4829fffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>progout_flag</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a5c40bad47a2e460f977d99001d0aca2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>progout_interval</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a5121f000ec874e475b85531443dbb25f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>progout_interval_frame</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a4dfe9166e7472e50fe935d11f1142d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>multigramout_flag</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a2777c4e2349683b2905971666b3e2b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>trellis_check_flag</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a2a9368efbd4fc85376b20514223027d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>triphone_check_flag</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a76605a8e32730b72226a787efdacaa7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>wchmm_check_flag</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>ab39ba69fa0f7557e93ec82d5c0a35656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>start_inactive</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a8c47d32d00af2a35772743fb4d005143</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>fallback_pass1_flag</name>
      <anchorfile>struct____jconf__search____.html</anchorfile>
      <anchor>a2b227abbc8a191feed6c98066fc00c3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__mfcc_calc__</name>
    <filename>struct____mfcc__calc____.html</filename>
    <member kind="variable">
      <type>short</type>
      <name>id</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a0e3c3040af72b44e781b6ac4b86b251d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Value *</type>
      <name>para</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a59720cdf0e416b5a5d6ae0c1b237b32b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>htk_loaded</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a30cdf63ca048a55b027e26636bd487a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>hmm_loaded</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>add967e020b32f8b15a103710f5b12e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>paramtype_check_flag</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>aec04e6eccf256d403d7808d7b15dbc5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MFCCWork *</type>
      <name>wrk</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a3a769ac2070f0450347e27aeac7a4ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_Param *</type>
      <name>param</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a5579ac967e567d0bc54c2bab1d999e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_Param *</type>
      <name>rest_param</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a90f3de7a84f814786dc1c86c50fc8cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ENERGYWork</type>
      <name>ewrk</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ad332b1609103331687d67884cbc4fb97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DeltaBuf *</type>
      <name>db</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>aedaf5ac8874c25cf07a63515f52ce491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DeltaBuf *</type>
      <name>ab</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ad3aa1ba9521b8628834fa34d64c84d81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECT *</type>
      <name>tmpmfcc</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>adecb939175f82c4352f3ad4577010196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>valid</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a78e15c395c11c42a4ad13d329daf3843</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>f</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>aecc157ca9bdc31341519bbbdf00fc502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_time</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ada1d50d68b14d876d65b64b4d0f9bbb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sparea_start</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a03ab332fb587dd455655e41187301434</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>segmented</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ad167732bb1a15195e710e95381e5e946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>segmented_by_input</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ab625ee7e2c4e296941682c12a901c0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>plugin_source</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ad861912fcaab2603d14c8116367c971c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __mfcc_calc__ *</type>
      <name>next</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a4e903882d299f1e474dba0867a76b03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>load_filename</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>af9b57bbeb6ed8f2bf788a20af01257c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>update</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ac2e34ccf2b2711a1ac46915f4a9c7eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>save_filename</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a3daf352de0802fdb3bebe2795e5e607b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>map_weight</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a374b5f72fb8d6fe71ca6438ca8c80ddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>loaded</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a28b299062443c758b25f24124b3d5b4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CMNWork *</type>
      <name>wrk</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a4b7e4af39661b0459d62a3caaea0358e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>ssbuf</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a987c4bf1e456d0dde5795c8e26532dda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sslen</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a93d4c2b3b212fcd57b926f1f382b1ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ss_alpha</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>af8e872ece1ae4862bd8c88e0d7594d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ss_floor</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a489a7a6ddd047131b6fc4ab29558b6ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>sscalc</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a71aaa62b91133e37b6d9accdde3f375c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sscalc_len</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a71efbc239aef3f7e2cc678ee8aed19fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>ssload_filename</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ae0d6c235089db576b7e055524e24d704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MFCCWork *</type>
      <name>mfccwrk_ss</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ac9a995fdc6f73e8c0c6f3cb84fc3adcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>fv_standby</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ac6e32c0937234dcfa34b9d193907d90d</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>fv_begin</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>affd9f13311811a451ecc4b34675ecdbf</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>fv_read</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a3e570d28b484c7f77c91fe5b50203bd2</anchor>
      <arglist>)(VECT *, int)</arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>fv_end</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a1cacfedf4855a3cad7ef2040a91828f3</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>fv_resume</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>add180779fbd20e2db2eca3e5fba4eeb0</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>fv_pause</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ae16d73bd0966bf1504fa40b32bc962e7</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>fv_terminate</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>a808e1130ad0c25baba37134cde00b644</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="variable">
      <type>char *(*</type>
      <name>fv_input_name</name>
      <anchorfile>struct____mfcc__calc____.html</anchorfile>
      <anchor>ab212d9eda663898010e7f39941e60b1f</anchor>
      <arglist>)()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__multi_gram__</name>
    <filename>struct____multi__gram____.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>struct____multi__gram____.html</anchorfile>
      <anchor>ad2513ea941b2034add9cb650a8280b04</anchor>
      <arglist>[MAXGRAMNAMELEN]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>id</name>
      <anchorfile>struct____multi__gram____.html</anchorfile>
      <anchor>af0f34f4d0d96242fe572ff6b51086aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DFA_INFO *</type>
      <name>dfa</name>
      <anchorfile>struct____multi__gram____.html</anchorfile>
      <anchor>af478a3e820d0a3aadf2be6e74883ed90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_INFO *</type>
      <name>winfo</name>
      <anchorfile>struct____multi__gram____.html</anchorfile>
      <anchor>a1a53972afd98387757c04583fc793b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>hook</name>
      <anchorfile>struct____multi__gram____.html</anchorfile>
      <anchor>a0907cca2fbc9f7580b3b23ddd78e67c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>newbie</name>
      <anchorfile>struct____multi__gram____.html</anchorfile>
      <anchor>ae8a5d500f0c81f0ba8276f6279a93f63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>active</name>
      <anchorfile>struct____multi__gram____.html</anchorfile>
      <anchor>abc213baae6c51e5808a3fea07e676866</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>state_begin</name>
      <anchorfile>struct____multi__gram____.html</anchorfile>
      <anchor>a2a471c4b37c9ca3797c14d47811addd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cate_begin</name>
      <anchorfile>struct____multi__gram____.html</anchorfile>
      <anchor>affe80e577fb90a920f8a879b6420918e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>word_begin</name>
      <anchorfile>struct____multi__gram____.html</anchorfile>
      <anchor>ad01422987c24f2b969016e6e5c26895e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __multi_gram__ *</type>
      <name>next</name>
      <anchorfile>struct____multi__gram____.html</anchorfile>
      <anchor>a85d3f96ac5f68e0edb2abbde829b79d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__nextword__</name>
    <filename>struct____nextword____.html</filename>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>id</name>
      <anchorfile>struct____nextword____.html</anchorfile>
      <anchor>a92a51f6865d559dbbb210f5b3e713b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>next_state</name>
      <anchorfile>struct____nextword____.html</anchorfile>
      <anchor>af18a67ebfd537aacdee91911e44d8496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>can_insert_sp</name>
      <anchorfile>struct____nextword____.html</anchorfile>
      <anchor>a2fce93377772a91f1d6a35689df2b597</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lscore</name>
      <anchorfile>struct____nextword____.html</anchorfile>
      <anchor>aba92202352b7a077539fae58168dbc0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TRELLIS_ATOM *</type>
      <name>tre</name>
      <anchorfile>struct____nextword____.html</anchorfile>
      <anchor>afcc46425ceffd0d92134353242f396ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__ngram_info__</name>
    <filename>struct____ngram__info____.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a9928aa8fe2d8dde72a618d4c93daba31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dir</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a0e6f3b0ffbe851f1e1abf472435cc9f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>from_bin</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a180c6aa530663d97bf8eba64a828d8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>bigram_index_reversed</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>ac3c223c569ab65ced2efbaab774d536b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>bos_eos_swap</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a3c1d5f7fcbccb4d71b55905c5549bd8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>max_word_num</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a5a3653bb0e689509158b6e773018624c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>wname</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>aa644fa66b35d63db165767d8d8537f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PATNODE *</type>
      <name>root</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a91bf5bca2d70a94aac34283064d4641e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>unk_id</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a6bdd638b889ac69b1c33d4500f3d1505</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unk_num</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>ab8803380679b124704e43395c1ff9f8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>unk_num_log</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a8ce0242e9e08137bca8b516872a35b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>isopen</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a9f26b165eb7a524ea856ce3bb4986a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NGRAM_TUPLE_INFO *</type>
      <name>d</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a0b2aaf0280bf17d4479fa4b04a409f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>bo_wt_1</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a81c8746de9e0484a100b73a00ad502e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>p_2</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>addbb0997e0c7a369cc68c097a22a9400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB(*</type>
      <name>bigram_prob</name>
      <anchorfile>struct____ngram__info____.html</anchorfile>
      <anchor>a66a47b9541e7cd2fdc9589d1647a5ac0</anchor>
      <arglist>)(struct __ngram_info__ *, WORD_ID, WORD_ID)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__node__</name>
    <filename>struct____node____.html</filename>
    <member kind="variable">
      <type>boolean</type>
      <name>endflag</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a5e85d864234ea86e53f589f4c64d74ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>seq</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a5787fb9d15829b555fad01946895425c</anchor>
      <arglist>[MAXSEQNUM]</arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>seqnum</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a6649a9eb76461d5ee22342c9dc90e662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>state</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>acbbba2da70e6b0d6d3ff5768c83a770e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __node__ *</type>
      <name>next</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a9354eb34f024c560933b414a9648245f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __node__ *</type>
      <name>prev</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a2cc5a7da68e4f994a4d9218b3f4345e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>score</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>aa0eaa193b5fdc5ca7bb7ca3e561b5b24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>bestt</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a597b63b258e76cc7c797ea14df6c04d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>estimated_next_t</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a09d5b9c1bbc88c1390001b631e9d3bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>g</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>ad547d1ab779f9871081d672f90fa0fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>final_g</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>ac1a314a9fd9115e2ac50b45ec65d6200</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TRELLIS_ATOM *</type>
      <name>tre</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>afaf7005818ccba181ebbfdef5ef6529d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>g_prev</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a69453627f0b1faa5d703b4d7ca1ae0c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMM_Logical *</type>
      <name>last_ph</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a94e288e547d1e95a9bc473749e34b48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>last_ph_sp_attached</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>abf6f793da193ed984e109ec0a2c3d90e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lscore</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a4a268349a96776067f5b0199526cfd97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>totallscore</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a0ab3a220e665f80943aa0a843ac9bb85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WordGraph *</type>
      <name>prevgraph</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a3b0579f1680a4ab50803a340bcc5f942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WordGraph *</type>
      <name>lastcontext</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>aa06a81bd1bf08fef0b1324aebaf5e5c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>tail_g_score</name>
      <anchorfile>struct____node____.html</anchorfile>
      <anchor>a03e05234e967a943c43f9fe10c16f970</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__Output__</name>
    <filename>struct____Output____.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>status</name>
      <anchorfile>struct____Output____.html</anchorfile>
      <anchor>aa948850eccf43dc8731839bf2d9f64df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_frame</name>
      <anchorfile>struct____Output____.html</anchorfile>
      <anchor>a8f247ec035a0ee09d134fd15a637a5a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>length_msec</name>
      <anchorfile>struct____Output____.html</anchorfile>
      <anchor>aa4001835fbf812d1d26ea0a96647bd76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Sentence *</type>
      <name>sent</name>
      <anchorfile>struct____Output____.html</anchorfile>
      <anchor>a99287526752eb6e956cf2498dcf4b04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sentnum</name>
      <anchorfile>struct____Output____.html</anchorfile>
      <anchor>ab55c3a1b09af8570dd2d66324ade08aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WordGraph *</type>
      <name>wg1</name>
      <anchorfile>struct____Output____.html</anchorfile>
      <anchor>aa42908e4bde195964df62392cee82389</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>wg1_num</name>
      <anchorfile>struct____Output____.html</anchorfile>
      <anchor>aafefa9ed8c13a1944d201c43e94ba391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WordGraph *</type>
      <name>wg</name>
      <anchorfile>struct____Output____.html</anchorfile>
      <anchor>a6917f509522524fc8cca8a74588979de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CN_CLUSTER *</type>
      <name>confnet</name>
      <anchorfile>struct____Output____.html</anchorfile>
      <anchor>a8a850249ede9597b7ea3e294383c0dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Sentence</type>
      <name>pass1</name>
      <anchorfile>struct____Output____.html</anchorfile>
      <anchor>a9079b9cda1c13622e1a516235658871b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__process_am__</name>
    <filename>struct____process__am____.html</filename>
    <member kind="variable">
      <type>JCONF_AM *</type>
      <name>config</name>
      <anchorfile>struct____process__am____.html</anchorfile>
      <anchor>a67e2dbc0e60e1a41a15af8e3349a6d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MFCCCalc *</type>
      <name>mfcc</name>
      <anchorfile>struct____process__am____.html</anchorfile>
      <anchor>a43eadb04a1324ac4b8f1d9474d0e5dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_INFO *</type>
      <name>hmminfo</name>
      <anchorfile>struct____process__am____.html</anchorfile>
      <anchor>abf1c362f7293b3ab8496ba6f600494ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_INFO *</type>
      <name>hmm_gs</name>
      <anchorfile>struct____process__am____.html</anchorfile>
      <anchor>a13aa12a5530912299c08436d7bcea20f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMMWork</type>
      <name>hmmwrk</name>
      <anchorfile>struct____process__am____.html</anchorfile>
      <anchor>a5b619ac3991985f932bb3e9e81df75cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __process_am__ *</type>
      <name>next</name>
      <anchorfile>struct____process__am____.html</anchorfile>
      <anchor>a13593ab801b8a3d529345050a539bd62</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__process_lm__</name>
    <filename>struct____process__lm____.html</filename>
    <member kind="variable">
      <type>JCONF_LM *</type>
      <name>config</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>a1f5f223ae6a8572455f04a2555777fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PROCESS_AM *</type>
      <name>am</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>afc4e73d75e7769c6184e2bea86504b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lmtype</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>a2a7c2d58fc0f409b58fcac63719bcb79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lmvar</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>abf037af2376aa0f86cc91feb16d84ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_INFO *</type>
      <name>winfo</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>a910e98fe083aae66c77e55d8a70fff5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NGRAM_INFO *</type>
      <name>ngram</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>a2152734a856658a6c793c6a1835ec83f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MULTIGRAM *</type>
      <name>grammars</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>a992082c85e1d09450d7bd12957fb0bde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gram_maxid</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>a6b3a516a47f9de046c3f903dfb05d743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DFA_INFO *</type>
      <name>dfa</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>a91fd6439c829af87c89f5805861a25e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>global_modified</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>ab98ce2f0ecebeebb0d93b99394bac69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LMFunc</type>
      <name>lmfunc</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>a999c5c718c734c8caf0472aab03e6e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __process_lm__ *</type>
      <name>next</name>
      <anchorfile>struct____process__lm____.html</anchorfile>
      <anchor>ac711f70ab0536a6abac3d69d973a0f49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__RealBeam__</name>
    <filename>struct____RealBeam____.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>maxframelen</name>
      <anchorfile>struct____RealBeam____.html</anchorfile>
      <anchor>a1e6e252303a8e0887c5a236abba9ec7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SP16 *</type>
      <name>window</name>
      <anchorfile>struct____RealBeam____.html</anchorfile>
      <anchor>accb684d7fb859afebbae5d7610d7e5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>windowlen</name>
      <anchorfile>struct____RealBeam____.html</anchorfile>
      <anchor>a679a990c92fd48642031369e0f4c63d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>windownum</name>
      <anchorfile>struct____RealBeam____.html</anchorfile>
      <anchor>a913687a62349cc382f42430cbdcffbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>last_is_segmented</name>
      <anchorfile>struct____RealBeam____.html</anchorfile>
      <anchor>a6fce2f40475c0ca31b9304863a2cb017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SP16 *</type>
      <name>rest_Speech</name>
      <anchorfile>struct____RealBeam____.html</anchorfile>
      <anchor>acf3b21547b421ba04f46c85a0fdbbd8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rest_alloc_len</name>
      <anchorfile>struct____RealBeam____.html</anchorfile>
      <anchor>a87ad61daa7f81db33b4bee31b1eeb863</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rest_len</name>
      <anchorfile>struct____RealBeam____.html</anchorfile>
      <anchor>a1e843745ae36b4235a250d0223cf8236</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__Recog__</name>
    <filename>struct____Recog____.html</filename>
    <member kind="variable">
      <type>Jconf *</type>
      <name>jconf</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>ada62b4548cfb65430bdf5ee6e4e296ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADIn *</type>
      <name>adin</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a7e3e628f74eed32c829031df9adcabbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RealBeam</type>
      <name>real</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a05266e84bd6f4bc47cc5c4c82b3cf254</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MFCCCalc *</type>
      <name>mfcclist</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>ae2a73b9ea9b08cc99204896904609a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PROCESS_AM *</type>
      <name>amlist</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a3fe15037a1cde0f6c2f200e8c7f8e451</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PROCESS_LM *</type>
      <name>lmlist</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a29fcddda98e0435132ef6da529f3e651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RecogProcess *</type>
      <name>process_list</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>ace75f9d4efaece91ff17e7d2fd13ade4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>process_segment</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a479d824aba9b5b4485be9789d30e1e60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SP16 *</type>
      <name>speech</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a7cd5103005732758ad1662b5c794d452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>speechalloclen</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>aef95e5ff392916292b0d67c786a71378</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>speechlen</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>ab737eea6c0e26b4f51f7343497306a8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>peseqlen</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a16504f779a6560c5f5974c8c150d1cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_INFO *</type>
      <name>gmm</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a41e371bf5398d04a40d3e4298bd4eb7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MFCCCalc *</type>
      <name>gmmmfcc</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a9ee540173e8d94c501475353914a8cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GMMCalc *</type>
      <name>gc</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>ac3bc2224082aa12605f43fd004e9dda9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>process_active</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a8aa9304f1bc0bc1e9064ef778c2d46ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>process_want_terminate</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a5568bf9627f92ac2b7d10c077d8bbb44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>process_want_reload</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>aedca51d859b9803bf2e10b6b9df9f669</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>gram_switch_input_method</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a0d0dc25c218b0521b1ca4afa5ed4387c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>process_online</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a48ae27aa0562841325066a6fcd53c573</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean(*</type>
      <name>calc_vector</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a73be8c5fed4ef7ad71a94571ffe9aba9</anchor>
      <arglist>)(MFCCCalc *, SP16 *, int)</arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>triggered</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a967f43e3df86f0f6899548412257627b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>callback_function</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>ac6f8ae1a0c939c890ef278590fa28db0</anchor>
      <arglist>[SIZEOF_CALLBACK_ID][MAX_CALLBACK_HOOK])()</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>callback_user_data</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a3a1259e5abaa616ccb2a3f8fed1a1146</anchor>
      <arglist>[SIZEOF_CALLBACK_ID][MAX_CALLBACK_HOOK]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>callback_function_num</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a970d0471b4e7b7e1f82b5868d9965fc0</anchor>
      <arglist>[SIZEOF_CALLBACK_ID]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>callback_list_code</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>aaea0bcb23f6a7555a61f34a2c354050d</anchor>
      <arglist>[MAX_CALLBACK_HOOK *SIZEOF_CALLBACK_ID]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>callback_list_loc</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a02ea917fe1e25d927cbc92f552e4f235</anchor>
      <arglist>[MAX_CALLBACK_HOOK *SIZEOF_CALLBACK_ID]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>callback_num</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a402ca945d967a7b513535c2bf1814f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>hook</name>
      <anchorfile>struct____Recog____.html</anchorfile>
      <anchor>a999a9d066960f50acff2921db527cd22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__recogprocess__</name>
    <filename>struct____recogprocess____.html</filename>
    <member kind="variable">
      <type>boolean</type>
      <name>live</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a500679a5644dc88ac7dbe24d3faec8ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>active</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>ab6f8810ced68ec353e1aa07cef7f4592</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JCONF_SEARCH *</type>
      <name>config</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a79d2300d338f706acdcc72f0d78b914e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PROCESS_AM *</type>
      <name>am</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>ac4459d45419a60840024f6ff34f3fc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PROCESS_LM *</type>
      <name>lm</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a6290f115e863841fbd5ad3036f11be15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lmtype</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a6ccd1d43d4f078ceb9b53e6b2272aa04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lmvar</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>ae694d31b05b76e79bcb4bf172c0b7792</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>ccd_flag</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>aa2e5f560be582861d4b9145661dfea7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WCHMM_INFO *</type>
      <name>wchmm</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a18d2bc791c857c0739b41a5186295387</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>trellis_beam_width</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a7327e448f4032043d8f4d07dd0f5f15c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BACKTRELLIS *</type>
      <name>backtrellis</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a8f328bcabbe38720a0a6cffde90a8aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FSBeam</type>
      <name>pass1</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a3959dfd4476eb50cea243b3c676d775a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StackDecode</type>
      <name>pass2</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>abda947ea0293613852e476198a7e793a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>pass1_wseq</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a58509c7a3f26df0f39037cd5ce6321d4</anchor>
      <arglist>[MAXSEQNUM]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pass1_wnum</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a122c9ab4e930bd82aa202efd232ce60d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>pass1_score</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a662462fae4f68e4041265b15dbc11f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>sp_break_last_word</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>adbeac78f8e2e5a8ab49f4ce43eb22d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>sp_break_last_nword</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a76a574a2ad1fa49867b404b7eb82d5c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>sp_break_last_nword_allow_override</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a993da5fb2a11831951c2e97493c395a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>sp_break_2_begin_word</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a0ef7068455e314b9ead343211f0f40bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>sp_break_2_end_word</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a018cdbda78cfb159f4c9c225cecc0483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>peseqlen</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a04ac1c182907a87881570f8ba7879bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>graph_totalwordnum</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>aa71adf9721e55f7b1bddefd97d4f731e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Output</type>
      <name>result</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a33d8f726afd85992b829c71e1276baa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>graphout</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a48ad745e8be54b19f8cb8bf031a8aa33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>order_matrix</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a1c9ea645b05d0a3a742f5629c5da2963</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>order_matrix_count</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a222e8d76e020c3f1c197970e3dc4b919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>have_interim</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a3bb1029719f54ab20ea45cfca773316d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>hook</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a45ac848282b8620dc82a9e3b6072b142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __recogprocess__ *</type>
      <name>next</name>
      <anchorfile>struct____recogprocess____.html</anchorfile>
      <anchor>a23afc740362d1e0ae889a596e60f5a9f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__sentence__</name>
    <filename>struct____sentence____.html</filename>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>word</name>
      <anchorfile>struct____sentence____.html</anchorfile>
      <anchor>a4e79ee14492863c606cfc2a282b20c1d</anchor>
      <arglist>[MAXSEQNUM]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>word_num</name>
      <anchorfile>struct____sentence____.html</anchorfile>
      <anchor>a36a3dbb029b0aa506c7385c3401eb225</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>score</name>
      <anchorfile>struct____sentence____.html</anchorfile>
      <anchor>af70183e3b5746bb9ebdab830b91f2b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>confidence</name>
      <anchorfile>struct____sentence____.html</anchorfile>
      <anchor>acdcb1991751ba83933aaa6a2e530df7e</anchor>
      <arglist>[MAXSEQNUM]</arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>score_lm</name>
      <anchorfile>struct____sentence____.html</anchorfile>
      <anchor>ada1e08ec33c4ee9c62aa006a9caf7610</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>score_am</name>
      <anchorfile>struct____sentence____.html</anchorfile>
      <anchor>a7916743ee3719ba8b60aa80f1316804c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>gram_id</name>
      <anchorfile>struct____sentence____.html</anchorfile>
      <anchor>ab0596bce8980b14f152cf5a4b63757c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__sentence_align__</name>
    <filename>struct____sentence__align____.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>num</name>
      <anchorfile>struct____sentence__align____.html</anchorfile>
      <anchor>a2e01deb19e01af657c9c1e3815955817</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>unittype</name>
      <anchorfile>struct____sentence__align____.html</anchorfile>
      <anchor>afd70cc6880fc66d9c98b13ed9b50c0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID *</type>
      <name>w</name>
      <anchorfile>struct____sentence__align____.html</anchorfile>
      <anchor>aed9b747ce6c1c1bce8a2b05e8933af3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMM_Logical **</type>
      <name>ph</name>
      <anchorfile>struct____sentence__align____.html</anchorfile>
      <anchor>a54d5c8c8fc4c625988a7ec4c69e3b947</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short *</type>
      <name>loc</name>
      <anchorfile>struct____sentence__align____.html</anchorfile>
      <anchor>a0b6c6c2f7954598e206b4010bbd7636a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean *</type>
      <name>is_iwsp</name>
      <anchorfile>struct____sentence__align____.html</anchorfile>
      <anchor>ae140b93a05a8fd227765ff65f1084525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>begin_frame</name>
      <anchorfile>struct____sentence__align____.html</anchorfile>
      <anchor>a4048ad9a17cae540cacbce0225d4bfff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>end_frame</name>
      <anchorfile>struct____sentence__align____.html</anchorfile>
      <anchor>a0154c8c42e597bd635217be1c9d1fbb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>avgscore</name>
      <anchorfile>struct____sentence__align____.html</anchorfile>
      <anchor>a879acd4ab69176319624685212727a43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>allscore</name>
      <anchorfile>struct____sentence__align____.html</anchorfile>
      <anchor>ac5c4fd3907515c642a40b65db14c4fe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __sentence_align__ *</type>
      <name>next</name>
      <anchorfile>struct____sentence__align____.html</anchorfile>
      <anchor>a156e8c20b81dbc1302d5c2ce2ef1f2d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__StackDecode__</name>
    <filename>struct____StackDecode____.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>hypo_len_count</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>ac63212cb0aa5d43523e3cd6903b0f272</anchor>
      <arglist>[MAXSEQNUM+1]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maximum_filled_length</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>a71e2cd83a40c95e240c318c7ba76b6c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NODE *</type>
      <name>stocker_root</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>a8285fff64ddb753412cf239bbbf10027</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>popctr</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>a09ec4e7ac5bc09e31f8d0254861f6f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>genectr</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>a3083cc7b90ccc184cb20fc8a082d3049</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pushctr</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>a83e6af66c72ff9a303b518440b9540ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>finishnum</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>a5cff63d80f18efb182d2a48d3909b43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NODE *</type>
      <name>current</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>aa515313d8d3e92011d79e27d6b03f944</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>wordtrellis</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>aea838d547b7b3fff9122de2584468ab1</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>g</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>ac87fe5719729a1ea1ff128846e74ea2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMM_Logical **</type>
      <name>phmmseq</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>a26dbd4c7c9bdc711086aa42bc947d7fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>phmmlen_max</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>aa96695688dd9a1359414b5440011c9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean *</type>
      <name>has_sp</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>ab351c4ca2fc5a174fdd9408c5d0c234e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID *</type>
      <name>cnword</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>adba3bddb651a06d63fb9535c4624294f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID *</type>
      <name>cnwordrev</name>
      <anchorfile>struct____StackDecode____.html</anchorfile>
      <anchor>ad75e76f70fc22a9e44a50bd036ad08ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__stateq__</name>
    <filename>struct____stateq____.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>s</name>
      <anchorfile>struct____stateq____.html</anchorfile>
      <anchor>aa3c30b10b1b39f6fd0fa0e61c5efa212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>len</name>
      <anchorfile>struct____stateq____.html</anchorfile>
      <anchor>a26affeaa82ffe9faaf0273583f070667</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>checked</name>
      <anchorfile>struct____stateq____.html</anchorfile>
      <anchor>a5a3733e0be63f6c155abe8724e602fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ac</name>
      <anchorfile>struct____stateq____.html</anchorfile>
      <anchor>a19387c40d399ceb901d06b132b2da12d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start</name>
      <anchorfile>struct____stateq____.html</anchorfile>
      <anchor>a6861b6ed3a8c2853212bf3deb7cfbf2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>end</name>
      <anchorfile>struct____stateq____.html</anchorfile>
      <anchor>ad5b60899ba6bf7b0e2f64bd4142947de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>struct____stateq____.html</anchorfile>
      <anchor>abdd6b5aaaf33eb26c7ce5c973a8bbfa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __stateq__ *</type>
      <name>next</name>
      <anchorfile>struct____stateq____.html</anchorfile>
      <anchor>ab6c74ea880231f5b0fb8c738b729e3f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__trellis_atom__</name>
    <filename>struct____trellis__atom____.html</filename>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>backscore</name>
      <anchorfile>struct____trellis__atom____.html</anchorfile>
      <anchor>ac3f39cb67575aa439c4f930ac0d3eaa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lscore</name>
      <anchorfile>struct____trellis__atom____.html</anchorfile>
      <anchor>acc6424d26dd66d8da0fd8350a62915d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>wid</name>
      <anchorfile>struct____trellis__atom____.html</anchorfile>
      <anchor>afa1921134d3dc5944b6e12d61269f6b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>begintime</name>
      <anchorfile>struct____trellis__atom____.html</anchorfile>
      <anchor>af4347d4993ecd54e1b818b030076f4b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>endtime</name>
      <anchorfile>struct____trellis__atom____.html</anchorfile>
      <anchor>ad1498dd0c5ec6dea874afdcf77ae970b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __trellis_atom__ *</type>
      <name>last_tre</name>
      <anchorfile>struct____trellis__atom____.html</anchorfile>
      <anchor>a319151525fd6e239cd43bda4e237af43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __trellis_atom__ *</type>
      <name>next</name>
      <anchorfile>struct____trellis__atom____.html</anchorfile>
      <anchor>af8186d7fdcf967542f0fce85e9789338</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>__word_graph__</name>
    <filename>struct____word__graph____.html</filename>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>wid</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a9a09b2f19d3f38a4f1846f6021a58f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lefttime</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>afbf621868374f26231ca84a87e04edfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>righttime</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a1828f7b6420f68c2cdfddfcdf154da58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>fscore_head</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a721d7f1aae8a79d820e7eb0a2b202ee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>fscore_tail</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>ab5592db045cd8e48b23e2d2406227e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>gscore_head</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a9093ca41c66bcb8a9e4e142395aacef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>gscore_tail</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>ad18218a86d3d6c9a58266d31dd5cfbf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>lscore_tmp</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>aceb5313ac713fe295e629e47de6fa46b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>forward_score</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>ab11eec772241ab83439053e3f3580f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>backward_score</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a11ba888c497ad8f87cfb92bde09c30f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>amavg</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a271f967187096de97d54e8e2b2db72bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMM_Logical *</type>
      <name>headphone</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>af1ecaa20d4629f778bb35d32477a8b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMM_Logical *</type>
      <name>tailphone</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a722429cec1389ae9eb0edd93b7ac083f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __word_graph__ **</type>
      <name>leftword</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a3d36002c95bcee215cc28e72a9c69e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>left_lscore</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a0646ef7d3dd1142088d9d144329716b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>leftwordnum</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a267599407e9cd10e4c06754da57504fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>leftwordmaxnum</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>aec11087ecd4813829a766287aeb75bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __word_graph__ **</type>
      <name>rightword</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a81bf7fdebeeaacba0bb2824b6fd5c560</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>right_lscore</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>aefba885b554e3d6b524f7ec861cc14a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rightwordnum</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>ab24620779458371278ca23df1efd6034</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rightwordmaxnum</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>aac21dd30bfcde6a33572e16ce6222773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct __word_graph__ *</type>
      <name>next</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>ab25565c6c9e24db85ab2762adb658e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>mark</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a4cad1b64db5832c2737d9f6a5ef0c854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>ad889bb454e60e2b47ada186ad41c604e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>saved</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>ad623053573d10b9cb9e5e98ec3118a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>graph_cm</name>
      <anchorfile>struct____word__graph____.html</anchorfile>
      <anchor>a544ec292e510be8140b41e8573fed129</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_a_cell</name>
    <filename>struct__a__cell.html</filename>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>a</name>
      <anchorfile>struct__a__cell.html</anchorfile>
      <anchor>a859cea1ed1edcb1b29cedce22a40567f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>arc</name>
      <anchorfile>struct__a__cell.html</anchorfile>
      <anchor>ada74c15697799a40f97e96ee4a832a16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _a_cell *</type>
      <name>next</name>
      <anchorfile>struct__a__cell.html</anchorfile>
      <anchor>aeb1f8fc55b1adafdabaff8aa5357ee89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_apatnode</name>
    <filename>struct__apatnode.html</filename>
    <member kind="variable">
      <type>struct _apatnode *</type>
      <name>left0</name>
      <anchorfile>struct__apatnode.html</anchorfile>
      <anchor>ad852fe5f52bfe3746d92d327934e754f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _apatnode *</type>
      <name>right1</name>
      <anchorfile>struct__apatnode.html</anchorfile>
      <anchor>ae411a4a9ef1d9eb3b033266441bb0455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>data</name>
      <anchorfile>struct__apatnode.html</anchorfile>
      <anchor>af38004db7040114dedc41eebfe426269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>thres_bit</name>
      <anchorfile>struct__apatnode.html</anchorfile>
      <anchor>a3255227b7a8d0062f801353175ea206a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_bmalloc_base</name>
    <filename>struct__bmalloc__base.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>base</name>
      <anchorfile>struct__bmalloc__base.html</anchorfile>
      <anchor>aa316a3903937e212096cb920a67bca85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>now</name>
      <anchorfile>struct__bmalloc__base.html</anchorfile>
      <anchor>a840db32c833492ee1c937c147247d043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>end</name>
      <anchorfile>struct__bmalloc__base.html</anchorfile>
      <anchor>a0860e274937bc15b5af2e3698eb2f3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _bmalloc_base *</type>
      <name>next</name>
      <anchorfile>struct__bmalloc__base.html</anchorfile>
      <anchor>a0c7f2b27162c5f0fbe7175bf965b2bb2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_cd_set</name>
    <filename>struct__cd__set.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>struct__cd__set.html</anchorfile>
      <anchor>adea03c110815279604ffa6d27b1290bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CD_State_Set *</type>
      <name>stateset</name>
      <anchorfile>struct__cd__set.html</anchorfile>
      <anchor>a292920c051f84e4f4ea7c6042e2883bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>state_num</name>
      <anchorfile>struct__cd__set.html</anchorfile>
      <anchor>afe2a0b647cfaa793c3dd83f8599ac2de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_Trans *</type>
      <name>tr</name>
      <anchorfile>struct__cd__set.html</anchorfile>
      <anchor>a1830467fe28b1d6b4362c72a8d72115f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _cd_set *</type>
      <name>next</name>
      <anchorfile>struct__cd__set.html</anchorfile>
      <anchor>a2b045bb11db255aa68bdf33a4f515256</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_dfa_arc</name>
    <filename>struct__dfa__arc.html</filename>
    <member kind="variable">
      <type>short</type>
      <name>label</name>
      <anchorfile>struct__dfa__arc.html</anchorfile>
      <anchor>a6719ed80adc115170c1682a7b751e744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>to_state</name>
      <anchorfile>struct__dfa__arc.html</anchorfile>
      <anchor>ae383053f9f3650631fa33bdd7b6e341a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _dfa_arc *</type>
      <name>next</name>
      <anchorfile>struct__dfa__arc.html</anchorfile>
      <anchor>a25d865bf35d873d9136b0c23a979c339</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_HMM_logical</name>
    <filename>struct__HMM__logical.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>struct__HMM__logical.html</anchorfile>
      <anchor>a399226ab1bccf2ea3da1e67bf1fc7c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>is_pseudo</name>
      <anchorfile>struct__HMM__logical.html</anchorfile>
      <anchor>a711ef8a6fe08535fd9a296eed0898eac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _HMM_logical *</type>
      <name>next</name>
      <anchorfile>struct__HMM__logical.html</anchorfile>
      <anchor>a09e194da31c8d665f2edc1d4829b5a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_Data *</type>
      <name>defined</name>
      <anchorfile>struct__HMM__logical.html</anchorfile>
      <anchor>ac84232d2bbc0a22da751d3ee600f9f55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CD_Set *</type>
      <name>pseudo</name>
      <anchorfile>struct__HMM__logical.html</anchorfile>
      <anchor>a78f95981a091c09b28dcc9f91277091e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_HTK_HMM_data</name>
    <filename>struct__HTK__HMM__data.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>struct__HTK__HMM__data.html</anchorfile>
      <anchor>af798dce40e96c2a3e33152ea30396dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>state_num</name>
      <anchorfile>struct__HTK__HMM__data.html</anchorfile>
      <anchor>a64c1de8b0601c54d10c351dd1c532ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_State **</type>
      <name>s</name>
      <anchorfile>struct__HTK__HMM__data.html</anchorfile>
      <anchor>a76741030b3c170baf72819510f11002c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_Trans *</type>
      <name>tr</name>
      <anchorfile>struct__HTK__HMM__data.html</anchorfile>
      <anchor>a5088996dffd058f53a39258d503b9eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _HTK_HMM_data *</type>
      <name>next</name>
      <anchorfile>struct__HTK__HMM__data.html</anchorfile>
      <anchor>a1438170258ea0f72fd1f0812ce3d8134</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_HTK_HMM_dens</name>
    <filename>struct__HTK__HMM__dens.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>struct__HTK__HMM__dens.html</anchorfile>
      <anchor>a0c750a8a73060b26a7a9bbcf951f792b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECT *</type>
      <name>mean</name>
      <anchorfile>struct__HTK__HMM__dens.html</anchorfile>
      <anchor>af93944192c30fad76f7ff3939198649b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>meanlen</name>
      <anchorfile>struct__HTK__HMM__dens.html</anchorfile>
      <anchor>a47b6a1fdba88cfec372fa47146321d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_Var *</type>
      <name>var</name>
      <anchorfile>struct__HTK__HMM__dens.html</anchorfile>
      <anchor>ae6d3692626a8c99b95eedcfb736caf99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>gconst</name>
      <anchorfile>struct__HTK__HMM__dens.html</anchorfile>
      <anchor>a7dbdf0ba0afc589caf1009be93c9aa84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _HTK_HMM_dens *</type>
      <name>next</name>
      <anchorfile>struct__HTK__HMM__dens.html</anchorfile>
      <anchor>a830bad9f28c849850c417a3a3f2c95a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_HTK_HMM_PDF</name>
    <filename>struct__HTK__HMM__PDF.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>struct__HTK__HMM__PDF.html</anchorfile>
      <anchor>aaf4595f2f96a5596a4dd07c9e0c208ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>tmix</name>
      <anchorfile>struct__HTK__HMM__PDF.html</anchorfile>
      <anchor>a0b203ecd8cc208d749ca5f94859c13f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>stream_id</name>
      <anchorfile>struct__HTK__HMM__PDF.html</anchorfile>
      <anchor>a902378a019f5ffa8b0142d8239fa20af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>mix_num</name>
      <anchorfile>struct__HTK__HMM__PDF.html</anchorfile>
      <anchor>ae8c9823a8ae71b1bdb813e2f30a9a39d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_Dens **</type>
      <name>b</name>
      <anchorfile>struct__HTK__HMM__PDF.html</anchorfile>
      <anchor>a4d8716ff11fa72792894b23364b6c0d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PROB *</type>
      <name>bweight</name>
      <anchorfile>struct__HTK__HMM__PDF.html</anchorfile>
      <anchor>abfa7ff07af053da1910439b3bd82a0ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _HTK_HMM_PDF *</type>
      <name>next</name>
      <anchorfile>struct__HTK__HMM__PDF.html</anchorfile>
      <anchor>a8448e8fb8198a2919bab9fc1bfaf0afe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_HTK_HMM_state</name>
    <filename>struct__HTK__HMM__state.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>struct__HTK__HMM__state.html</anchorfile>
      <anchor>a2c7e776a68e2766b8d2a923922e6cf46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>nstream</name>
      <anchorfile>struct__HTK__HMM__state.html</anchorfile>
      <anchor>af20184a391c49c967942d86251a9f436</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_StreamWeight *</type>
      <name>w</name>
      <anchorfile>struct__HTK__HMM__state.html</anchorfile>
      <anchor>a237254d0fffff4b781ff88d0bc845c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_PDF **</type>
      <name>pdf</name>
      <anchorfile>struct__HTK__HMM__state.html</anchorfile>
      <anchor>a54dba0784ceb32a0f02ad9d9e47c3643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>struct__HTK__HMM__state.html</anchorfile>
      <anchor>ac0d89f81d74c7bf281aa4440bf6880aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _HTK_HMM_state *</type>
      <name>next</name>
      <anchorfile>struct__HTK__HMM__state.html</anchorfile>
      <anchor>a91da09740f6122af95b98de5e48cbb20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_HTK_HMM_stream_weight</name>
    <filename>struct__HTK__HMM__stream__weight.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>struct__HTK__HMM__stream__weight.html</anchorfile>
      <anchor>a9dad2dca6b03f173d151351a8ea10a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECT *</type>
      <name>weight</name>
      <anchorfile>struct__HTK__HMM__stream__weight.html</anchorfile>
      <anchor>ad3424fa7afcd893e9881c8f0b13db6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>len</name>
      <anchorfile>struct__HTK__HMM__stream__weight.html</anchorfile>
      <anchor>a7ce561e821338942868e718f9e8b73b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _HTK_HMM_stream_weight *</type>
      <name>next</name>
      <anchorfile>struct__HTK__HMM__stream__weight.html</anchorfile>
      <anchor>adef3c50bfde94df4142563c8dc9d2c6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_HTK_HMM_trans</name>
    <filename>struct__HTK__HMM__trans.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>struct__HTK__HMM__trans.html</anchorfile>
      <anchor>a85a632cd20dc7ad5033bde4d3cab67e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>statenum</name>
      <anchorfile>struct__HTK__HMM__trans.html</anchorfile>
      <anchor>a40d2438e0513e0694e727fdc6c1705ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PROB **</type>
      <name>a</name>
      <anchorfile>struct__HTK__HMM__trans.html</anchorfile>
      <anchor>aa864b1058df142a487c232ae0db4f1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _HTK_HMM_trans *</type>
      <name>next</name>
      <anchorfile>struct__HTK__HMM__trans.html</anchorfile>
      <anchor>a663222267af82a49bdd53150ea831319</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_HTK_HMM_variance</name>
    <filename>struct__HTK__HMM__variance.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>struct__HTK__HMM__variance.html</anchorfile>
      <anchor>aa4176b641dcd32a6930109cc43988993</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECT *</type>
      <name>vec</name>
      <anchorfile>struct__HTK__HMM__variance.html</anchorfile>
      <anchor>a11e45fce271854024f51e1a850e0d828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>len</name>
      <anchorfile>struct__HTK__HMM__variance.html</anchorfile>
      <anchor>a6b15eec3417e7669f274dd2c0e8af975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _HTK_HMM_variance *</type>
      <name>next</name>
      <anchorfile>struct__HTK__HMM__variance.html</anchorfile>
      <anchor>a06868f6af563de6c7fe2c0556444b195</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_patnode</name>
    <filename>struct__patnode.html</filename>
    <member kind="variable">
      <type>struct _patnode *</type>
      <name>left0</name>
      <anchorfile>struct__patnode.html</anchorfile>
      <anchor>aab6fa9f61307b54119469ffb5e07e175</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _patnode *</type>
      <name>right1</name>
      <anchorfile>struct__patnode.html</anchorfile>
      <anchor>aa4c26dbbc9045281ac0cc34867adb7dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>data</name>
      <anchorfile>struct__patnode.html</anchorfile>
      <anchor>a7b4ff22d682c56148cda95e9df7d9c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>thres_bit</name>
      <anchorfile>struct__patnode.html</anchorfile>
      <anchor>a7a17059cabd38be71ec5b9efa1a7c50c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_seg_token</name>
    <filename>struct__seg__token.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>last_id</name>
      <anchorfile>struct__seg__token.html</anchorfile>
      <anchor>a87123211484ab5f1c79c77979ceb7fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>last_end_frame</name>
      <anchorfile>struct__seg__token.html</anchorfile>
      <anchor>a6ccce9707430e28c04056c3a0838e829</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>last_end_score</name>
      <anchorfile>struct__seg__token.html</anchorfile>
      <anchor>ae6054fc56f1b8b119e73974efdb7435b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _seg_token *</type>
      <name>next</name>
      <anchorfile>struct__seg__token.html</anchorfile>
      <anchor>a90e2eb95bccd1e9d2228b94d7c22b392</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct _seg_token *</type>
      <name>list</name>
      <anchorfile>struct__seg__token.html</anchorfile>
      <anchor>a4ed0369a8e9e71ddf25b89f39f294175</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ActiveWindow</name>
    <filename>classActiveWindow.html</filename>
    <base>Condition</base>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>name</name>
      <anchorfile>classActiveWindow.html</anchorfile>
      <anchor>af4d930ae708d073609b152432cfa2620</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AddServerConnection</name>
    <filename>classAddServerConnection.html</filename>
  </compound>
  <compound kind="class">
    <name>AddWordIntroPage</name>
    <filename>classAddWordIntroPage.html</filename>
    <member kind="function">
      <type></type>
      <name>AddWordIntroPage</name>
      <anchorfile>classAddWordIntroPage.html</anchorfile>
      <anchor>a3190e28be08c286e194de8c5159fb508</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AddWordRecordPage</name>
    <filename>classAddWordRecordPage.html</filename>
    <member kind="function">
      <type>void</type>
      <name>initializePage</name>
      <anchorfile>classAddWordRecordPage.html</anchorfile>
      <anchor>a760a1e1aecc7b98319557be140ca45c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AddWordRecordPage</name>
      <anchorfile>classAddWordRecordPage.html</anchorfile>
      <anchor>a915c6959951f687f98327fec8c1eda09</anchor>
      <arglist>(const QString &amp;fieldName, int pageNr, int pageMax, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AddWordRecordPage</name>
      <anchorfile>classAddWordRecordPage.html</anchorfile>
      <anchor>aa5497b97dfe8b30b2f8bd882d18f2c99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AddWordResolvePage</name>
    <filename>classAddWordResolvePage.html</filename>
    <member kind="function">
      <type></type>
      <name>AddWordResolvePage</name>
      <anchorfile>classAddWordResolvePage.html</anchorfile>
      <anchor>a432c74d465e09ededf7f84e340705b69</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializePage</name>
      <anchorfile>classAddWordResolvePage.html</anchorfile>
      <anchor>a4290a991ad97cd1b68d88569cbf8c985</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>displayWords</name>
      <anchorfile>classAddWordResolvePage.html</anchorfile>
      <anchor>ad9eedbad178caf67c3ce690331f62327</anchor>
      <arglist>(QList&lt; Word * &gt; words)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AddWordView</name>
    <filename>classAddWordView.html</filename>
    <member kind="slot">
      <type>AddWordIntroPage *</type>
      <name>createWelcomePage</name>
      <anchorfile>classAddWordView.html</anchorfile>
      <anchor>a625f708863622619c4c9ee540ec6763e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>AddWordRecordPage *</type>
      <name>createRecordPage</name>
      <anchorfile>classAddWordView.html</anchorfile>
      <anchor>a8851fe63c0f37a5744165b2ae60e0847</anchor>
      <arglist>(const QString &amp;fieldName, int pageNr, int pageMax)</arglist>
    </member>
    <member kind="slot">
      <type>AddWordResolvePage *</type>
      <name>createResolvePage</name>
      <anchorfile>classAddWordView.html</anchorfile>
      <anchor>a56b63706c637c0c8335973d5e8b9b8a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QWizardPage *</type>
      <name>createFinishedPage</name>
      <anchorfile>classAddWordView.html</anchorfile>
      <anchor>a64386d190454b2813b6dd65f02441d75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>addWords</name>
      <anchorfile>classAddWordView.html</anchorfile>
      <anchor>aa944dc4c956d470c78bc30a419a4b7da</anchor>
      <arglist>(QStringList words)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AddWordView</name>
      <anchorfile>classAddWordView.html</anchorfile>
      <anchor>a98f9c3b6e3d80b847703355c0a6257b3</anchor>
      <arglist>(Vocabulary *vocab=0, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createWord</name>
      <anchorfile>classAddWordView.html</anchorfile>
      <anchor>a09ec0394654c72382b26a2a40d62ceed</anchor>
      <arglist>(QString word)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AICommandManager</name>
    <filename>classAICommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classAICommandManager.html</anchorfile>
      <anchor>a294a9e33238bba75ddf7d21b06f00577</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classAICommandManager.html</anchorfile>
      <anchor>a874449e8c6ff8563eae31f00549f9007</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classAICommandManager.html</anchorfile>
      <anchor>a1e222373ad0bc9fb359dca7a9c1f1360</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addCommandPrivate</name>
      <anchorfile>classAICommandManager.html</anchorfile>
      <anchor>ad05f9cbb397780d86e644ec7308d0e32</anchor>
      <arglist>(Command *)</arglist>
    </member>
    <member kind="function">
      <type>CommandConfiguration *</type>
      <name>getConfigurationPage</name>
      <anchorfile>classAICommandManager.html</anchorfile>
      <anchor>a9cc442120bc798dc7f35c1f243695915</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AICommandManager</name>
      <anchorfile>classAICommandManager.html</anchorfile>
      <anchor>a2b1869b62a7c49b404ea85502a2462db</anchor>
      <arglist>(QObject *parentScenario, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>trigger</name>
      <anchorfile>classAICommandManager.html</anchorfile>
      <anchor>a2e3ed77a4b43f09037c29eb18efb26e6</anchor>
      <arglist>(const QString &amp;triggerName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ATBackend</name>
    <filename>classATBackend.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>objectFound</name>
      <anchorfile>classATBackend.html</anchorfile>
      <anchor>a6385b6c9871d6e003052f7c031a693be</anchor>
      <arglist>(ATObject *widgets)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ATObject</name>
    <filename>classATObject.html</filename>
  </compound>
  <compound kind="class">
    <name>ATWatcher</name>
    <filename>classATWatcher.html</filename>
    <member kind="slot">
      <type>bool</type>
      <name>trigger</name>
      <anchorfile>classATWatcher.html</anchorfile>
      <anchor>ac80765ccd943b526a72461286dc850f7</anchor>
      <arglist>(const QString &amp;word)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applySettings</name>
      <anchorfile>classATWatcher.html</anchorfile>
      <anchor>a7c56c330c36752d2a9d27f4b3010e19f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BASEPHONE</name>
    <filename>structBASEPHONE.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structBASEPHONE.html</anchorfile>
      <anchor>ac903be65acc4bb3bdcfcbdf7a2cfe6ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>bgnflag</name>
      <anchorfile>structBASEPHONE.html</anchorfile>
      <anchor>ad4a3a755c1df016e8148a18f1cbd12d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>endflag</name>
      <anchorfile>structBASEPHONE.html</anchorfile>
      <anchor>ad4d126b744cd0b414e15b0958c0f6fed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BOMPDict</name>
    <filename>classBOMPDict.html</filename>
    <base>Dict</base>
    <member kind="function">
      <type></type>
      <name>BOMPDict</name>
      <anchorfile>classBOMPDict.html</anchorfile>
      <anchor>a9f2c16dab79cd3e5575f8e3d4c789aaa</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classBOMPDict.html</anchorfile>
      <anchor>afdc26071f88bef3c5b2c3a4343a864d8</anchor>
      <arglist>(QString path, QString encodingName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CalculatorCommandManager</name>
    <filename>classCalculatorCommandManager.html</filename>
    <base>CommandManager</base>
    <base>GreedyReceiver</base>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classCalculatorCommandManager.html</anchorfile>
      <anchor>a58fd4d6ca9e9ef942931c3bd34e32656</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classCalculatorCommandManager.html</anchorfile>
      <anchor>a273a58d92e16acf3fe8b6f6cc0acd5d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classCalculatorCommandManager.html</anchorfile>
      <anchor>a542a32132b07245fa9a078eeb922263b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classCalculatorCommandManager.html</anchorfile>
      <anchor>a0b8acea8a758081fd8ee22f645bd2c88</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classCalculatorCommandManager.html</anchorfile>
      <anchor>a737d98c21c2251596514ef2eb07fc004</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CalculatorCommandManager</name>
      <anchorfile>classCalculatorCommandManager.html</anchorfile>
      <anchor>a57d83df92be534fe789ac3da727cc75b</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CD_State_Set</name>
    <filename>structCD__State__Set.html</filename>
    <member kind="variable">
      <type>HTK_HMM_State **</type>
      <name>s</name>
      <anchorfile>structCD__State__Set.html</anchorfile>
      <anchor>a8d1b77c320a5c24f1d3578c042c96786</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>num</name>
      <anchorfile>structCD__State__Set.html</anchorfile>
      <anchor>a8d0cf9095c7966c1216f9ba4ab309498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>maxnum</name>
      <anchorfile>structCD__State__Set.html</anchorfile>
      <anchor>a24fe9dd81a0942d436719a9fc0b21f7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CMEAN</name>
    <filename>structCMEAN.html</filename>
    <member kind="variable">
      <type>float *</type>
      <name>mfcc_sum</name>
      <anchorfile>structCMEAN.html</anchorfile>
      <anchor>ab0b9b2ed7a834caef0edfcc3369d072f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>mfcc_var</name>
      <anchorfile>structCMEAN.html</anchorfile>
      <anchor>a44c3519aab15c083a4849a12af256cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>framenum</name>
      <anchorfile>structCMEAN.html</anchorfile>
      <anchor>af9bc6a52b47846fd11e2f5473f286474</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CMNWork</name>
    <filename>structCMNWork.html</filename>
    <member kind="variable">
      <type>CMEAN *</type>
      <name>clist</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>a17fce8f22e9f56d275875f1951e20e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>clist_max</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>a028796ffe908408ab3331fe58e6942e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>clist_num</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>a21d735156243148c78a9ee2f4dca6a19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>cweight</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>ae5d98c6f07cc8ba25e5c7c748616a71d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>cmean_init</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>a5126ec63fe88138874bd66701ccbc11b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>cvar_init</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>a036a861f88c7fd00287173fb5fdd60c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mfcc_dim</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>a24977932022bc79c64752e123c118313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>veclen</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>a7a0109682f6924bc78e439e119b00814</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>mean</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>a42df0b7df7cf1f660fd8b03e00d42d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>var</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>a1969bb4aad18f5e3d5a8023a8fb5c4da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>cmean_init_set</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>a27a2767f944c749b8733b5df1dfc8063</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CMEAN</type>
      <name>now</name>
      <anchorfile>structCMNWork.html</anchorfile>
      <anchor>aa40c3688d5643e1ef0eed371128dde4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Command</name>
    <filename>classCommand.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setParent</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>afb363d7fb84981ea85cc9fe960059eb5</anchor>
      <arglist>(CommandManager *man)</arglist>
    </member>
    <member kind="function">
      <type>CommandManager *</type>
      <name>parent</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>adb415d4924fdefa5c00d8e7273a197bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a79a514c2c2b6aa9182b433ceaa638cd1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>aa56bb6fece98ec489aab08649ae5cedc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>matches</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a1c62254555a09b88888118ca9249a5aa</anchor>
      <arglist>(int commandManagerState, const QString &amp;trigger)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>trigger</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a8a0ef2b670d6f55d1455989330bef1e9</anchor>
      <arglist>(int *state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMap</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a754702b21eb41351f2f520e254d09d4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Command</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>adada50bd38548558774f463aa1ca8cf7</anchor>
      <arglist>(const QString &amp;name, const QString &amp;icon, const QString &amp;description_, int boundState_=SimonCommand::DefaultState, int newState_=SimonCommand::DefaultState, bool announce_=true)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getTrigger</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>ac098a52dce1d000761b738752cb12cda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBoundState</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a3414eabab3a30260fee1de9e53028d44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundState</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a5f2f064fd1c2e583fbaa6a736a5a7cca</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTargetState</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a57439879c389d0ca00f8f42473b231ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTargetState</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a4cd6bf3b5c51a56983529e160aeb1e0c</anchor>
      <arglist>(int targetState)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAnnounce</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a0221ecd3130432513c273bc8d4cd0f9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getDescription</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>aae4f51f8f2fd5c67849351541a0ce274</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const KIcon</type>
      <name>getIcon</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a4fd72b44f266b85a82a773a5fb0ee96c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QDomElement</type>
      <name>serialize</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a96bba2109990d01b8ad3b50757e10b2c</anchor>
      <arglist>(QDomDocument *doc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerialize</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a92cb528cae1e2f1602e030b9a05ced70</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getIconSrc</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>ac69d8b851b25f2fdfa50c5c2dee30fcb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a63ebb60ac927ac4957e4f0b472caec70</anchor>
      <arglist>(bool hide)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getHidden</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>ad16a71e99d750f5b11892633eb8e6da5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>neededParameterCount</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>ab25caf237538d90bd0e04ed3345ecbbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Command</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a641c23ef533dd6f77d0a4ef0311598b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>parseArguments</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a48e64e980ba6ff8369bf19008b8826d4</anchor>
      <arglist>(const QString &amp;input, const QString &amp;scheme, QStringList &amp;arguments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Command</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a18df2d81039392daeb0b78c346a70537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setTriggerName</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>acdff7916e5d58295dd0776e48b9db3f9</anchor>
      <arglist>(const QString &amp;trigger)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setIconSrc</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a2de1ce578ec07c3271b03bf4f58b2336</anchor>
      <arglist>(const QString &amp;iconSrc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>ada0f9af254af03f9772d6e172c71c3ef</anchor>
      <arglist>(const QString &amp;description)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a1bd756013be6437e3e78e3b30bb10f83</anchor>
      <arglist>(int *state)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QStringList</type>
      <name>currentArguments</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a04f907afc3869e5474979ffd61257754</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>getParsedTrigger</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a0e5717651019fb70ff4a3bb0341483e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>ae8caa229e4025ad8d31f881a261b0f04</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>a136279f581801ca0274fc68f1dba5452</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>abe9fd40a47b554f1e9b857643c786722</anchor>
      <arglist>(const QDomElement &amp;commandElem)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>boundState</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>ab6983046c148ad600d7b560a8f1f6911</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>switchToState</name>
      <anchorfile>classCommand.html</anchorfile>
      <anchor>ae797bc363f9b8b1a63e96a4d6c22854d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CommandConfiguration</name>
    <filename>classCommandConfiguration.html</filename>
    <member kind="slot" virtualness="pure">
      <type>virtual bool</type>
      <name>deSerialize</name>
      <anchorfile>classCommandConfiguration.html</anchorfile>
      <anchor>a4e1cc917c34155c4da77e6b4663938b9</anchor>
      <arglist>(const QDomElement &amp;element)=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual QDomElement</type>
      <name>serialize</name>
      <anchorfile>classCommandConfiguration.html</anchorfile>
      <anchor>ad01dae511a4eac6a0cbc359f05a0d391</anchor>
      <arglist>(QDomDocument *doc)=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>defaults</name>
      <anchorfile>classCommandConfiguration.html</anchorfile>
      <anchor>a5761ef7fffddd7449ae073c61c6e077d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classCommandConfiguration.html</anchorfile>
      <anchor>a74f1e16099343600b7fd1f3b9eea785b</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CommandConfiguration</name>
      <anchorfile>classCommandConfiguration.html</anchorfile>
      <anchor>adf93373ecae16ce090ab8f5f7feefdcd</anchor>
      <arglist>(Scenario *parent, const QByteArray &amp;internalName, const KLocalizedString &amp;name, const QByteArray &amp;version, const KLocalizedString &amp;desc, const QString &amp;iconName, const KComponentData &amp;componentData, const QVariantList &amp;args=QVariantList())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CommandConfiguration</name>
      <anchorfile>classCommandConfiguration.html</anchorfile>
      <anchor>af4e4d104dfeeb3fbee54959c8c80eb52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KAboutData *</type>
      <name>aboutData</name>
      <anchorfile>classCommandConfiguration.html</anchorfile>
      <anchor>a46a7deec9da125e83ea275cd7f9485d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>KAboutData *</type>
      <name>about</name>
      <anchorfile>classCommandConfiguration.html</anchorfile>
      <anchor>aaf1515a224dbbd6eb32b015b3dfaf6e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CommandListWidget</name>
    <filename>classCommandListWidget.html</filename>
    <member kind="enumeration">
      <name>Flag</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a04e7b8720571a4c2a8ea2474250b4dd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HasBack</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a04e7b8720571a4c2a8ea2474250b4dd8ac2b51e896eb44b1c75408840dc3a407b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HasNext</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a04e7b8720571a4c2a8ea2474250b4dd8af97b614f88d692141178cafce7cca15c</anchor>
      <arglist></arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>runRequest</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a98e9c6df182360a9dcb82c0984626ea8</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>canceled</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a96b4174c79af61976da7cb17129c6312</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CommandListWidget</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a93286ded059ed2e9febd402d73b3df0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a0b6de1e691a26731bd5eca3614ffd824</anchor>
      <arglist>(const QStringList &amp;iconsrcs, const QStringList commands, Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runRequestSent</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>ad0767dcc7da8104cd67518c8644b1652</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectAfterTimeout</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a03337e235dfa4cff0575520c75dc6ac3</anchor>
      <arglist>(int index, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abortTimeoutSelection</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a793c6a342441221d389f84b1b37bd355</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a0fbabc04b60d06dad69e7627f3783837</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeToFit</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a6aea487f48abbb79e0526227ee45a052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adaptToVoiceElement</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>ad68c234c5d08c902d8948f72ed274a5a</anchor>
      <arglist>(CommandListElements::Element element, VoiceInterfaceCommand *command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CommandListWidget</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>ac33f69529b7be4ce98017276de2cf9de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>closeEvent</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a00ee5ad7a881d2a14c7b87772285f438</anchor>
      <arglist>(QCloseEvent *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showEvent</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>aadb2424937fdb90316135a7e16b7f005</anchor>
      <arglist>(QShowEvent *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>KPushButton *</type>
      <name>pbCancel</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>aea06ffbf034e0f11fabbf00f5a55718e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QTableWidget *</type>
      <name>twCommands</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>a7571f1dfac6eb76d91978af4b9f43d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QProgressBar *</type>
      <name>pbAutomaticSelection</name>
      <anchorfile>classCommandListWidget.html</anchorfile>
      <anchor>ab5763d0e0ca71fa75a7575c207042a74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CommandManager</name>
    <filename>classCommandManager.html</filename>
    <member kind="function">
      <type>Qt::ItemFlags</type>
      <name>flags</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a07950ed2aecff1ce3888f20f2690d74b</anchor>
      <arglist>(const QModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>headerData</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>ae991179849e07a45d090a14e73d1fb3b</anchor>
      <arglist>(int, Qt::Orientation orientation, int role=Qt::DisplayRole) const </arglist>
    </member>
    <member kind="function">
      <type>QObject *</type>
      <name>parent</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a47bc378ec6553dcd99d74fe05e8a540e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QModelIndex</type>
      <name>parent</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a68b0c7ae2ed5bbee2e554348d74f2cdd</anchor>
      <arglist>(const QModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowCount</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>aa3d5bb0a66df999b6192d6ae65fc34d0</anchor>
      <arglist>(const QModelIndex &amp;parent=QModelIndex()) const </arglist>
    </member>
    <member kind="function">
      <type>QModelIndex</type>
      <name>index</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a7249f19eda33e84ab1b4b1fdce24c9f6</anchor>
      <arglist>(int row, int column, const QModelIndex &amp;parent=QModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>data</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a20fd7474258af9512b2e0f65073d7629</anchor>
      <arglist>(const QModelIndex &amp;index, int role) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>afa253d5111178934cb939d752fc71fb6</anchor>
      <arglist>(const QModelIndex &amp;parent=QModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString</type>
      <name>name</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a53534e7456a467d900b7efc37747ff5f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QString</type>
      <name>iconSrc</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a181738b441be3f0f2bf4b3a2c100b0ff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const KIcon</type>
      <name>icon</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a12117ad6af926e5543bdec46e573a3b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a322869400f940b49688ab55816efd106</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addCommand</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a0c702b7ef3eb72a30c3a9d660bcde963</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addCommandPrivate</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a2650be37686df4312aaf7e5c22f0dbff</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QList&lt; QAction * &gt;</type>
      <name>getGuiActions</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>aeb903e87c0c0db82640f026e723d2c49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommandList *</type>
      <name>getCommands</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>ad595a47f6421f2f7fb3f32013aa32814</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasCommands</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a15f120ba6b9433e24c029abd7f42d593</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFont</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a9983d45d08746ce534e649dd7cda4c8f</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CommandConfiguration *</type>
      <name>getConfigurationPage</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a636ba919148728a787050868482438b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CreateCommandWidget *</type>
      <name>getCreateCommandWidget</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a96c2e8d6aa27e521adb9d88c62c2461b</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>CreateCommandWidget *</type>
      <name>getCreateVoiceInterfaceCommandWidget</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>af737397b474935c9aecdebeea16e1237</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processResult</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a5a29251f834d5b06b0a57f2e2c717563</anchor>
      <arglist>(const RecognitionResult &amp;recognitionResult)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>deleteCommand</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a74acd74b07afd0ccca053c79b17dae93</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>deSerialize</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a9cfc6086d75d703f3eeea677ffb0d8be</anchor>
      <arglist>(const QDomElement &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QDomElement</type>
      <name>serialize</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a56fabddcb198c9888e3ff58aca514a46</anchor>
      <arglist>(QDomDocument *doc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>ad8490b7e3e3a00164cf2cd22db3492e8</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QDomElement</type>
      <name>serializeConfig</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a08fc79f0778cd5023308fd9d14ad9c1a</anchor>
      <arglist>(QDomDocument *doc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeCommands</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a4c7afce39caa8a3b318d3e3025b6abb7</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>deSerializeCommandsPrivate</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a66cd6aafcacf44b3c00bc123c257d418</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QDomElement</type>
      <name>serializeCommands</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>acebb213928cad9e13debc5d37fddb2ff</anchor>
      <arglist>(QDomDocument *doc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>trigger</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a628738965e0b2c6a05da94350d3a540f</anchor>
      <arglist>(const QString &amp;triggerName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>triggerCommand</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>afdb826218bab6239452df342f6b1b51b</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>installInterfaceCommand</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a4cf8a80dd8b10e6b432a6d43572e660b</anchor>
      <arglist>(QObject *object, const QString &amp;slot, const QString &amp;actionName, const QString &amp;iconSrc, const QString &amp;description, bool announce, bool showIcon=false, int state=SimonCommand::DefaultState, int newState=SimonCommand::DefaultState, const QString &amp;defaultVisibleTrigger=QString(), QString id=QString())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>installListInterfaceCommand</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>ac7b4db36aece48d7b5ea302709a1e3c3</anchor>
      <arglist>(CommandListElements::Element element, QObject *object, const QString &amp;slot, QString id, QString description=QString(), int state=SimonCommand::DefaultState, int newState=SimonCommand::DefaultState, QString actionName=QString(), QString iconSrc=QString(), bool announce=false, bool showIcon=false, QString defaultVisibleTrigger=QString())</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; VoiceInterfaceCommandTemplate * &gt;</type>
      <name>getVoiceInterfaceCommandTemplates</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a85f09aeb9047cf124c00dead491d0e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>switchToState</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a6b452f63d3fd77445f93b31283f5acd7</anchor>
      <arglist>(int newState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActionCollection</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>afec8d1843b4fb96ac4dfef8a5076dc59</anchor>
      <arglist>(ActionCollection *aC)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CommandManager</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a6ad94729d568cb1614f0dc2efdce2ff7</anchor>
      <arglist>(Scenario *parentScenario, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGreedyStatus</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>ae9fdac202579656036c8eee518b0baae</anchor>
      <arglist>(bool isGreedy)</arglist>
    </member>
    <member kind="function">
      <type>VoiceInterfaceCommand *</type>
      <name>getVoiceInterfaceCommand</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a4f8f27b8b384b91f60e08ce77ed913d2</anchor>
      <arglist>(const QString &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CommandManager</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>ae6a6acf03e200dfc65a7a26fbbfd207d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>adaptUi</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a0c4945774db69b856f57a4f7ba6800b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>appendCommand</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a5602c1c6684162d5defa0b10685375f8</anchor>
      <arglist>(Command *com)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldAcceptCommand</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>afc0e657144c9614760e662a3fd9ade90</anchor>
      <arglist>(Command *com)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>resolveRowNumber</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>aa5b6ce9528d8dec9425d92d5263b427a</anchor>
      <arglist>(int in) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_currentState</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>ab7129f1c86ff9620a76fe3538ecaba9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CommandList *</type>
      <name>commands</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a5024c537321139b768310a2c366938ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>m_source</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a3ce71363ebf39ce70570e95d01ba4281</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QList&lt; QAction * &gt;</type>
      <name>guiActions</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>ad5602d3a5c6890211083699c0bed196f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ActionCollection *</type>
      <name>m_actionCollection</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a9f5bdfaab6fb34d9767204d9ffa4af07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CommandConfiguration *</type>
      <name>config</name>
      <anchorfile>classCommandManager.html</anchorfile>
      <anchor>a921ff053ec5a7b71ea222ada5c5faff8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CommandSettings</name>
    <filename>classCommandSettings.html</filename>
    <member kind="function">
      <type></type>
      <name>~CommandSettings</name>
      <anchorfile>classCommandSettings.html</anchorfile>
      <anchor>a7fc4e7a495f4aff326320da92fd129c3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CompositeCommand</name>
    <filename>classCompositeCommand.html</filename>
    <base>Command</base>
    <member kind="function">
      <type>const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classCompositeCommand.html</anchorfile>
      <anchor>a22fa4f19488676a8650744cd577d1d92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classCompositeCommand.html</anchorfile>
      <anchor>a94cebe5101e62aa7adacf226e2167975</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classCompositeCommand.html</anchorfile>
      <anchor>a226b3b6f85164ed323594c8380c521d0</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompositeCommand</name>
      <anchorfile>classCompositeCommand.html</anchorfile>
      <anchor>a8cedbe8fd551a0af002f9642335752b8</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description, const QStringList &amp;commands_, const QStringList &amp;commandTypes_)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classCompositeCommand.html</anchorfile>
      <anchor>a4ca9c0682e32fbd3116c7dfc026472b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classCompositeCommand.html</anchorfile>
      <anchor>a41af4fb7fe918a3f5691c711a44f9282</anchor>
      <arglist>(int *state)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classCompositeCommand.html</anchorfile>
      <anchor>ab3b7cf25c7a34522179d4cf03cbf8fea</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CompositeCommandManager</name>
    <filename>classCompositeCommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classCompositeCommandManager.html</anchorfile>
      <anchor>a7c6eac8553fcb60777c5987876e7cdeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classCompositeCommandManager.html</anchorfile>
      <anchor>af49e05804e40e6dae23e92d84bba5323</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CreateCommandWidget *</type>
      <name>getCreateCommandWidget</name>
      <anchorfile>classCompositeCommandManager.html</anchorfile>
      <anchor>a36105f7d7e7be104acc6d38cac217362</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompositeCommandManager</name>
      <anchorfile>classCompositeCommandManager.html</anchorfile>
      <anchor>a4fd1620ecc6a3dc87166ecf9fdbc103c</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>shouldAcceptCommand</name>
      <anchorfile>classCompositeCommandManager.html</anchorfile>
      <anchor>a021712ba9130efacdfa7697a01e27eab</anchor>
      <arglist>(Command *command)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CompositeProgressWidget</name>
    <filename>classCompositeProgressWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>CompoundCondition</name>
    <filename>classCompoundCondition.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>evaluateConditions</name>
      <anchorfile>classCompoundCondition.html</anchorfile>
      <anchor>afbd492718c50f2de5f66eb8239e8cf7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>conditionBeingEvaluated</name>
      <anchorfile>classCompoundCondition.html</anchorfile>
      <anchor>a2b786612a1b66e5e48e64d7aabf44bab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>conditionChanged</name>
      <anchorfile>classCompoundCondition.html</anchorfile>
      <anchor>ace1a15e33aa437677e2b3925053126b5</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>modified</name>
      <anchorfile>classCompoundCondition.html</anchorfile>
      <anchor>a8ea336f5df569e116c280ecf01f99142</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSatisfied</name>
      <anchorfile>classCompoundCondition.html</anchorfile>
      <anchor>a978043ad830d3a0fde332bc97cb11df7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; Condition * &gt;</type>
      <name>getConditions</name>
      <anchorfile>classCompoundCondition.html</anchorfile>
      <anchor>a08d471c5c1d7fe1dd8a4a982885e58a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompoundConditionModel *</type>
      <name>getProxy</name>
      <anchorfile>classCompoundCondition.html</anchorfile>
      <anchor>accdcea97c3c2f76127a505d4e6bd788e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CompoundConditionModel</name>
    <filename>classCompoundConditionModel.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>update</name>
      <anchorfile>classCompoundConditionModel.html</anchorfile>
      <anchor>a8450b3a760fa7aa1a1a9385041e1de75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompoundConditionModel</name>
      <anchorfile>classCompoundConditionModel.html</anchorfile>
      <anchor>ae11266d5a40a1a2671662b1155949221</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QList&lt; Condition * &gt;</type>
      <name>m_conditions</name>
      <anchorfile>classCompoundConditionModel.html</anchorfile>
      <anchor>ad388191de706667aa72dcc4735a28092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CompoundCondition *</type>
      <name>m_ref</name>
      <anchorfile>classCompoundConditionModel.html</anchorfile>
      <anchor>a2e3423b170692b9921a7d269e530718f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Condition</name>
    <filename>classCondition.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>conditionChanged</name>
      <anchorfile>classCondition.html</anchorfile>
      <anchor>ae8c796b45b0e9c04c967f78dab300ecf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Condition</name>
      <anchorfile>classCondition.html</anchorfile>
      <anchor>a5da2c8e86a054f09e07e3c2b1ad310da</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSatisfied</name>
      <anchorfile>classCondition.html</anchorfile>
      <anchor>ab400e651d731504674c9dd799e04456e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>name</name>
      <anchorfile>classCondition.html</anchorfile>
      <anchor>a135d2db3aaeeb5350bea748d121755ae</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>privateDeSerialize</name>
      <anchorfile>classCondition.html</anchorfile>
      <anchor>aa0d2ee4538e360caafaf22083bbdf4da</anchor>
      <arglist>(QDomElement elem)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual QDomElement</type>
      <name>privateSerialize</name>
      <anchorfile>classCondition.html</anchorfile>
      <anchor>a26e4a463c476b43ab018a0dbd01fad1b</anchor>
      <arglist>(QDomDocument *doc, QDomElement elem)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_satisfied</name>
      <anchorfile>classCondition.html</anchorfile>
      <anchor>a735ef32d33fd1ba15427ab4769deb8b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>m_pluginName</name>
      <anchorfile>classCondition.html</anchorfile>
      <anchor>a0613c7f795add6970cf19a6f6671c63b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ConditionAssociation</name>
    <filename>classConditionAssociation.html</filename>
    <base>Condition</base>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>evaluateConditions</name>
      <anchorfile>classConditionAssociation.html</anchorfile>
      <anchor>aa94b4151386bb804aa5dc4ad7fb97f02</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConditionAssociation</name>
      <anchorfile>classConditionAssociation.html</anchorfile>
      <anchor>ad95f1d45287aff6637976534e34c448c</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; Condition * &gt;</type>
      <name>getConditions</name>
      <anchorfile>classConditionAssociation.html</anchorfile>
      <anchor>af5fe5fd3c2c72d6afb043df03cc35180</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>privateDeSerialize</name>
      <anchorfile>classConditionAssociation.html</anchorfile>
      <anchor>ac2994693258f59a90611aef131582059</anchor>
      <arglist>(QDomElement elem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>privateSerialize</name>
      <anchorfile>classConditionAssociation.html</anchorfile>
      <anchor>a26b86825b6f12c92bf834af8275d7224</anchor>
      <arglist>(QDomDocument *doc, QDomElement elem)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QList&lt; Condition * &gt;</type>
      <name>m_conditions</name>
      <anchorfile>classConditionAssociation.html</anchorfile>
      <anchor>a0572a7fe7f46e4dd8562901de535b416</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ContextAdapter</name>
    <filename>classContextAdapter.html</filename>
  </compound>
  <compound kind="class">
    <name>ContextManager</name>
    <filename>classContextManager.html</filename>
    <member kind="function">
      <type></type>
      <name>~ContextManager</name>
      <anchorfile>classContextManager.html</anchorfile>
      <anchor>a35f3b48747e7b3d6297571d70d2c7fb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; Condition * &gt; *</type>
      <name>getConditions</name>
      <anchorfile>classContextManager.html</anchorfile>
      <anchor>a58c3acd3c424f1fc9d351e39f0a48303</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ContextManager *</type>
      <name>instance</name>
      <anchorfile>classContextManager.html</anchorfile>
      <anchor>a7f66c11358335eae9275453ca8eddb9f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ContextView</name>
    <filename>classContextView.html</filename>
    <base>InlineWidget</base>
  </compound>
  <compound kind="class">
    <name>ContextViewPrivate</name>
    <filename>classContextViewPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>CoreEvents</name>
    <filename>classCoreEvents.html</filename>
    <member kind="function">
      <type>void</type>
      <name>sendShortcut</name>
      <anchorfile>classCoreEvents.html</anchorfile>
      <anchor>a5988a04d7933fb01ec126d2f68ce8d53</anchor>
      <arglist>(const QKeySequence &amp;shortcut, EventSimulation::PressMode mode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateActiveWindowWidget</name>
    <filename>classCreateActiveWindowWidget.html</filename>
    <base>CreateConditionWidget</base>
    <member kind="function">
      <type>Condition *</type>
      <name>createCondition</name>
      <anchorfile>classCreateActiveWindowWidget.html</anchorfile>
      <anchor>adbf96d7afe63a4f9433c55e67031b549</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateActiveWindowWidget.html</anchorfile>
      <anchor>a247c4d018c2978f64d55ffaed6e48913</anchor>
      <arglist>(Condition *condition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateActiveWindowWidget.html</anchorfile>
      <anchor>a34c7a7f7fbc19e352bbf6ab12494277b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateAkonadiCommandWidget</name>
    <filename>classCreateAkonadiCommandWidget.html</filename>
    <base>CreateCommandWidget</base>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateAkonadiCommandWidget.html</anchorfile>
      <anchor>a3a3213b835f0347c493f1155ebe2b217</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateAkonadiCommandWidget.html</anchorfile>
      <anchor>a6b96c564d35057b0306a0c7aa3071344</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateAkonadiCommandWidget.html</anchorfile>
      <anchor>abad9e518628003a100d2f0ef336bce19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreateAkonadiCommandWidget</name>
      <anchorfile>classCreateAkonadiCommandWidget.html</anchorfile>
      <anchor>a61ff990d33d7d9938a4525cebcad466f</anchor>
      <arglist>(CommandManager *manager, QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateCommandWidget</name>
    <filename>classCreateCommandWidget.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>completeChanged</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>a1e394b023a59eaf70916ee233136c6a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>commandSuggested</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>abf4559d62ebae356214b8d5e53168fe5</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>a40f0a47f3c34658b8aa3a859e44dc4c9</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addCommand</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>ae6ce10150ab4933dbf6fbe86da6023a5</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>init</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>ac448456fc7acc43c42ea4094b75716bb</anchor>
      <arglist>(Command *command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>a0c1de840a3d5f00d92cb8b56dfe87dd7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInstanceOfSameManager</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>aa64b906bbadb682f0183bb486986dbbd</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInstanceOfSameManager</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>af4a10d51335bca141a190f2f959c8186</anchor>
      <arglist>(CommandManager *manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreateCommandWidget</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>a52f07dd9a236e81596e1b92dd5f3b88d</anchor>
      <arglist>(CommandManager *manager, QWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CreateCommandWidget</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>a836deb52e9e76625616f3e45fe96b415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QList&lt; CommandParameter &gt;</type>
      <name>supportedParameters</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>aa9d05fbee977223188a7bb9b3105ff1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateCreatedCommand</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>a7392aea575143dcdb4ab9f4d8ebc0545</anchor>
      <arglist>(Command *c)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CommandManager *</type>
      <name>m_manager</name>
      <anchorfile>classCreateCommandWidget.html</anchorfile>
      <anchor>a82954938d4493999e8437abfc16205df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateCompositeCommandWidget</name>
    <filename>classCreateCompositeCommandWidget.html</filename>
    <base>CreateCommandWidget</base>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateCompositeCommandWidget.html</anchorfile>
      <anchor>a09036bd1bcb76b3115d055bec228d43b</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateCompositeCommandWidget.html</anchorfile>
      <anchor>a36c7d72d089ceddf62d1ad3ec28520c9</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateCompositeCommandWidget.html</anchorfile>
      <anchor>aa39bac2a1b01ca13e550b6ed1a62f005</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreateCompositeCommandWidget</name>
      <anchorfile>classCreateCompositeCommandWidget.html</anchorfile>
      <anchor>aabea4913cc0cd0db866533a4b8c5d1fa</anchor>
      <arglist>(CommandManager *manager, QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateConditionWidget</name>
    <filename>classCreateConditionWidget.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>completeChanged</name>
      <anchorfile>classCreateConditionWidget.html</anchorfile>
      <anchor>a0a8339e4eae6cac0e9b75c1875a145ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Condition *</type>
      <name>createCondition</name>
      <anchorfile>classCreateConditionWidget.html</anchorfile>
      <anchor>a8df9cfaeeeda93f039738e00b37d297c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addCondition</name>
      <anchorfile>classCreateConditionWidget.html</anchorfile>
      <anchor>acc6fd831f56e703f341115ef1cb8b90a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>init</name>
      <anchorfile>classCreateConditionWidget.html</anchorfile>
      <anchor>a6d964a9e839e30019c382a492bcc71ec</anchor>
      <arglist>(Condition *condition)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateConditionWidget.html</anchorfile>
      <anchor>af5bd26dab545b1c22e9ba821df25e615</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreateConditionWidget</name>
      <anchorfile>classCreateConditionWidget.html</anchorfile>
      <anchor>a832b5d58467ad23c80dc221aa1af7e5f</anchor>
      <arglist>(CompoundCondition *compoundCondition, QWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CreateConditionWidget</name>
      <anchorfile>classCreateConditionWidget.html</anchorfile>
      <anchor>ad4b9e24a66be814c92efc5c1d392a01a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CompoundCondition *</type>
      <name>m_compoundCondition</name>
      <anchorfile>classCreateConditionWidget.html</anchorfile>
      <anchor>a313aeb190c045f290f6a921d5fb7cb03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateDBusCommandWidget</name>
    <filename>classCreateDBusCommandWidget.html</filename>
    <base>CreateCommandWidget</base>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateDBusCommandWidget.html</anchorfile>
      <anchor>ad806bf018d1c93cc9713ab3f03dd9722</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateDBusCommandWidget.html</anchorfile>
      <anchor>ad122ce0520a3a8031007b031854f70ac</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateDBusCommandWidget.html</anchorfile>
      <anchor>aa67c0cbf781fce4f7afd5f25b61984d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreateDBusCommandWidget</name>
      <anchorfile>classCreateDBusCommandWidget.html</anchorfile>
      <anchor>ad497089eeb72419798073ae0b99c8e04</anchor>
      <arglist>(CommandManager *manager, QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateDialogCommandWidget</name>
    <filename>classCreateDialogCommandWidget.html</filename>
    <base>CreateCommandWidget</base>
    <base>CreateCommandWidget</base>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateDialogCommandWidget.html</anchorfile>
      <anchor>a88cacb7cf6db9d2615bea4f1d6a96185</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateDialogCommandWidget.html</anchorfile>
      <anchor>a63c86cb2f547285b07eb89f704d61432</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateDialogCommandWidget.html</anchorfile>
      <anchor>a3f5aa704f601e06cf0223c8162360223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateDialogCommandWidget.html</anchorfile>
      <anchor>a96386242885ffdd062ab61c8cd6f890e</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateDialogCommandWidget.html</anchorfile>
      <anchor>a63c86cb2f547285b07eb89f704d61432</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateDialogCommandWidget.html</anchorfile>
      <anchor>a3f5aa704f601e06cf0223c8162360223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreateDialogCommandWidget</name>
      <anchorfile>classCreateDialogCommandWidget.html</anchorfile>
      <anchor>ad2559e08916fbd5440e483b03b4e64ac</anchor>
      <arglist>(CommandManager *manager, QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateExecutableCommandWidget</name>
    <filename>classCreateExecutableCommandWidget.html</filename>
    <base>CreateCommandWidget</base>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateExecutableCommandWidget.html</anchorfile>
      <anchor>a52179b21e7028953f16d96e3f5e7fd9b</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateExecutableCommandWidget.html</anchorfile>
      <anchor>a8c83867670f3e02919c71b268d313885</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateExecutableCommandWidget.html</anchorfile>
      <anchor>a7aebb4995144de14609c0b0f2d46c2a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreateExecutableCommandWidget</name>
      <anchorfile>classCreateExecutableCommandWidget.html</anchorfile>
      <anchor>afd87b323b6a5c0bd27029d02b9939105</anchor>
      <arglist>(CommandManager *manager, QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateJsonCommandWidget</name>
    <filename>classCreateJsonCommandWidget.html</filename>
    <base>CreateCommandWidget</base>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateJsonCommandWidget.html</anchorfile>
      <anchor>a0404ae84e517c26368b2e117ad4646f0</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateJsonCommandWidget.html</anchorfile>
      <anchor>acf91ab11aea368d0f8a20ac3fafe3e97</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateJsonCommandWidget.html</anchorfile>
      <anchor>a691bc3062de34b37a335f1af700c80db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreateJsonCommandWidget</name>
      <anchorfile>classCreateJsonCommandWidget.html</anchorfile>
      <anchor>a9335094c7afb96bb739e34900ac20e37</anchor>
      <arglist>(CommandManager *manager, QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateListCommandWidget</name>
    <filename>classCreateListCommandWidget.html</filename>
    <base>CreateCommandWidget</base>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateListCommandWidget.html</anchorfile>
      <anchor>a770503fff18050df2a0bbb147172ea98</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateListCommandWidget.html</anchorfile>
      <anchor>a16528a505deb76e9bbe59d816b43dd11</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateListCommandWidget.html</anchorfile>
      <anchor>a4dfce495f5032835c5f2c8c250d242c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreateListCommandWidget</name>
      <anchorfile>classCreateListCommandWidget.html</anchorfile>
      <anchor>ab8850c570af606e2f64be94a11b11c17</anchor>
      <arglist>(CommandManager *manager, QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateOrConditionAssociationWidget</name>
    <filename>classCreateOrConditionAssociationWidget.html</filename>
    <base>CreateConditionWidget</base>
    <member kind="function">
      <type>Condition *</type>
      <name>createCondition</name>
      <anchorfile>classCreateOrConditionAssociationWidget.html</anchorfile>
      <anchor>a3641d781801c47f908474df32e9d03f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateOrConditionAssociationWidget.html</anchorfile>
      <anchor>a1ba8c33ede1cb2b57116f80842c5d1a0</anchor>
      <arglist>(Condition *condition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateOrConditionAssociationWidget.html</anchorfile>
      <anchor>aefa1e2d08587a7025611b416ecc365f3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreatePlaceCommandWidget</name>
    <filename>classCreatePlaceCommandWidget.html</filename>
    <base>CreateCommandWidget</base>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreatePlaceCommandWidget.html</anchorfile>
      <anchor>a19c318f632c378b23f1758ee1f14df54</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreatePlaceCommandWidget.html</anchorfile>
      <anchor>acd536d59a8d6d69fd5e29326aace24fd</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreatePlaceCommandWidget.html</anchorfile>
      <anchor>afc5425da0b5c7ae2257ea603fc25823f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreatePlaceCommandWidget</name>
      <anchorfile>classCreatePlaceCommandWidget.html</anchorfile>
      <anchor>a641797bc34f5e884d2a8c96ed8203f94</anchor>
      <arglist>(CommandManager *manager, QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateProcessOpenedConditionWidget</name>
    <filename>classCreateProcessOpenedConditionWidget.html</filename>
    <base>CreateConditionWidget</base>
    <member kind="function">
      <type>Condition *</type>
      <name>createCondition</name>
      <anchorfile>classCreateProcessOpenedConditionWidget.html</anchorfile>
      <anchor>a8262ee529c260181babfa8482892cf08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateProcessOpenedConditionWidget.html</anchorfile>
      <anchor>afffbb65338ae6e65cd71df477cbebd58</anchor>
      <arglist>(Condition *condition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateProcessOpenedConditionWidget.html</anchorfile>
      <anchor>a8a2f5f49553775d9f7e2d6b9027cdbd8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateShortcutCommandWidget</name>
    <filename>classCreateShortcutCommandWidget.html</filename>
    <base>CreateCommandWidget</base>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateShortcutCommandWidget.html</anchorfile>
      <anchor>af46f2cc4f8d8ed96229d541a5727de81</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateShortcutCommandWidget.html</anchorfile>
      <anchor>a47543c2e139c473997ba14315f3e5876</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateShortcutCommandWidget.html</anchorfile>
      <anchor>a5ac17ea2a293cbf681098bdd624619ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreateShortcutCommandWidget</name>
      <anchorfile>classCreateShortcutCommandWidget.html</anchorfile>
      <anchor>a2d5ebca407fc244e698901e51392f634</anchor>
      <arglist>(CommandManager *manager, QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateTextMacroCommandWidget</name>
    <filename>classCreateTextMacroCommandWidget.html</filename>
    <base>CreateCommandWidget</base>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateTextMacroCommandWidget.html</anchorfile>
      <anchor>a34b132125ff19b4494c02f8266339275</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateTextMacroCommandWidget.html</anchorfile>
      <anchor>ab6410ba715da1e21b6cdc4a66c2c3892</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateTextMacroCommandWidget.html</anchorfile>
      <anchor>ab0331b912629e6302f8941554de4e2e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CreateTextMacroCommandWidget</name>
      <anchorfile>classCreateTextMacroCommandWidget.html</anchorfile>
      <anchor>a6c1fea8d1758060200eab1a137034cb4</anchor>
      <arglist>(CommandManager *manager, QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CreateVoiceInterfaceCommandWidget</name>
    <filename>classCreateVoiceInterfaceCommandWidget.html</filename>
    <base>CreateCommandWidget</base>
    <member kind="signal">
      <type>void</type>
      <name>completeChanged</name>
      <anchorfile>classCreateVoiceInterfaceCommandWidget.html</anchorfile>
      <anchor>a74d7f48e64a175dd136b484f7850c910</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>commandSuggested</name>
      <anchorfile>classCreateVoiceInterfaceCommandWidget.html</anchorfile>
      <anchor>a95bc26a8a394b781841d868ef57a1978</anchor>
      <arglist>(Command *)</arglist>
    </member>
    <member kind="function">
      <type>Command *</type>
      <name>createCommand</name>
      <anchorfile>classCreateVoiceInterfaceCommandWidget.html</anchorfile>
      <anchor>a3c752c54db0b93506a94039d56953606</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classCreateVoiceInterfaceCommandWidget.html</anchorfile>
      <anchor>a05988587b729375b6c64fd60572942fa</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classCreateVoiceInterfaceCommandWidget.html</anchorfile>
      <anchor>a2defeca8dd1470c25b023578305276b1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DBusBackend</name>
    <filename>classDBusBackend.html</filename>
    <base>ATBackend</base>
    <member kind="function">
      <type>ATObject *</type>
      <name>readGui</name>
      <anchorfile>classDBusBackend.html</anchorfile>
      <anchor>ad74e5c0b80ac99b061d6b9d3ce9842d3</anchor>
      <arglist>(QString service)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DBusCommand</name>
    <filename>classDBusCommand.html</filename>
    <base>Command</base>
    <member kind="function">
      <type>const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classDBusCommand.html</anchorfile>
      <anchor>a79df9deb3b8388ee3188bc887f99388d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classDBusCommand.html</anchorfile>
      <anchor>a8f00672b652412e44c72b0e62d8ce2f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classDBusCommand.html</anchorfile>
      <anchor>ac83e0c8fe1db8e446b1a03d555848ce4</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classDBusCommand.html</anchorfile>
      <anchor>a663526a9c1a30773927cc0fcc5fb34cb</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classDBusCommand.html</anchorfile>
      <anchor>adc8d15432d6538326c46671def15b88a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classDBusCommand.html</anchorfile>
      <anchor>ab43c6789f0a043b39435d9c025b8745d</anchor>
      <arglist>(int *state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DBusCommandManager</name>
    <filename>classDBusCommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classDBusCommandManager.html</anchorfile>
      <anchor>a74346b5569df7e214660f51db43ee005</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classDBusCommandManager.html</anchorfile>
      <anchor>ad2d813a6149b9e34799d1c53fd14ac04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classDBusCommandManager.html</anchorfile>
      <anchor>ace81ae81937389b270915724600c6856</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CreateCommandWidget *</type>
      <name>getCreateCommandWidget</name>
      <anchorfile>classDBusCommandManager.html</anchorfile>
      <anchor>a375983a7f7c53920bd59fc8522ed83cb</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DBusCommandManager</name>
      <anchorfile>classDBusCommandManager.html</anchorfile>
      <anchor>a772d63803673d93076644c5535869c1d</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>shouldAcceptCommand</name>
      <anchorfile>classDBusCommandManager.html</anchorfile>
      <anchor>ad2fa3c01920e09ce127e45c764c1e855</anchor>
      <arglist>(Command *command)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DelayCommand</name>
    <filename>classDelayCommand.html</filename>
    <base>Command</base>
    <member kind="function">
      <type>QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classDelayCommand.html</anchorfile>
      <anchor>ac27e6bb7fad57122bfd507688f0cbfd8</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classDelayCommand.html</anchorfile>
      <anchor>a503176387c9090a69a0a800dd7d5a80e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classDelayCommand.html</anchorfile>
      <anchor>a6d3c9963b59d0cfedbfa60ee32d00064</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DelayCommand</name>
      <anchorfile>classDelayCommand.html</anchorfile>
      <anchor>a40a3b09a2f101aeb3ca5e3c865f213a3</anchor>
      <arglist>(int delay_)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classDelayCommand.html</anchorfile>
      <anchor>a4480c038a3664db0815223e6cb2d15f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classDelayCommand.html</anchorfile>
      <anchor>a078280ef93d628a502f017ee466c7f51</anchor>
      <arglist>(int *state)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classDelayCommand.html</anchorfile>
      <anchor>aea8a158d37a5f3f9c6983c07a342373b</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DeleteWordDialog</name>
    <filename>classDeleteWordDialog.html</filename>
    <member kind="function">
      <type></type>
      <name>DeleteWordDialog</name>
      <anchorfile>classDeleteWordDialog.html</anchorfile>
      <anchor>a8334df64fbe199337fc3b31873915a43</anchor>
      <arglist>(QWidget *parent=0, Qt::WindowFlags f=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exec</name>
      <anchorfile>classDeleteWordDialog.html</anchorfile>
      <anchor>a8be3c291d33846ad7320b63b73feebfc</anchor>
      <arglist>(Word *word, bool isShadowed)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DeltaBuf</name>
    <filename>structDeltaBuf.html</filename>
    <member kind="variable">
      <type>float **</type>
      <name>mfcc</name>
      <anchorfile>structDeltaBuf.html</anchorfile>
      <anchor>ac94a2ecf3cd7c85271996a3bbfcd5d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>veclen</name>
      <anchorfile>structDeltaBuf.html</anchorfile>
      <anchor>aaf772c75002a66c85f445805638cfd39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>vec</name>
      <anchorfile>structDeltaBuf.html</anchorfile>
      <anchor>a0f59393c471fee1f3aabd2e9bf17c5ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>win</name>
      <anchorfile>structDeltaBuf.html</anchorfile>
      <anchor>a504ad2585a6b812d4548a313d06886da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>len</name>
      <anchorfile>structDeltaBuf.html</anchorfile>
      <anchor>aeb458e88634402ea9f35107361567f46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>store</name>
      <anchorfile>structDeltaBuf.html</anchorfile>
      <anchor>a7288da445895c056cd1b0bb5950e5326</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean *</type>
      <name>is_on</name>
      <anchorfile>structDeltaBuf.html</anchorfile>
      <anchor>ab30515d39ec01579f0efa0f70340834d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>B</name>
      <anchorfile>structDeltaBuf.html</anchorfile>
      <anchor>ab5594bf55936fc49756cf3efa0e94ab8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DesktopGridCommandManager</name>
    <filename>classDesktopGridCommandManager.html</filename>
    <base>CommandManager</base>
    <base>GreedyReceiver</base>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classDesktopGridCommandManager.html</anchorfile>
      <anchor>ad80d204658b3fdcbbb1d8313334fd14c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classDesktopGridCommandManager.html</anchorfile>
      <anchor>a90bea128969b2d5ad5af1d107ea453c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classDesktopGridCommandManager.html</anchorfile>
      <anchor>a1454b65094fe27a3a95812f8adcebc2f</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeCommandsPrivate</name>
      <anchorfile>classDesktopGridCommandManager.html</anchorfile>
      <anchor>a314b218d3b55e4c51aa4e9542cd2c9c3</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classDesktopGridCommandManager.html</anchorfile>
      <anchor>a72111253c83825262eba415ee6a712b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DesktopGridCommandManager</name>
      <anchorfile>classDesktopGridCommandManager.html</anchorfile>
      <anchor>a1973a70fa43eab398e1022219992a99b</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DeviceVolumeWidget</name>
    <filename>classDeviceVolumeWidget.html</filename>
  </compound>
  <compound kind="struct">
    <name>DFA_INFO</name>
    <filename>structDFA__INFO.html</filename>
    <member kind="variable">
      <type>DFA_STATE *</type>
      <name>st</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>ae305b0bb7f5edf85a4a025b6d8f1dd99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxstatenum</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>a43bd683383ffd96f52ab16c3de20f2a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>state_num</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>afa83b5899bb5aae29b890cf99cec0504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>arc_num</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>a57c4023b048bd000b4655768b46b7675</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>term_num</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>a8fb90106d90cc933456fd9a4ee092fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int **</type>
      <name>cp</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>a85497c4081d3065042bfb5d33e9d1ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>cplen</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>a1937d239c2c9cd788ddc42507530dbe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>cpalloclen</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>a03527a420250eafe2f79f0302da05fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>cp_begin</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>a29343cb9fa680ede4999943f2b748525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cp_begin_len</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>aae52fe668f6c1af121b646e0daf3abce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cp_begin_alloclen</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>aeed0daa8d4ea9dd3240414635e560327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>cp_end</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>ad15d94a2d111575a107d803e8ac89093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cp_end_len</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>a31782a64a8281211fa83e5f03daa8177</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cp_end_alloclen</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>a829cf610d094e84ec09247186cf8be74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TERM_INFO</type>
      <name>term</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>a82a5360537c251f617d8e0de7b68c802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean *</type>
      <name>is_sp</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>ac318fedd67631c78995fc02f178fcd3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>sp_id</name>
      <anchorfile>structDFA__INFO.html</anchorfile>
      <anchor>aedc143a60c428a03f493c2518c60e6c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DFA_STATE</name>
    <filename>structDFA__STATE.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>number</name>
      <anchorfile>structDFA__STATE.html</anchorfile>
      <anchor>a6d94d2e14c1ceec140434819726db61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>status</name>
      <anchorfile>structDFA__STATE.html</anchorfile>
      <anchor>a7dbb5492ef4d3bfc10d8db45659b571e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DFA_ARC *</type>
      <name>arc</name>
      <anchorfile>structDFA__STATE.html</anchorfile>
      <anchor>a3847aeacbb71a9c2a20c312222e4fb5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DialogCommand</name>
    <filename>classDialogCommand.html</filename>
    <base>Command</base>
    <base>Command</base>
    <member kind="function">
      <type>const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>ac57e6d59e6451f57e224b6d77d840213</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>ac588fe5180742096a7129ed4b176bfc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>ae16ee42a19b4994c8b5cc8dca7006e27</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>a49ae38948db876f5560e84abebca76ce</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>ac57e6d59e6451f57e224b6d77d840213</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>ac588fe5180742096a7129ed4b176bfc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>ae16ee42a19b4994c8b5cc8dca7006e27</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>a49ae38948db876f5560e84abebca76ce</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>a110498b0e8614655a5e575b40b5a5657</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>a4c6f900bc960eb4589fc30e19aa3c2e3</anchor>
      <arglist>(int *state)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>ae73286eae4004a06088cbd2dd6f0557c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classDialogCommand.html</anchorfile>
      <anchor>a4c6f900bc960eb4589fc30e19aa3c2e3</anchor>
      <arglist>(int *state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DialogCommandManager</name>
    <filename>classDialogCommandManager.html</filename>
    <base>CommandManager</base>
    <base>GreedyReceiver</base>
    <base>CommandManager</base>
    <base>GreedyReceiver</base>
    <member kind="slot">
      <type>bool</type>
      <name>greedyTrigger</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a9922b9b7c11c7752b903ce36b2b70289</anchor>
      <arglist>(const QString &amp;inputText)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>greedyTrigger</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a9922b9b7c11c7752b903ce36b2b70289</anchor>
      <arglist>(const QString &amp;inputText)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>ab9b75fe5955b6bb65de22079b4c89c9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>af97d1a43bd7a26e285168e606b1aefd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>af240768758a658a8e263bab4ada06fa4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QDomElement</type>
      <name>serializeCommands</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a287c2812eee9d10d791f0b9eb0f00a1a</anchor>
      <arglist>(QDomDocument *doc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeCommandsPrivate</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>af06fffe8154904a1adff7134ef8265c0</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a5af6f3161ad8cd0aca38f5cedfb3f500</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a168eed19393e5d29a070f50f65e76e3d</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>trigger</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a2d572dde1a49e3836dfa6d287811c312</anchor>
      <arglist>(const QString &amp;triggerName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DialogCommandManager</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a9d9d2ffac9517190760ae60dbd8b5adb</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>ab9b75fe5955b6bb65de22079b4c89c9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>af97d1a43bd7a26e285168e606b1aefd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>af240768758a658a8e263bab4ada06fa4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a5af6f3161ad8cd0aca38f5cedfb3f500</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a168eed19393e5d29a070f50f65e76e3d</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>CreateCommandWidget *</type>
      <name>getCreateCommandWidget</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>ad14e963c06fb51ce2b249adad04daa1a</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DialogCommandManager</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a9d9d2ffac9517190760ae60dbd8b5adb</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>shouldAcceptCommand</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a1ca483b16fbe25c01d7219ad123096d9</anchor>
      <arglist>(Command *command)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>shouldAcceptCommand</name>
      <anchorfile>classDialogCommandManager.html</anchorfile>
      <anchor>a1ca483b16fbe25c01d7219ad123096d9</anchor>
      <arglist>(Command *command)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dict</name>
    <filename>classDict.html</filename>
    <member kind="function">
      <type></type>
      <name>Dict</name>
      <anchorfile>classDict.html</anchorfile>
      <anchor>ae3a54e32280a37b5152c7728795c078b</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ipaToXSampa</name>
      <anchorfile>classDict.html</anchorfile>
      <anchor>a576fb771620a5e0f87dc9c6ec82af654</anchor>
      <arglist>(QString ipa)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Dict</name>
      <anchorfile>classDict.html</anchorfile>
      <anchor>a46561fe694c0bba6e7ed3703c47bf43f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DictationCommandManager</name>
    <filename>classDictationCommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classDictationCommandManager.html</anchorfile>
      <anchor>a9c5e1092b4ae789ca3961849e1a6dd8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classDictationCommandManager.html</anchorfile>
      <anchor>a55dbe02c9a5ce4714e041a85cb8604cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classDictationCommandManager.html</anchorfile>
      <anchor>a3b4298df7cd2ac14de2b6ad961a42a12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classDictationCommandManager.html</anchorfile>
      <anchor>a70cc4528fd093b4449dee970b499101e</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DictationCommandManager</name>
      <anchorfile>classDictationCommandManager.html</anchorfile>
      <anchor>a4fb3adbcd0f0d98572d9aa48381ca220</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>trigger</name>
      <anchorfile>classDictationCommandManager.html</anchorfile>
      <anchor>ab27e309ffb742e3bef3a99b4f3a79934</anchor>
      <arglist>(const QString &amp;triggerName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DragTableView</name>
    <filename>classDragTableView.html</filename>
    <member kind="function">
      <type></type>
      <name>DragTableView</name>
      <anchorfile>classDragTableView.html</anchorfile>
      <anchor>a043518fdb1817e8b478440877f63c1a3</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DragTableView</name>
      <anchorfile>classDragTableView.html</anchorfile>
      <anchor>a701c9d0d183c765c03ede8d11dd237ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mousePressEvent</name>
      <anchorfile>classDragTableView.html</anchorfile>
      <anchor>a7256a44f0c9d3fbf58506bac28daa16e</anchor>
      <arglist>(QMouseEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classDragTableView.html</anchorfile>
      <anchor>a75aabcd304380c754e29ea8759a1553d</anchor>
      <arglist>(QMouseEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>startDrag</name>
      <anchorfile>classDragTableView.html</anchorfile>
      <anchor>a93e4afc5aa32bcbd6136837ffd6df3e2</anchor>
      <arglist>(Qt::DropActions)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DropListView</name>
    <filename>classDropListView.html</filename>
    <member kind="function">
      <type></type>
      <name>DropListView</name>
      <anchorfile>classDropListView.html</anchorfile>
      <anchor>ae132fd510ce42a3f14369063c420752e</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DropListView</name>
      <anchorfile>classDropListView.html</anchorfile>
      <anchor>a62fd757d0ecd869f514537c8f1d46084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragEnterEvent</name>
      <anchorfile>classDropListView.html</anchorfile>
      <anchor>a9dec029cf7a178e02f9da46ae188600e</anchor>
      <arglist>(QDragEnterEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dropEvent</name>
      <anchorfile>classDropListView.html</anchorfile>
      <anchor>a9c98e1287a79723a6386d642d4dbd0e6</anchor>
      <arglist>(QDropEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragMoveEvent</name>
      <anchorfile>classDropListView.html</anchorfile>
      <anchor>accbcfbde9bd365958b3f6fa4c2e6b856</anchor>
      <arglist>(QDragMoveEvent *event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DropListWidget</name>
    <filename>classDropListWidget.html</filename>
    <member kind="function">
      <type></type>
      <name>DropListWidget</name>
      <anchorfile>classDropListWidget.html</anchorfile>
      <anchor>a7ce3159db5c8eb5086181c4c0c728c6b</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DropListWidget</name>
      <anchorfile>classDropListWidget.html</anchorfile>
      <anchor>a747b394b3198a807c117490687febd9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragEnterEvent</name>
      <anchorfile>classDropListWidget.html</anchorfile>
      <anchor>ae2722c0fb4e3307eaaa35c046d537b30</anchor>
      <arglist>(QDragEnterEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dropEvent</name>
      <anchorfile>classDropListWidget.html</anchorfile>
      <anchor>a7f1814f1971d18d330ec95f08129765a</anchor>
      <arglist>(QDropEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>dragMoveEvent</name>
      <anchorfile>classDropListWidget.html</anchorfile>
      <anchor>a14a8faa30126eda8b307845b6257fd15</anchor>
      <arglist>(QDragMoveEvent *event)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DS_BUFFER</name>
    <filename>structDS__BUFFER.html</filename>
    <member kind="variable">
      <type>DS_FILTER *</type>
      <name>fir</name>
      <anchorfile>structDS__BUFFER.html</anchorfile>
      <anchor>ac81a69b6578fef8095f2b9d02bd1c966</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>buf</name>
      <anchorfile>structDS__BUFFER.html</anchorfile>
      <anchor>a6eba5602ee38045bed231ef7c33a2389</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>buflen</name>
      <anchorfile>structDS__BUFFER.html</anchorfile>
      <anchor>a65995899c9fd884ffeb13d1ed974126d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DS_FILTER</name>
    <filename>structDS__FILTER.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>decrate</name>
      <anchorfile>structDS__FILTER.html</anchorfile>
      <anchor>a74d0e858c4594e7ab046635bf30efceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>intrate</name>
      <anchorfile>structDS__FILTER.html</anchorfile>
      <anchor>a698e0bac37d0caaf01599123274d945d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>hdn</name>
      <anchorfile>structDS__FILTER.html</anchorfile>
      <anchor>a8e8a627da95c05e608878d0f4763f589</anchor>
      <arglist>[DS_RBSIZE+1]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>hdn_len</name>
      <anchorfile>structDS__FILTER.html</anchorfile>
      <anchor>a99f29c17b2774ac491ec9c4a8622f19b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>delay</name>
      <anchorfile>structDS__FILTER.html</anchorfile>
      <anchor>a829dfd1b4cb955104ffab71725eb8d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>structDS__FILTER.html</anchorfile>
      <anchor>a4e4db5e5a0e1cf8a62df9c91f814d29f</anchor>
      <arglist>[DS_BUFSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>structDS__FILTER.html</anchorfile>
      <anchor>a6708ce0b04a8daac055054c1ba57776d</anchor>
      <arglist>[DS_BUFSIZE_Y]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rb</name>
      <anchorfile>structDS__FILTER.html</anchorfile>
      <anchor>aec54ee2f6580cecdfea020430df232e6</anchor>
      <arglist>[DS_RBSIZE]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>indx</name>
      <anchorfile>structDS__FILTER.html</anchorfile>
      <anchor>ae76e8bd0fc63c73954b54b4d678edfaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bp</name>
      <anchorfile>structDS__FILTER.html</anchorfile>
      <anchor>adfd0d5e579c96073359a15f10628866b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>count</name>
      <anchorfile>structDS__FILTER.html</anchorfile>
      <anchor>a675f43ed838955e5cbf063f817a5ddfd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EditWordDialog</name>
    <filename>classEditWordDialog.html</filename>
    <member kind="function">
      <type></type>
      <name>EditWordDialog</name>
      <anchorfile>classEditWordDialog.html</anchorfile>
      <anchor>a892d38cdab6ea4df45f69c2a3161bd12</anchor>
      <arglist>(QWidget *parent=0, Qt::WindowFlags f=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exec</name>
      <anchorfile>classEditWordDialog.html</anchorfile>
      <anchor>a30e1dca19c02b342f054955f92a470b0</anchor>
      <arglist>(Word *word)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ENERGYWork</name>
    <filename>structENERGYWork.html</filename>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>max_last</name>
      <anchorfile>structENERGYWork.html</anchorfile>
      <anchor>a5511d59457841671aa890dfa17e15586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>min_last</name>
      <anchorfile>structENERGYWork.html</anchorfile>
      <anchor>adca9418231f7e969eaaadc9f1e1ef583</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>max</name>
      <anchorfile>structENERGYWork.html</anchorfile>
      <anchor>ab0e3f7fcc5d00e6684ed96c946bbecc8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EventHandler</name>
    <filename>classEventHandler.html</filename>
    <member kind="function">
      <type>void</type>
      <name>click</name>
      <anchorfile>classEventHandler.html</anchorfile>
      <anchor>ae800a844e8e973278631bf7a48cb69c4</anchor>
      <arglist>(int x, int y, EventSimulation::ClickMode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendWord</name>
      <anchorfile>classEventHandler.html</anchorfile>
      <anchor>a5bf9ba910f354ebdd4480651c530682a</anchor>
      <arglist>(const QString &amp;word) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendShortcut</name>
      <anchorfile>classEventHandler.html</anchorfile>
      <anchor>a2eb28044d9ab2fc8bf8775cbb5acec8d</anchor>
      <arglist>(const QKeySequence &amp;shortcut, EventSimulation::PressMode mode=(EventSimulation::PressMode)(EventSimulation::Press|EventSimulation::Release)) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventHandler</name>
      <anchorfile>classEventHandler.html</anchorfile>
      <anchor>a8fe27b69582cce5c6a89a0b134bc8158</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendKey</name>
      <anchorfile>classEventHandler.html</anchorfile>
      <anchor>a2b9863de727e15838accc4c96b354abf</anchor>
      <arglist>(const QChar &amp;key) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ExecutableCommand</name>
    <filename>classExecutableCommand.html</filename>
    <base>Command</base>
    <member kind="function">
      <type>const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classExecutableCommand.html</anchorfile>
      <anchor>aaf772c0bd5eed91bdd71f6a3fb234012</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classExecutableCommand.html</anchorfile>
      <anchor>a2e8bd929e78448c72ba9e4e0c8f8446b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classExecutableCommand.html</anchorfile>
      <anchor>affe5ecec0666a737fa672c6f0deca2bf</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classExecutableCommand.html</anchorfile>
      <anchor>ade0260ef353755114ac806dee297f7dd</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>const KUrl</type>
      <name>getWorkingDirectory</name>
      <anchorfile>classExecutableCommand.html</anchorfile>
      <anchor>af089bb8bb23b5a28446c286b8bc8722d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classExecutableCommand.html</anchorfile>
      <anchor>acfd406bd3782bf52421183b5a067c496</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classExecutableCommand.html</anchorfile>
      <anchor>ae5eeba26107d6780ad99e38c1144c986</anchor>
      <arglist>(int *state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ExecutableCommandManager</name>
    <filename>classExecutableCommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classExecutableCommandManager.html</anchorfile>
      <anchor>af56380bd552d5d340f428088a2daf876</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classExecutableCommandManager.html</anchorfile>
      <anchor>ab8611ce4002b2e74ed53f3c0c7a10074</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CreateCommandWidget *</type>
      <name>getCreateCommandWidget</name>
      <anchorfile>classExecutableCommandManager.html</anchorfile>
      <anchor>a859ff960753c9180d95dcbd24de3293b</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExecutableCommandManager</name>
      <anchorfile>classExecutableCommandManager.html</anchorfile>
      <anchor>ad1ac0c763ab9bdd73c58c7d0e86ed15f</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>shouldAcceptCommand</name>
      <anchorfile>classExecutableCommandManager.html</anchorfile>
      <anchor>a01c6fb9650fa9cd7c6be2293d391e172</anchor>
      <arglist>(Command *command)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FBankInfo</name>
    <filename>structFBankInfo.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>fftN</name>
      <anchorfile>structFBankInfo.html</anchorfile>
      <anchor>af1621b6bb27cd5fa57b52a330d697d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>structFBankInfo.html</anchorfile>
      <anchor>a3ef6440e6f434bcb720088c95d50b52b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>klo</name>
      <anchorfile>structFBankInfo.html</anchorfile>
      <anchor>ae2ac72930949d709c8bd18206576995a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>khi</name>
      <anchorfile>structFBankInfo.html</anchorfile>
      <anchor>ad21f40bdf4374bd29da25edba7eb11cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fres</name>
      <anchorfile>structFBankInfo.html</anchorfile>
      <anchor>ae5f62e1f9b51718d58e0e0eff95fea1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>cf</name>
      <anchorfile>structFBankInfo.html</anchorfile>
      <anchor>a9c045f8c4d4460181bfd5ada0e76b9fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short *</type>
      <name>loChan</name>
      <anchorfile>structFBankInfo.html</anchorfile>
      <anchor>a5cbc89297ee0c05661b086a8d8d0d4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>loWt</name>
      <anchorfile>structFBankInfo.html</anchorfile>
      <anchor>a0a5a6fcf0d88e0689f9b5ac3ebef9f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>Re</name>
      <anchorfile>structFBankInfo.html</anchorfile>
      <anchor>ab36e12c392505ca29d57764567ec4b71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>Im</name>
      <anchorfile>structFBankInfo.html</anchorfile>
      <anchor>a41cd95b896263b880f1ccf92caf5229c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FilterCommandManager</name>
    <filename>classFilterCommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classFilterCommandManager.html</anchorfile>
      <anchor>a5024561b221af07fa24a2dcb6de7c68b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classFilterCommandManager.html</anchorfile>
      <anchor>a61844a1e737d66f6a9f453c2c37e1b83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classFilterCommandManager.html</anchorfile>
      <anchor>ad6fdb0829c373e981a9fb655ccd01146</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classFilterCommandManager.html</anchorfile>
      <anchor>a111f11f8385b3b3b81dcdde8fc6e6421</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FilterCommandManager</name>
      <anchorfile>classFilterCommandManager.html</anchorfile>
      <anchor>a295244f426c1a04620b264d41b89ed85</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>trigger</name>
      <anchorfile>classFilterCommandManager.html</anchorfile>
      <anchor>a6545d1ccf5b6a568864e51cc4cdcb6bb</anchor>
      <arglist>(const QString &amp;triggerName)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GCODEBOOK</name>
    <filename>structGCODEBOOK.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structGCODEBOOK.html</anchorfile>
      <anchor>acf54ab56aaf876bb6092bc79273d318d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num</name>
      <anchorfile>structGCODEBOOK.html</anchorfile>
      <anchor>af18e4c4f4d3c747317455eae625b3a79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_Dens **</type>
      <name>d</name>
      <anchorfile>structGCODEBOOK.html</anchorfile>
      <anchor>a1a03a31cb7b41996d84e12a39a6ac506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>id</name>
      <anchorfile>structGCODEBOOK.html</anchorfile>
      <anchor>a6fc3bec5cc5fb5142650d1be5b6d0be8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>GeneralSettings</name>
    <filename>classGeneralSettings.html</filename>
    <member kind="function">
      <type></type>
      <name>~GeneralSettings</name>
      <anchorfile>classGeneralSettings.html</anchorfile>
      <anchor>a5de8d95efec990cc8c6dfa6bbaca19d5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>GreedyReceiver</name>
    <filename>classGreedyReceiver.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>greedyTriggerRawList</name>
      <anchorfile>classGreedyReceiver.html</anchorfile>
      <anchor>ab7534b1318d89398b3f7c5447c830635</anchor>
      <arglist>(RecognitionResultList *results)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>greedyTriggerRaw</name>
      <anchorfile>classGreedyReceiver.html</anchorfile>
      <anchor>a8e3d431a540edf40f7935d82955c481c</anchor>
      <arglist>(const RecognitionResult &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>greedyTrigger</name>
      <anchorfile>classGreedyReceiver.html</anchorfile>
      <anchor>aaf9a468692d4dba42fdb2f71f180f734</anchor>
      <arglist>(const QString &amp;sentence)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startGreedy</name>
      <anchorfile>classGreedyReceiver.html</anchorfile>
      <anchor>a2bab73207646610864371c1fa59b9937</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopGreedy</name>
      <anchorfile>classGreedyReceiver.html</anchorfile>
      <anchor>ae04524dd9c644441d4816ef7eec6615b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GreedyReceiver</name>
      <anchorfile>classGreedyReceiver.html</anchorfile>
      <anchor>aa885df4f737aba0215ef3c3f28069e11</anchor>
      <arglist>(CommandManager *manager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GreedyReceiver</name>
      <anchorfile>classGreedyReceiver.html</anchorfile>
      <anchor>acb826aef861d8b09cd4c74ba5870723d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GS_SET</name>
    <filename>structGS__SET.html</filename>
    <member kind="variable">
      <type>HTK_HMM_State *</type>
      <name>state</name>
      <anchorfile>structGS__SET.html</anchorfile>
      <anchor>a7bcca1052cb78c7657038cf176b3c707</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HMM</name>
    <filename>structHMM.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>len</name>
      <anchorfile>structHMM.html</anchorfile>
      <anchor>af6e886fcee3f2473032ccf923b0ecec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMM_STATE *</type>
      <name>state</name>
      <anchorfile>structHMM.html</anchorfile>
      <anchor>a97f802aa1e8651c1efa55b15978369a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>accept_ac_a</name>
      <anchorfile>structHMM.html</anchorfile>
      <anchor>a7165b527d1d74c934d4ce754b051ce40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HMM_basephone</name>
    <filename>structHMM__basephone.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>num</name>
      <anchorfile>structHMM__basephone.html</anchorfile>
      <anchor>a5a33793fef6cf4fda0f1655d238a061a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bgnnum</name>
      <anchorfile>structHMM__basephone.html</anchorfile>
      <anchor>ad914297cb6f9eba8d882a9dbc2577a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>endnum</name>
      <anchorfile>structHMM__basephone.html</anchorfile>
      <anchor>a5d67135bfb12cd00cb94e7e647cef36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>root</name>
      <anchorfile>structHMM__basephone.html</anchorfile>
      <anchor>a0083cffc7c4347c6d2356658ee471074</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HMM_CDSET_INFO</name>
    <filename>structHMM__CDSET__INFO.html</filename>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>cdtree</name>
      <anchorfile>structHMM__CDSET__INFO.html</anchorfile>
      <anchor>a13066773756ce2b135b144e0bd375aec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HMM_STATE</name>
    <filename>structHMM__STATE.html</filename>
    <member kind="variable">
      <type>A_CELL *</type>
      <name>ac</name>
      <anchorfile>structHMM__STATE.html</anchorfile>
      <anchor>ab63dc56f6357e93ec3e945fdfcfe8f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>is_pseudo_state</name>
      <anchorfile>structHMM__STATE.html</anchorfile>
      <anchor>a8c9b35f2ea4519ee68482921d89348d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_State *</type>
      <name>state</name>
      <anchorfile>structHMM__STATE.html</anchorfile>
      <anchor>a7e297e7bce9470a832b8991eba877c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CD_State_Set *</type>
      <name>cdset</name>
      <anchorfile>structHMM__STATE.html</anchorfile>
      <anchor>ab360ef91e61dbe276f5a154ae5ebd624</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HTK_HMM_INFO</name>
    <filename>structHTK__HMM__INFO.html</filename>
    <member kind="variable">
      <type>HTK_HMM_Options</type>
      <name>opt</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>ab31f95e8b7866950dfb71caac9961601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_Trans *</type>
      <name>trstart</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a32ebc84267a89a4093f7e241b047efa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_Var *</type>
      <name>vrstart</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>ad6526d9b04f10450c19d0974583ec15e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_Dens *</type>
      <name>dnstart</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a57cd1df15629303adbc238856de20be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_PDF *</type>
      <name>pdfstart</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a29e1f1a7dbb34f94384b638432bb6ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_StreamWeight *</type>
      <name>swstart</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a419ea66a926990bc41831b96953d1f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_State *</type>
      <name>ststart</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a72e9bd8d05295447badffe616a79950a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_Data *</type>
      <name>start</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a635f3f8a63cbab400f763327af284fb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMM_Logical *</type>
      <name>lgstart</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a715f29717009361a9f65b0edf4eea8e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>tr_root</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>af5f85b49ed814142003508c8c4349ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>vr_root</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>aaec2f4ed05bb12b1cc2aeffa6644fbd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>sw_root</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a5521b889f95be2fdd866f80f826a6f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>dn_root</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>afb03423fea382cdf04a9f90b5e944e5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>pdf_root</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>ad7f04377366e8a10b3ab0f711c7a0f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>st_root</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a71ebf96d9131951e501c36b0d47e12f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>physical_root</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a13010478588744eee587c6259313974b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>logical_root</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a948b05561f5a2cc13c5a2c684c7a0ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>codebook_root</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a494ee9c819c2632e8a1a96e1d0049e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMM_basephone</type>
      <name>basephone</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a8981eff399ecf44a847c4ab70a4554b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMM_CDSET_INFO</type>
      <name>cdset_info</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a5c96bca0cd8870381338e6d7a20dc6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>need_multipath</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a9c9c4cef31d407af5f9131d43101db86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>multipath</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>ad39a514de739c8151f75848df6b85f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>is_triphone</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>aab589696a6f2a5dd9cdfd6b09ec52473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>is_tied_mixture</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a2577f181580201a3557bae4a0473b6ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>cdset_method</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>ad3fa6ac87c6a31a0b43527c21cdaa7c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>cdmax_num</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>ab00532743a43931c56bc841c782ce21d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMM_Logical *</type>
      <name>sp</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a0073c748f7032959d4414185a748aabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>iwsp_penalty</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>adafe910784a7a698c76cde6ac6c6a987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>variance_inversed</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a7f37cf1fa879e0ecaa9229dfaebf51c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>totalmixnum</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a173859b9efefdb4a03b79dd903168769</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>totalstatenum</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a0af4a5a4709b3c11850013423058a594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>totalhmmnum</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a7ba45927f16084babe954511078b96d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>totallogicalnum</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a55e7ceb13264ab87bc17297134f45c8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>totalpseudonum</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>ae934a42458db919f4d0d1531cd7e01a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>totalpdfnum</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>adf43ba7f2c42fd01155e9040872923fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>codebooknum</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>ab02dbfaf05df5677df4d38f6a80d185d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxcodebooksize</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>aa8cd60a66a58f7cb478034aacc8ee783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxmixturenum</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>afb2fed3d8981b9f51aa1a568ccb1b661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxstatenum</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a4651a0fdebad4835949694769c36f64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BMALLOC_BASE *</type>
      <name>mroot</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>aef1b7efdd22a7971b14a05848d210433</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BMALLOC_BASE *</type>
      <name>lroot</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a61e2e6b41c26edfbb8cbee114af1138b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BMALLOC_BASE *</type>
      <name>cdset_root</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>aaff531f802e5fc892729a60660f4512c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>tmp_mixnum</name>
      <anchorfile>structHTK__HMM__INFO.html</anchorfile>
      <anchor>a13318c79765c722ec1ffac27b21a2827</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HTK_HMM_Options</name>
    <filename>structHTK__HMM__Options.html</filename>
    <member kind="variable">
      <type>HTK_HMM_StreamInfo</type>
      <name>stream_info</name>
      <anchorfile>structHTK__HMM__Options.html</anchorfile>
      <anchor>af18f64986396371a90458117c91bc5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>vec_size</name>
      <anchorfile>structHTK__HMM__Options.html</anchorfile>
      <anchor>aa2bd8d48bff66b86d731a5156bc47da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>cov_type</name>
      <anchorfile>structHTK__HMM__Options.html</anchorfile>
      <anchor>a1c93ddff61f1f4609dfe8575376ba70d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>dur_type</name>
      <anchorfile>structHTK__HMM__Options.html</anchorfile>
      <anchor>adaf31758a029e604338c42476bf02f1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>param_type</name>
      <anchorfile>structHTK__HMM__Options.html</anchorfile>
      <anchor>a709666969f15befa9ad914b29b43f517</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HTK_HMM_StreamInfo</name>
    <filename>structHTK__HMM__StreamInfo.html</filename>
    <member kind="variable">
      <type>short</type>
      <name>num</name>
      <anchorfile>structHTK__HMM__StreamInfo.html</anchorfile>
      <anchor>a34869a95ba4732c67ce96b138b34b7a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>vsize</name>
      <anchorfile>structHTK__HMM__StreamInfo.html</anchorfile>
      <anchor>acb94a76cea7aa96ff87d0300be2c4ca2</anchor>
      <arglist>[MAXSTREAMNUM]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HTK_Param</name>
    <filename>structHTK__Param.html</filename>
    <member kind="variable">
      <type>HTK_Param_Header</type>
      <name>header</name>
      <anchorfile>structHTK__Param.html</anchorfile>
      <anchor>a5025a0d95938c1dc2a7d080771fce71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>samplenum</name>
      <anchorfile>structHTK__Param.html</anchorfile>
      <anchor>a6cf1b290c7ebbfb69e34f3390e45119d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>veclen</name>
      <anchorfile>structHTK__Param.html</anchorfile>
      <anchor>a2c59c86c2473483c7368c0cb82d0e68d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECT **</type>
      <name>parvec</name>
      <anchorfile>structHTK__Param.html</anchorfile>
      <anchor>ad82fb4b90038aa1605bf195bcc59c03d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>veclen_alloc</name>
      <anchorfile>structHTK__Param.html</anchorfile>
      <anchor>afcc144f5718d47ed8be1bfd71b38b1ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>samplenum_alloc</name>
      <anchorfile>structHTK__Param.html</anchorfile>
      <anchor>a8a70f8279ffbd6dec4b35f62d3ca1ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BMALLOC_BASE *</type>
      <name>mroot</name>
      <anchorfile>structHTK__Param.html</anchorfile>
      <anchor>a6523c3ff21243bb7b572216bdec7b5f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HTK_Param_Header</name>
    <filename>structHTK__Param__Header.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>samplenum</name>
      <anchorfile>structHTK__Param__Header.html</anchorfile>
      <anchor>ac1306486fbb97442f5e58e17ab009393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>wshift</name>
      <anchorfile>structHTK__Param__Header.html</anchorfile>
      <anchor>a1194e9120da841497d51fe9d03f3f274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>sampsize</name>
      <anchorfile>structHTK__Param__Header.html</anchorfile>
      <anchor>a19f0de1b4b2146df00e29cb5ca90bfbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>samptype</name>
      <anchorfile>structHTK__Param__Header.html</anchorfile>
      <anchor>a4a8cdf61a61ab42837ee79b35451a10a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportDict</name>
    <filename>classImportDict.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>deleteDict</name>
      <anchorfile>classImportDict.html</anchorfile>
      <anchor>adb784b7c3f861b074d7729f79a824014</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImportDict</name>
      <anchorfile>classImportDict.html</anchorfile>
      <anchor>a7a6605ddcc915672aab493536954ab7d</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classImportDict.html</anchorfile>
      <anchor>a6427916caeed58936c5f7484e67fe1e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parseWordList</name>
      <anchorfile>classImportDict.html</anchorfile>
      <anchor>a77e6b24357a448ffc2018a87dbe97e82</anchor>
      <arglist>(QString pathToDict, QString encoding, int type, bool deleteFileWhenDone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImportDict</name>
      <anchorfile>classImportDict.html</anchorfile>
      <anchor>afd99353fa09bcdb4c56cc43393e0af34</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportDictBOMPDownloadPage</name>
    <filename>classImportDictBOMPDownloadPage.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportDictBOMPDownloadPage</name>
      <anchorfile>classImportDictBOMPDownloadPage.html</anchorfile>
      <anchor>a8b80464e905fb871833e606ed8d38f50</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImportDictBOMPDownloadPage</name>
      <anchorfile>classImportDictBOMPDownloadPage.html</anchorfile>
      <anchor>ac8a331350b07bbd651515e4528f18bf8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportDictBOMPPage</name>
    <filename>classImportDictBOMPPage.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportDictBOMPPage</name>
      <anchorfile>classImportDictBOMPPage.html</anchorfile>
      <anchor>a53d45b22896d9b9c5eb01d0efa2fe2ac</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImportDictBOMPPage</name>
      <anchorfile>classImportDictBOMPPage.html</anchorfile>
      <anchor>ada56401e1a14375cf184f50ee324a060</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportDictIntroPage</name>
    <filename>classImportDictIntroPage.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportDictIntroPage</name>
      <anchorfile>classImportDictIntroPage.html</anchorfile>
      <anchor>a3cc75dd7d8aa596682b14a9566ea6034</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImportDictIntroPage</name>
      <anchorfile>classImportDictIntroPage.html</anchorfile>
      <anchor>a6d6433a21b8a014e206612e6c29bc8dc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportDictPLSPage</name>
    <filename>classImportDictPLSPage.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportDictPLSPage</name>
      <anchorfile>classImportDictPLSPage.html</anchorfile>
      <anchor>a73324e6099607cbb0dcfdb278cd7c417</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImportDictPLSPage</name>
      <anchorfile>classImportDictPLSPage.html</anchorfile>
      <anchor>a0353e04f4282bfd1281523df4fbe8dca</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportDictSelectSourcePage</name>
    <filename>classImportDictSelectSourcePage.html</filename>
    <member kind="function">
      <type>int</type>
      <name>nextId</name>
      <anchorfile>classImportDictSelectSourcePage.html</anchorfile>
      <anchor>a6b95e249cf9f23a7f0a45fbf1535d551</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImportDictSelectSourcePage</name>
      <anchorfile>classImportDictSelectSourcePage.html</anchorfile>
      <anchor>a4f3da13000a04180f13b8acfa678809a</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImportDictSelectSourcePage</name>
      <anchorfile>classImportDictSelectSourcePage.html</anchorfile>
      <anchor>a2bcc4db4e7395ab2cf2d3fdf5830d28a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportDictSPHINXPage</name>
    <filename>classImportDictSPHINXPage.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportDictSPHINXPage</name>
      <anchorfile>classImportDictSPHINXPage.html</anchorfile>
      <anchor>ad05640897c70d45730786c80258fe074</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImportDictSPHINXPage</name>
      <anchorfile>classImportDictSPHINXPage.html</anchorfile>
      <anchor>aee7a4badc9a5b363962c159812dc7141</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportDictView</name>
    <filename>classImportDictView.html</filename>
    <member kind="slot">
      <type>QWizardPage *</type>
      <name>createIntroPage</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>ad62bd698aa96395637002d33b0a4544b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>ImportDictSelectSourcePage *</type>
      <name>createSelectSourcePage</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>a873293edc0dc88caff3eeac07c679fc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>ImportDictBOMPPage *</type>
      <name>createImportBOMPPage</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>a4d2129a023e5067ae13411de64882717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>ImportDictBOMPDownloadPage *</type>
      <name>createImportBOMPDownloadPage</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>acf61afcbd9417a2704ff82dcd089f02b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QWizardPage *</type>
      <name>createImportLexiconPage</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>aa717a04a683804fe0e8a6ee856cb3f12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QWizardPage *</type>
      <name>createImportPLSPage</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>a1ed4c60648b790dfa2026f7619a7f3ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QWizardPage *</type>
      <name>createImportSPHINXPage</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>a64ee6501d0267229627eb5e020c8c460</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QWizardPage *</type>
      <name>createImportJuliusVocabularyPage</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>af14a58cc7e53ff707ea2e83d46d33a61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>ImportDictWorkingPage *</type>
      <name>createImportDictWorkingPage</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>af87de225341f61facab24a95c9ef4d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QWizardPage *</type>
      <name>createFinishedPage</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>a5d0f8de8d9be2cdd63af1accf2a1496d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImportDictView</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>a7fc799478e8fc1e41cee3eb94d781075</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImportDictView</name>
      <anchorfile>classImportDictView.html</anchorfile>
      <anchor>a7a40679efb522252e8f947bfccbf4294</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportDictWorkingPage</name>
    <filename>classImportDictWorkingPage.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>abort</name>
      <anchorfile>classImportDictWorkingPage.html</anchorfile>
      <anchor>ab69462487ef3a50c5d9fe8506b678d4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>displayStatus</name>
      <anchorfile>classImportDictWorkingPage.html</anchorfile>
      <anchor>ab197f84a18ef74f2f986c33303af8d0d</anchor>
      <arglist>(QString status)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>displayProgress</name>
      <anchorfile>classImportDictWorkingPage.html</anchorfile>
      <anchor>a79571d4c15148237e41470202d1ca7fe</anchor>
      <arglist>(int progress, int max)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>importHADIFIX</name>
      <anchorfile>classImportDictWorkingPage.html</anchorfile>
      <anchor>a5850f222c2c5ecd3834ed76d021e8bde</anchor>
      <arglist>(QString path)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>importLexicon</name>
      <anchorfile>classImportDictWorkingPage.html</anchorfile>
      <anchor>a1a4eec272b72b16c6de2ee5aa7bd14ff</anchor>
      <arglist>(QString path)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>isComplete</name>
      <anchorfile>classImportDictWorkingPage.html</anchorfile>
      <anchor>aa75b97f95fc963959b5d5c26701ed726</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializePage</name>
      <anchorfile>classImportDictWorkingPage.html</anchorfile>
      <anchor>a2134ce4bbb1f9e381d646ae7dc671428</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImportDictWorkingPage</name>
      <anchorfile>classImportDictWorkingPage.html</anchorfile>
      <anchor>a25d7a2db8b06de1ee4cbe207bcd5f099</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImportDictWorkingPage</name>
      <anchorfile>classImportDictWorkingPage.html</anchorfile>
      <anchor>a42c7fd1e94632520be6a06da7e31d141</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportGrammar</name>
    <filename>classImportGrammar.html</filename>
  </compound>
  <compound kind="class">
    <name>ImportGrammarSelectInputPage</name>
    <filename>classImportGrammarSelectInputPage.html</filename>
  </compound>
  <compound kind="class">
    <name>ImportGrammarWizard</name>
    <filename>classImportGrammarWizard.html</filename>
  </compound>
  <compound kind="class">
    <name>ImportLexiconPage</name>
    <filename>classImportLexiconPage.html</filename>
    <member kind="function">
      <type></type>
      <name>~ImportLexiconPage</name>
      <anchorfile>classImportLexiconPage.html</anchorfile>
      <anchor>a3e5cb16925b5f38b629841f4df3ce9d6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportTrainingData</name>
    <filename>classImportTrainingData.html</filename>
  </compound>
  <compound kind="class">
    <name>ImportTrainingDirectory</name>
    <filename>classImportTrainingDirectory.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportTrainingDirectory</name>
      <anchorfile>classImportTrainingDirectory.html</anchorfile>
      <anchor>ae0a329ab84ed2dd00c0565b08de5d69c</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportTrainingDirectoryIntroPage</name>
    <filename>classImportTrainingDirectoryIntroPage.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportTrainingDirectoryIntroPage</name>
      <anchorfile>classImportTrainingDirectoryIntroPage.html</anchorfile>
      <anchor>aca485d23357ace67652c1b4c0316ef08</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportTrainingDirectoryWorkingPage</name>
    <filename>classImportTrainingDirectoryWorkingPage.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportTrainingDirectoryWorkingPage</name>
      <anchorfile>classImportTrainingDirectoryWorkingPage.html</anchorfile>
      <anchor>a6c8b3da604221b28c1545313ef38cbbb</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializePage</name>
      <anchorfile>classImportTrainingDirectoryWorkingPage.html</anchorfile>
      <anchor>a17c926b62557dc268d56e55ea4f1376d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportTrainingTextAddPage</name>
    <filename>classImportTrainingTextAddPage.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportTrainingTextAddPage</name>
      <anchorfile>classImportTrainingTextAddPage.html</anchorfile>
      <anchor>aa20f51d8d284a9f33290d6a790a3781f</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportTrainingTextLocalPage</name>
    <filename>classImportTrainingTextLocalPage.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportTrainingTextLocalPage</name>
      <anchorfile>classImportTrainingTextLocalPage.html</anchorfile>
      <anchor>a0a503215ef82aefd9191e8dcd83f7c3d</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportTrainingTexts</name>
    <filename>classImportTrainingTexts.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportTrainingTexts</name>
      <anchorfile>classImportTrainingTexts.html</anchorfile>
      <anchor>a3403ae812360b0c8a3036206fec5e2d4</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classImportTrainingTexts.html</anchorfile>
      <anchor>a9be6176ef8495d656dc59b931eda62ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QWizardPage *</type>
      <name>createIntroPage</name>
      <anchorfile>classImportTrainingTexts.html</anchorfile>
      <anchor>a2fae49d9f9bee7ef4e25b55d0e13d24a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QWizardPage *</type>
      <name>createSourcePage</name>
      <anchorfile>classImportTrainingTexts.html</anchorfile>
      <anchor>affe330d1019d3f5c31d9f635adf14cd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QWizardPage *</type>
      <name>createLocalImportPage</name>
      <anchorfile>classImportTrainingTexts.html</anchorfile>
      <anchor>ab7985080000ee8c833fe0940f09f3b03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QWizardPage *</type>
      <name>createWorkingPage</name>
      <anchorfile>classImportTrainingTexts.html</anchorfile>
      <anchor>ac5d28c62a4d4941c8e8df3bc2522a179</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QWizardPage *</type>
      <name>createFinishedPage</name>
      <anchorfile>classImportTrainingTexts.html</anchorfile>
      <anchor>aae0ea91baf751a517b7d207b33f68f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImportTrainingTexts</name>
      <anchorfile>classImportTrainingTexts.html</anchorfile>
      <anchor>a4abd237cd0af6fff1803da20023815b2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportTrainingTextSelectSourcePage</name>
    <filename>classImportTrainingTextSelectSourcePage.html</filename>
    <member kind="function">
      <type></type>
      <name>ImportTrainingTextSelectSourcePage</name>
      <anchorfile>classImportTrainingTextSelectSourcePage.html</anchorfile>
      <anchor>a6b05fa80bb77b03887d20c82b7d2566c</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nextId</name>
      <anchorfile>classImportTrainingTextSelectSourcePage.html</anchorfile>
      <anchor>a49753a9c6f7fe8f5caa51f07f0faeb29</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ImportTrainingTextWorkingPage</name>
    <filename>classImportTrainingTextWorkingPage.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>startImport</name>
      <anchorfile>classImportTrainingTextWorkingPage.html</anchorfile>
      <anchor>a9f05a58b08814e9da7ec3631cfd42ca1</anchor>
      <arglist>(KUrl path)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>parseFile</name>
      <anchorfile>classImportTrainingTextWorkingPage.html</anchorfile>
      <anchor>a577f50b0c7524aa921632d9ea5b6f43f</anchor>
      <arglist>(QString path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImportTrainingTextWorkingPage</name>
      <anchorfile>classImportTrainingTextWorkingPage.html</anchorfile>
      <anchor>ac0c823ce4655ca0a273ee8d228d55f54</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InlineWidget</name>
    <filename>classInlineWidget.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classInlineWidget.html</anchorfile>
      <anchor>a9b9e4578b8c8d3e38d416461b1fc7b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classInlineWidget.html</anchorfile>
      <anchor>adc8d260438226c59f1b439ce9c65289b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>close</name>
      <anchorfile>classInlineWidget.html</anchorfile>
      <anchor>a959c1d289f4faa9bc5bca55403c55970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>exec</name>
      <anchorfile>classInlineWidget.html</anchorfile>
      <anchor>a5a14f7eaa43a2edf5ce33493966d93aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InlineWidget</name>
      <anchorfile>classInlineWidget.html</anchorfile>
      <anchor>a1995239877f2f32be77562531510cfed</anchor>
      <arglist>(QString title, KIcon icon, QString desc, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InlineWidget</name>
      <anchorfile>classInlineWidget.html</anchorfile>
      <anchor>a37f7f9ede99d538fa40855157e7163d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisible</name>
      <anchorfile>classInlineWidget.html</anchorfile>
      <anchor>ae5835abfe371f5aae07dbbc2173759e7</anchor>
      <arglist>(bool visible)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InlineWidgetView</name>
    <filename>classInlineWidgetView.html</filename>
    <member kind="function">
      <type></type>
      <name>InlineWidgetView</name>
      <anchorfile>classInlineWidgetView.html</anchorfile>
      <anchor>a0cd649946e46fb53fb50f8329fec1693</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerPage</name>
      <anchorfile>classInlineWidgetView.html</anchorfile>
      <anchor>a5950a1666002adfb2ad52a3ccf926e41</anchor>
      <arglist>(InlineWidget *page)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keyPressEvent</name>
      <anchorfile>classInlineWidgetView.html</anchorfile>
      <anchor>a53890a2351c813861ff9c8c516915acb</anchor>
      <arglist>(QKeyEvent *event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unRegisterPage</name>
      <anchorfile>classInlineWidgetView.html</anchorfile>
      <anchor>af2341f440ad85446602bae13cf571b01</anchor>
      <arglist>(InlineWidget *page)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unRegisterCurrentPage</name>
      <anchorfile>classInlineWidgetView.html</anchorfile>
      <anchor>a6073cf4b74e9c512aeeffbbd4cbe485b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InlineWidgetView</name>
      <anchorfile>classInlineWidgetView.html</anchorfile>
      <anchor>a3ccf0ba65aea75b94c17463a5cc24a60</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InputNumberCommandManager</name>
    <filename>classInputNumberCommandManager.html</filename>
    <base>CommandManager</base>
    <base>GreedyReceiver</base>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classInputNumberCommandManager.html</anchorfile>
      <anchor>aeaa95a86b4cc90ae6c33dfddce49e11e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classInputNumberCommandManager.html</anchorfile>
      <anchor>ae06abaf65c12451da208fd231a81060e</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classInputNumberCommandManager.html</anchorfile>
      <anchor>ae921d32203afe27fef540d3169d505d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classInputNumberCommandManager.html</anchorfile>
      <anchor>a46670b7bf9cc7c6b0dc1f9627b94985e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classInputNumberCommandManager.html</anchorfile>
      <anchor>ab53e67b97a2c6a7758957ddabab243f5</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputNumberCommandManager</name>
      <anchorfile>classInputNumberCommandManager.html</anchorfile>
      <anchor>a39bfb2117aecbefb7ab73953fd237a55</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JovieTTSProvider</name>
    <filename>classJovieTTSProvider.html</filename>
    <base>SimonTTSProvider</base>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>classJovieTTSProvider.html</anchorfile>
      <anchor>a827c99d00de17ba79f5ad504cee92e00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>uninitialize</name>
      <anchorfile>classJovieTTSProvider.html</anchorfile>
      <anchor>a9ef607c72976f2cede1883a8e46d7e1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSay</name>
      <anchorfile>classJovieTTSProvider.html</anchorfile>
      <anchor>aa0108d58f5221b3f787c44189d0b54dc</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>say</name>
      <anchorfile>classJovieTTSProvider.html</anchorfile>
      <anchor>a2fcee1320fdd3279694ed9537d1bfd7b</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>interrupt</name>
      <anchorfile>classJovieTTSProvider.html</anchorfile>
      <anchor>ac4ce5c99b59d41e62b6733af8168038b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JsonCommand</name>
    <filename>classJsonCommand.html</filename>
    <base>Command</base>
    <member kind="function">
      <type>const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classJsonCommand.html</anchorfile>
      <anchor>a79cc8598b97c42f41c54952d2282ac88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classJsonCommand.html</anchorfile>
      <anchor>a0020c43d609f2ec55665c0d8381b119c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classJsonCommand.html</anchorfile>
      <anchor>ab2fd3a8f08876412042b53b1fc6081b8</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classJsonCommand.html</anchorfile>
      <anchor>a6ccc1d0e3051f6430e415979404ffd2a</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classJsonCommand.html</anchorfile>
      <anchor>afbfe418076d2821bffbffd6cd57b60b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classJsonCommand.html</anchorfile>
      <anchor>a41bb370b283e2a649150e57ca4472cc2</anchor>
      <arglist>(int *state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JsonCommandManager</name>
    <filename>classJsonCommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classJsonCommandManager.html</anchorfile>
      <anchor>a4192a34a1bf1dea9d0da40345379b00a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classJsonCommandManager.html</anchorfile>
      <anchor>a96bc6ec3a67cdceb7a826d7ef679fa47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classJsonCommandManager.html</anchorfile>
      <anchor>a0683c1594ddf78889960ce7ba7f5f3cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CreateCommandWidget *</type>
      <name>getCreateCommandWidget</name>
      <anchorfile>classJsonCommandManager.html</anchorfile>
      <anchor>a200a62e2c6a88e2ea40ec9e218578706</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classJsonCommandManager.html</anchorfile>
      <anchor>abce341376acf6e3305ef64f7c1e25a72</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonCommandManager</name>
      <anchorfile>classJsonCommandManager.html</anchorfile>
      <anchor>a254b6c02d3f8b15005060ab9b531fa04</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>shouldAcceptCommand</name>
      <anchorfile>classJsonCommandManager.html</anchorfile>
      <anchor>a8a30f41b46f0bf81259fd09d98667d81</anchor>
      <arglist>(Command *command)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KeyboardCommandManager</name>
    <filename>classKeyboardCommandManager.html</filename>
    <base>CommandManager</base>
    <base>GreedyReceiver</base>
    <member kind="slot">
      <type>bool</type>
      <name>greedyTrigger</name>
      <anchorfile>classKeyboardCommandManager.html</anchorfile>
      <anchor>a04452e799a475258b15d6657388b5311</anchor>
      <arglist>(const QString &amp;inputText)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classKeyboardCommandManager.html</anchorfile>
      <anchor>a6f80acf006a4c67589a5b6d4ade62302</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classKeyboardCommandManager.html</anchorfile>
      <anchor>a1a17a9674eb3277697acb7cbd78f2b4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classKeyboardCommandManager.html</anchorfile>
      <anchor>a0d2e7be6f8bae167fbab54586ad7d8ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classKeyboardCommandManager.html</anchorfile>
      <anchor>a3c3603cf3937dcdcf9715f9e99a8407b</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classKeyboardCommandManager.html</anchorfile>
      <anchor>ad919a588fb1da5cf856a6bf487b8b970</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyboardCommandManager</name>
      <anchorfile>classKeyboardCommandManager.html</anchorfile>
      <anchor>a1b17d10f384261938fd6b2a1acb6f071</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KSimondView</name>
    <filename>classKSimondView.html</filename>
    <member kind="function">
      <type></type>
      <name>KSimondView</name>
      <anchorfile>classKSimondView.html</anchorfile>
      <anchor>a062360e077e3901b43784f139a5ad9c5</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KSimondView</name>
      <anchorfile>classKSimondView.html</anchorfile>
      <anchor>acfa38ade2471ad11c7a8ea7b7ed9a0d3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LexiconDict</name>
    <filename>classLexiconDict.html</filename>
    <base>Dict</base>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classLexiconDict.html</anchorfile>
      <anchor>a1e989bb0ee6374155af4564dac6e8d3d</anchor>
      <arglist>(QString path, QString encodingName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LinuxProcessInfoGatherer</name>
    <filename>classLinuxProcessInfoGatherer.html</filename>
    <base>ProcessInfoGatherer</base>
    <member kind="signal">
      <type>void</type>
      <name>triggerHelper</name>
      <anchorfile>classLinuxProcessInfoGatherer.html</anchorfile>
      <anchor>a5ca56d60e786778d0753073fb15e24e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkCurrentProcesses</name>
      <anchorfile>classLinuxProcessInfoGatherer.html</anchorfile>
      <anchor>aa1d55e3c76362b13dc8f1cfd0578c38d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkActiveWindow</name>
      <anchorfile>classLinuxProcessInfoGatherer.html</anchorfile>
      <anchor>ac0a2f7674499723b389f973208b08c10</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ListCommand</name>
    <filename>classListCommand.html</filename>
    <base>Command</base>
    <base>GreedyReceiver</base>
    <member kind="slot">
      <type>bool</type>
      <name>greedyTrigger</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>af187b9fb920ef4f08761bd220cbedda2</anchor>
      <arglist>(const QString &amp;inputText)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>a7914b678c41c8625e2ef6797a3c37f9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>entrySelected</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>ad3f78d3aa2fccbbe121e2332bd951a70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>canceled</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>a448057bed2b9bf483205ba49147c772f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>af92c9c797052d3bdd25a2321cb72a3a0</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>a09488898794ad96b3e175355bacc2ad4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>a501d791f3468d3b69d09b83b4eafe633</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListCommand</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>a22b6a78c6667efc11cdf4ba67c8d0d28</anchor>
      <arglist>(CommandManager *parentManager, const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description, const QStringList &amp;commands, const QStringList &amp;iconSrcs, const QStringList &amp;commandTypes)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>getCommands</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>ac861e53fdfd6ea06b95ab8ec8c5f291b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>getIconSrcs</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>aea6ab316c75523a6cc50c61f7c4545f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>getCommandTypes</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>aee5a56432e8c134821f4812f9c42f523</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>acc47a7a6dd19b6cd76bd6a5c4e757d4e</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListCommand</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>acbeb567257f14a4854262b683f08316b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const QString</type>
      <name>staticCategoryText</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>a08c10308df98fd3d1368b758bcd40887</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const KIcon</type>
      <name>staticCategoryIcon</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>aa72131ddab403985cf1fabe8d4603ccc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ListCommand *</type>
      <name>createInstance</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>a528aeab9ede390bb34d69dc5f0c4eaf0</anchor>
      <arglist>(CommandManager *manager, const QDomElement &amp;element)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>a5ec2f56b8eec96cb5b518fd5bfc48fc7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>a30c78d92b26469e78a3681bb179bca73</anchor>
      <arglist>(int *state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>ae3085e1ce1397a213c9b4dc395de8db1</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ListCommand</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>a83e3eb574e4f6a5a6179fb600c3b4c19</anchor>
      <arglist>(CommandManager *parentManager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>classListCommand.html</anchorfile>
      <anchor>a57f496b01cf8ca222ec57afc65632e98</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ListCommandManager</name>
    <filename>classListCommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classListCommandManager.html</anchorfile>
      <anchor>a96308e5298d78ef2898ed1a2cf068fa2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classListCommandManager.html</anchorfile>
      <anchor>aadab08a2e01c57f2af7f0b0be9b5bb8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CreateCommandWidget *</type>
      <name>getCreateCommandWidget</name>
      <anchorfile>classListCommandManager.html</anchorfile>
      <anchor>a91d2f2f9ebc8e3d6c244f589de52dc2a</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classListCommandManager.html</anchorfile>
      <anchor>a5e412bc2e5d748d3a5d24f261d5138ba</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeCommandsPrivate</name>
      <anchorfile>classListCommandManager.html</anchorfile>
      <anchor>a2d19a5a279ce00ec6d07dfa264d83c29</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListCommandManager</name>
      <anchorfile>classListCommandManager.html</anchorfile>
      <anchor>ab8d065f2f0dfab15222d7aa8e2ab1762</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>shouldAcceptCommand</name>
      <anchorfile>classListCommandManager.html</anchorfile>
      <anchor>a0dac632775ee1f65066852b019ebf229</anchor>
      <arglist>(Command *c)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LM_PROB_CACHE</name>
    <filename>structLM__PROB__CACHE.html</filename>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>probcache</name>
      <anchorfile>structLM__PROB__CACHE.html</anchorfile>
      <anchor>a1938dc2b5ebe2d3e2098d7b9849ed062</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID *</type>
      <name>lastwcache</name>
      <anchorfile>structLM__PROB__CACHE.html</anchorfile>
      <anchor>a7c0fc9276901bde540138820e6ca57ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB **</type>
      <name>iw_sc_cache</name>
      <anchorfile>structLM__PROB__CACHE.html</anchorfile>
      <anchor>a02ac839822e75c483a3df774194d53f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iw_cache_num</name>
      <anchorfile>structLM__PROB__CACHE.html</anchorfile>
      <anchor>ac182ef32f12b22d430dcafce259d7ce3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LMFunc</name>
    <filename>structLMFunc.html</filename>
    <member kind="variable">
      <type>LOGPROB(*</type>
      <name>uniprob</name>
      <anchorfile>structLMFunc.html</anchorfile>
      <anchor>aae896b9d693d2ab3d566be0a8b1e5ff7</anchor>
      <arglist>)(WORD_INFO *, WORD_ID, LOGPROB)</arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB(*</type>
      <name>biprob</name>
      <anchorfile>structLMFunc.html</anchorfile>
      <anchor>a0a8af1011bc3be020402ee204cda9e40</anchor>
      <arglist>)(WORD_INFO *, WORD_ID, WORD_ID, LOGPROB)</arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB(*</type>
      <name>lmprob</name>
      <anchorfile>structLMFunc.html</anchorfile>
      <anchor>aea59eddef60a88ec17fe4c217e2e866c</anchor>
      <arglist>)(WORD_INFO *, WORD_ID *, int, WORD_ID, LOGPROB)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LogEntry</name>
    <filename>classLogEntry.html</filename>
  </compound>
  <compound kind="class">
    <name>Logger</name>
    <filename>classLogger.html</filename>
    <member kind="function" static="yes">
      <type>static QTextStream *</type>
      <name>init</name>
      <anchorfile>classLogger.html</anchorfile>
      <anchor>a8f49dc4187970e036de8a1985f118cd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>log</name>
      <anchorfile>classLogger.html</anchorfile>
      <anchor>ae13a44c6b252a7c6a2e763ee13627e3f</anchor>
      <arglist>(QString message, LogType type=Info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>close</name>
      <anchorfile>classLogger.html</anchorfile>
      <anchor>afee2bab560c2db0190c980884d33868c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LogManager</name>
    <filename>classLogManager.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>getDateList</name>
      <anchorfile>classLogManager.html</anchorfile>
      <anchor>a388e2b3b8a493c2d04215e5aead96dc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classLogManager.html</anchorfile>
      <anchor>a98812d3a4a1c68681c004e26f02dd813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>getDay</name>
      <anchorfile>classLogManager.html</anchorfile>
      <anchor>a01b20173707f83083d5945511155aeda</anchor>
      <arglist>(QDate day=QDate())</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>getAll</name>
      <anchorfile>classLogManager.html</anchorfile>
      <anchor>acf3a7acedd78f87f0952e8c353a9a426</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LogManager</name>
      <anchorfile>classLogManager.html</anchorfile>
      <anchor>aedab1387b9084cd125446f3b8d82861f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LogManager</name>
      <anchorfile>classLogManager.html</anchorfile>
      <anchor>a7e6291dd344ad467c049c39f65f6897c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFinishedReading</name>
      <anchorfile>classLogManager.html</anchorfile>
      <anchor>a9baeff252a2ed7c7f675ada1655bb9c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classLogManager.html</anchorfile>
      <anchor>a4fd6e566ce63b6505ae7a13e606322f0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LogView</name>
    <filename>classLogView.html</filename>
    <member kind="slot">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a9ef31c304dab37860d69779b427102c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>logReadFinished</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>ad98f161482800126c0e4721dd4be4af8</anchor>
      <arglist>(int exitCode)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>readLog</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a022059cd48d550ff0b7e6b31ce2fee25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>startLogLoad</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a36dfb616205effb9ecdab3bd80bbf867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>viewAll</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a30194f3b3c8360cb3e24727f4397f1df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>viewDay</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a144b5bc76b86ebc45c2e25db04641107</anchor>
      <arglist>(QDate day)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>abort</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a992b1553eef17f99b325c9fdf0d37caa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>reload</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a1114b6a0a16723493063d1c64d6f07c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>displayCancel</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>ad217bc635ffcce6dccfa62419ac2bb45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>displayReload</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>ac430aca407f0eaea8c678f2fb6586e1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>enableWidgets</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a7676a88544f36477dc32ce5d19c4ad11</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>af448eee9ea86e08a119b386d140ce6ce</anchor>
      <arglist>(QString status)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setProgress</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a1636c66ac7da36717ab2a69296a57731</anchor>
      <arglist>(int progress)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>selectDay</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a9c200c540a00cbde3f357f632ed94448</anchor>
      <arglist>(QDate day)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>displayDay</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a6d8a60e1c3687dd1702ad165451a2be8</anchor>
      <arglist>(QDate day)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>displayDay</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a106d9421574afa0b29da8987d276c9d4</anchor>
      <arglist>(QTreeWidgetItem *item)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>displayDates</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a8ae32ffc7ae1ad025e62d4af6004af8d</anchor>
      <arglist>(Dates daysAvailable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>completeDates</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>adfa1aacfcf5baf5c66aeec9bfe70b93a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>processEntries</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>aad3e0442c504c0a108682ca04ca10768</anchor>
      <arglist>(LogEntryList *entries, bool copy=false)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>processDates</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>afbb2feea56ecf62155b1a7e54f3c80e7</anchor>
      <arglist>(Dates daysAvailable)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>insertEntries</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>aade89b0577561d9ec658abb885974fdf</anchor>
      <arglist>(LogEntryList *entries)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>clean</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>ae7d465b51e91712acfeaec3e5be857c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>cleanAllChildren</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a9dd29314a7b04305f2267b85a42d94dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>deleteItem</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a6070df70705aa849a1c450706863463f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>deleteItem</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a2ad7a14ab77bf433e6e5410448ea6956</anchor>
      <arglist>(QTreeWidgetItem *item)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>deleteChildren</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>ad0462d97f15a7e7e04f58cef76742065</anchor>
      <arglist>(QTreeWidgetItem *item)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>deleteChildren</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>aee896729a0e21d71896df93b5cd0b3d9</anchor>
      <arglist>(int parentIndex)</arglist>
    </member>
    <member kind="slot">
      <type>LogEntryList *</type>
      <name>filterFor</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>ad926df4104d381210614f760ff5429db</anchor>
      <arglist>(LogEntryList *log, bool copy, const QString filter, const short type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LogView</name>
      <anchorfile>classLogView.html</anchorfile>
      <anchor>a806a7e4ca3f038286152869b018b924a</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MergeTerminals</name>
    <filename>classMergeTerminals.html</filename>
  </compound>
  <compound kind="class">
    <name>MergeTerminalsSelectTerminalsPage</name>
    <filename>classMergeTerminalsSelectTerminalsPage.html</filename>
  </compound>
  <compound kind="struct">
    <name>MFCCWork</name>
    <filename>structMFCCWork.html</filename>
    <member kind="variable">
      <type>float *</type>
      <name>bf</name>
      <anchorfile>structMFCCWork.html</anchorfile>
      <anchor>a80e2cd82027b2ca7823d1095c7e72bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>fbank</name>
      <anchorfile>structMFCCWork.html</anchorfile>
      <anchor>aab1d1db3891a818561de576202d59662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FBankInfo</type>
      <name>fb</name>
      <anchorfile>structMFCCWork.html</anchorfile>
      <anchor>a969aa79b2e92f73169096e551a3f56fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bflen</name>
      <anchorfile>structMFCCWork.html</anchorfile>
      <anchor>a225eef925dbaebde7610356f912a68f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sqrt2var</name>
      <anchorfile>structMFCCWork.html</anchorfile>
      <anchor>a4a1864761683a42264158f10262b00ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float *</type>
      <name>ssbuf</name>
      <anchorfile>structMFCCWork.html</anchorfile>
      <anchor>af640e3afc5270c67c48d8af471f718fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ssbuflen</name>
      <anchorfile>structMFCCWork.html</anchorfile>
      <anchor>abb0aab494726eb2c4ad3968bfc5c8f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ss_floor</name>
      <anchorfile>structMFCCWork.html</anchorfile>
      <anchor>afa6bf7852704767bfd1be58f93b1f76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ss_alpha</name>
      <anchorfile>structMFCCWork.html</anchorfile>
      <anchor>ae6cfc90b44af39da7fccd3a63bdf41bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MIXCACHE</name>
    <filename>structMIXCACHE.html</filename>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>score</name>
      <anchorfile>structMIXCACHE.html</anchorfile>
      <anchor>a196a5632013a6d03499bc205e6dae0fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>structMIXCACHE.html</anchorfile>
      <anchor>a33ecbdef2fa601a24246c114dddee486</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ModelAdapter</name>
    <filename>classModelAdapter.html</filename>
  </compound>
  <compound kind="class">
    <name>ModelAdapterHTK</name>
    <filename>classModelAdapterHTK.html</filename>
  </compound>
  <compound kind="class">
    <name>ModelCompilationSettings</name>
    <filename>classModelCompilationSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>ModelManagementUiProxy</name>
    <filename>classModelManagementUiProxy.html</filename>
  </compound>
  <compound kind="class">
    <name>ModelManager</name>
    <filename>classModelManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ModelSettings</name>
    <filename>classModelSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>MSAABackend</name>
    <filename>classMSAABackend.html</filename>
    <base>ATBackend</base>
    <member kind="function">
      <type>void</type>
      <name>startMonitoring</name>
      <anchorfile>classMSAABackend.html</anchorfile>
      <anchor>a8a9f74f4f4777e425244d52a1c08a010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>getWindowNames</name>
      <anchorfile>classMSAABackend.html</anchorfile>
      <anchor>a8fa63217e72450466658107031706c7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getWindowClassName</name>
      <anchorfile>classMSAABackend.html</anchorfile>
      <anchor>a5a1d170ea0d2979f42e6d3b53744e0bb</anchor>
      <arglist>(QString windowName)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getForegroundWindowName</name>
      <anchorfile>classMSAABackend.html</anchorfile>
      <anchor>a7f6d6bf5fe997db5bb9b05ae3dbb12ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ATOLocation</type>
      <name>getLocation</name>
      <anchorfile>classMSAABackend.html</anchorfile>
      <anchor>a10ecb5cca445522241588c6062a737af</anchor>
      <arglist>(QString windowName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NetworkSettings</name>
    <filename>classNetworkSettings.html</filename>
    <member kind="function">
      <type></type>
      <name>NetworkSettings</name>
      <anchorfile>classNetworkSettings.html</anchorfile>
      <anchor>aedf0b3864e5e011cc0e0d18929c2e67a</anchor>
      <arglist>(QWidget *parent, const QVariantList &amp;args=QVariantList())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NewAssociationCondition</name>
    <filename>classNewAssociationCondition.html</filename>
  </compound>
  <compound kind="class">
    <name>NewCondition</name>
    <filename>classNewCondition.html</filename>
  </compound>
  <compound kind="struct">
    <name>NGRAM_TUPLE_INFO</name>
    <filename>structNGRAM__TUPLE__INFO.html</filename>
    <member kind="variable">
      <type>NNID</type>
      <name>totalnum</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>a941d34d581b8e4afeb1c51ab5681a837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>is24bit</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>a63895cf2ed65265eff6eb9c7eadc90cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NNID</type>
      <name>bgnlistlen</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>ae6e646ce231a7071981c4a086f318b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NNID_UPPER *</type>
      <name>bgn_upper</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>aa1b2dd750b912f151187aa2df58b70e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NNID_LOWER *</type>
      <name>bgn_lower</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>ac21a395a4381afb90e5018f51fb924e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NNID *</type>
      <name>bgn</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>aca14712d3ffcbe752530c41317c7c722</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID *</type>
      <name>num</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>a94d4f6cd304fb256013df7ffb55de75b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID *</type>
      <name>nnid2wid</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>a3e0ba6ae5ddfcce9fe06f55d587c557b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>prob</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>af38644f2358ab0c32202628c1c7b7d43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NNID</type>
      <name>context_num</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>aa2e20ab9de0618ce808f330375f087a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>bo_wt</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>a9c6259caf5c45bc4de4d7eb816ea614a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>ct_compaction</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>a0fdf4d94c5e4002a29746e353c9eeaf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NNID_UPPER *</type>
      <name>nnid2ctid_upper</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>acfaefeab7f731a51dc33806ab40a6f27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NNID_LOWER *</type>
      <name>nnid2ctid_lower</name>
      <anchorfile>structNGRAM__TUPLE__INFO.html</anchorfile>
      <anchor>a128dd9fcdd3125e90892a6d0d99d236a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>OptionStr</name>
    <filename>structOptionStr.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structOptionStr.html</anchorfile>
      <anchor>afac3ed90ef38f23e119655c3397be58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>type</name>
      <anchorfile>structOptionStr.html</anchorfile>
      <anchor>a8b77e94974721304525b7731be648a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>desc</name>
      <anchorfile>structOptionStr.html</anchorfile>
      <anchor>a55e9f2bfb2782e47ba33b2fd07298051</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>supported</name>
      <anchorfile>structOptionStr.html</anchorfile>
      <anchor>a420f98d9167f45b5ff010e1dcdf2bc6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OrConditionAssociation</name>
    <filename>classOrConditionAssociation.html</filename>
    <base>ConditionAssociation</base>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>name</name>
      <anchorfile>classOrConditionAssociation.html</anchorfile>
      <anchor>a4cacfcbd5d4329a8de6f07bce1815b02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" protection="protected">
      <type>void</type>
      <name>evaluateConditions</name>
      <anchorfile>classOrConditionAssociation.html</anchorfile>
      <anchor>a04632551c5df16ad1c4f23662a0649c3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OSD</name>
    <filename>classOSD.html</filename>
    <member kind="function">
      <type></type>
      <name>OSD</name>
      <anchorfile>classOSD.html</anchorfile>
      <anchor>a481aeca219377aa920a201ae246c2562</anchor>
      <arglist>(QString message, int timeout, KIcon *icon=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OSD</name>
      <anchorfile>classOSD.html</anchorfile>
      <anchor>a93fde13b38ef9b4d34d09a34af260c75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classOSD.html</anchorfile>
      <anchor>a25e8ad55f7989a6c6eaa565731db1292</anchor>
      <arglist>(QMouseEvent *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PlaceCommand</name>
    <filename>classPlaceCommand.html</filename>
    <base>Command</base>
    <member kind="function">
      <type>const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classPlaceCommand.html</anchorfile>
      <anchor>aa87dd9b8737744b2d43dcd3b13f246e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classPlaceCommand.html</anchorfile>
      <anchor>abf6e87e37261c200f5fae2bbfdf356e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classPlaceCommand.html</anchorfile>
      <anchor>a474e73a8dbf2dc9671bbfba3ed5fb523</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlaceCommand</name>
      <anchorfile>classPlaceCommand.html</anchorfile>
      <anchor>ab53bd9d016c56f19c1bd2d37dbb235b5</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description, const KUrl &amp;url_)</arglist>
    </member>
    <member kind="function">
      <type>const KUrl</type>
      <name>getURL</name>
      <anchorfile>classPlaceCommand.html</anchorfile>
      <anchor>a8b51a4e04c64b186d62d73c10958276d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classPlaceCommand.html</anchorfile>
      <anchor>a014cbeaae3e74a1a70f0befa0495a052</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classPlaceCommand.html</anchorfile>
      <anchor>ae764e8ae6f484635664ae2e93859f1c1</anchor>
      <arglist>(int *state)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classPlaceCommand.html</anchorfile>
      <anchor>ac46c9c32cae1f8d9a97cbfdbcdc92746</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PlaceCommandManager</name>
    <filename>classPlaceCommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classPlaceCommandManager.html</anchorfile>
      <anchor>ae390724a7e7b3cc292af7ec2766098bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classPlaceCommandManager.html</anchorfile>
      <anchor>abd9e72ef85423311afe2f64ab470741a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CreateCommandWidget *</type>
      <name>getCreateCommandWidget</name>
      <anchorfile>classPlaceCommandManager.html</anchorfile>
      <anchor>ae2418e97a84376da802d629e520aaa96</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlaceCommandManager</name>
      <anchorfile>classPlaceCommandManager.html</anchorfile>
      <anchor>a1b381e231d0df8a8ad01681d37c2e468</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>shouldAcceptCommand</name>
      <anchorfile>classPlaceCommandManager.html</anchorfile>
      <anchor>aa06df71a9023a1ae213bec95abd71e47</anchor>
      <arglist>(Command *command)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PLSDict</name>
    <filename>classPLSDict.html</filename>
    <base>Dict</base>
    <member kind="function">
      <type></type>
      <name>PLSDict</name>
      <anchorfile>classPLSDict.html</anchorfile>
      <anchor>a6ecfea9a9014ffbbc240b971dc71cb85</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classPLSDict.html</anchorfile>
      <anchor>aaa90b1938bcf975a9b26b92c0f159ab7</anchor>
      <arglist>(QString path, QString encodingName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startElement</name>
      <anchorfile>classPLSDict.html</anchorfile>
      <anchor>a632a28bda83c02fd8dd28f6b24b6e4c5</anchor>
      <arglist>(const QString &amp;, const QString &amp;, const QString &amp;qName, const QXmlAttributes &amp;attributes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>endElement</name>
      <anchorfile>classPLSDict.html</anchorfile>
      <anchor>a9958040d0f62227aea00f60e001ee2cd</anchor>
      <arglist>(const QString &amp;, const QString &amp;, const QString &amp;qName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>characters</name>
      <anchorfile>classPLSDict.html</anchorfile>
      <anchor>ab7df78bdd77cec80a0b8265868816231</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PLSDict</name>
      <anchorfile>classPLSDict.html</anchorfile>
      <anchor>af12845512330c2f0fb55a8055cfcc1f8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PostProcessing</name>
    <filename>classPostProcessing.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>process</name>
      <anchorfile>classPostProcessing.html</anchorfile>
      <anchor>a4639861183b732ddb0feb40998b6d947</anchor>
      <arglist>(const QString &amp;in, const QString &amp;out, bool deleteIn=false, bool silent=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProcessInfo</name>
    <filename>classProcessInfo.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>checkRunningProcesses</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>ad6bbd4fe00214ca3fdad81fd432173ba</anchor>
      <arglist>(QStringList names)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>checkAddedProcesses</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>a555fdaa299f497de66b3d4f841d25b88</anchor>
      <arglist>(QString name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>checkRemovedProcesses</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>a03c153515dfb21c65431f9d18bef83db</anchor>
      <arglist>(QString name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>checkActiveWindowTitle</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>a21465c0d71f344a972ebb081227291c4</anchor>
      <arglist>(QString title)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>checkActiveWindowProcess</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>a51bf39be4bc5fe2d3641c71fcf3d755e</anchor>
      <arglist>(QString process)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>processAdded</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>a2c9c88ba2014c034aa5c605c108a8df2</anchor>
      <arglist>(QString)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>processRemoved</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>a7ceddf5aff6321f3d1ee6cbee2ad3e38</anchor>
      <arglist>(QString)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>activeWindowTitleChanged</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>adeb8f9c4af87ba5e7f51460abda59be2</anchor>
      <arglist>(QString)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>activeWindowProcessChanged</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>a586a6f069d2b0c12b6653d1ec9878a6e</anchor>
      <arglist>(QString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProcessInfo</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>a12e25d10a5d97d20001171b790db9202</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>getRunningProcesses</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>ab44b93642d60ed78ebf98338130fc8af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProcessInfo *</type>
      <name>instance</name>
      <anchorfile>classProcessInfo.html</anchorfile>
      <anchor>af39036951c0bc22dafa1d88ab9df0c52</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProcessInfoGatherer</name>
    <filename>classProcessInfoGatherer.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>processAdded</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a9dedd6b0d7f9f41360f6724f71aa91e3</anchor>
      <arglist>(QString)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>processRemoved</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a97d9c6a58afff53f00e8d93916ff2951</anchor>
      <arglist>(QString)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>updateProcesses</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a1135aff8a272bb7c5679b8acbce0f086</anchor>
      <arglist>(QStringList)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>activeWindowTitleChanged</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a8416ec6d8872365a175772c4a6b8a6d2</anchor>
      <arglist>(QString)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>activeWindowProcessChanged</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a3366b259ea75ae598276e5479e811953</anchor>
      <arglist>(QString)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>finishedGatheringStep</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a79b8552e9df14ecdb54eb722d3b1dc19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProcessInfoGatherer</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>aeac792cc3b7b7d7bea853b5f14be7c76</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProcessInfoGatherer</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a995f64d13c8f6d2fb4bb6b3da9267451</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>run</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a63cde0d9af6218d422b027716481888c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>checkCurrentProcesses</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a7750b7188574afbcc9ba1becc0454e6c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>checkActiveWindow</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a5f1a31c718693763f23417948980465a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkProcessListChanges</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a4fcc129e12ae1342bd761a5ca21503f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QStringList</type>
      <name>m_previouslyRunningProcesses</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>adc885bedc7d88007f759154e483368f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QStringList</type>
      <name>m_currentlyRunningProcesses</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a4fe754b005cbfb1dd0ff93b5624328d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>m_currentActiveWindowTitle</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a71c178fa6585559a8de8eabc0e92e68d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>m_currentActiveWindowProgram</name>
      <anchorfile>classProcessInfoGatherer.html</anchorfile>
      <anchor>a6b4fc85490df9f3a2d8efd9f8482c1dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProcessOpenedCondition</name>
    <filename>classProcessOpenedCondition.html</filename>
    <base>Condition</base>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>name</name>
      <anchorfile>classProcessOpenedCondition.html</anchorfile>
      <anchor>a714701454ee400ab0d372a8cbd168ec8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProgressWidget</name>
    <filename>classProgressWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>PromptsTable</name>
    <filename>classPromptsTable.html</filename>
  </compound>
  <compound kind="class">
    <name>PronunciationTrainingCommandManager</name>
    <filename>classPronunciationTrainingCommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classPronunciationTrainingCommandManager.html</anchorfile>
      <anchor>af9450a83fe0a0418196fef3f3e151a62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classPronunciationTrainingCommandManager.html</anchorfile>
      <anchor>ae5fffefba682663198c36219cf05efc7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classPronunciationTrainingCommandManager.html</anchorfile>
      <anchor>a4c7895528f603371684eb5978ea64bfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classPronunciationTrainingCommandManager.html</anchorfile>
      <anchor>aa1688a5d06449da51b30f38a27ed573c</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PronunciationTrainingCommandManager</name>
      <anchorfile>classPronunciationTrainingCommandManager.html</anchorfile>
      <anchor>a2d542cc693031e1e196868611144b4b8</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>trigger</name>
      <anchorfile>classPronunciationTrainingCommandManager.html</anchorfile>
      <anchor>a8d6ae935ee2350b6efe1b22bfd0b49d9</anchor>
      <arglist>(const QString &amp;triggerName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RecognitionControl</name>
    <filename>classRecognitionControl.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>disconnectFromServer</name>
      <anchorfile>classRecognitionControl.html</anchorfile>
      <anchor>a6db19dec7e7734c786041f4c3f8ed12e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecognitionControl</name>
      <anchorfile>classRecognitionControl.html</anchorfile>
      <anchor>afb54da417bac6d35d11a4bd728e3cc87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecognitionControl</name>
      <anchorfile>classRecognitionControl.html</anchorfile>
      <anchor>aedbfa35cf77b032268dc28e3a974ea93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>classRecognitionControl.html</anchorfile>
      <anchor>a2f7b6a707efd9ed520d4feb07cf7ee5f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RecognizerCommandManager</name>
    <filename>classRecognizerCommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>const QString</type>
      <name>preferredTrigger</name>
      <anchorfile>classRecognizerCommandManager.html</anchorfile>
      <anchor>ae2060e1f92d08e826a0288d64e657f22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classRecognizerCommandManager.html</anchorfile>
      <anchor>a489c221d742d2e0fcd5876a37fd256b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classRecognizerCommandManager.html</anchorfile>
      <anchor>ae1383da6f377b783b54b59823e759394</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deSerializeConfig</name>
      <anchorfile>classRecognizerCommandManager.html</anchorfile>
      <anchor>ad271a74d71c9fc31c4b5fadb7c3efbd0</anchor>
      <arglist>(const QDomElement &amp;elem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecognizerCommandManager</name>
      <anchorfile>classRecognizerCommandManager.html</anchorfile>
      <anchor>aa8f2f78a1350cfd2c0ef18fd7376838e</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>trigger</name>
      <anchorfile>classRecognizerCommandManager.html</anchorfile>
      <anchor>a7f8e15f31ada8c170d014f6be9c24849</anchor>
      <arglist>(const QString &amp;triggerName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RecordedTTSProvider</name>
    <filename>classRecordedTTSProvider.html</filename>
    <base>SimonTTSProvider</base>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>classRecordedTTSProvider.html</anchorfile>
      <anchor>aef75d98181e363c3cbe61eba774897e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>uninitialize</name>
      <anchorfile>classRecordedTTSProvider.html</anchorfile>
      <anchor>a9bd7e6918b718d90728a7bc3b5aa0cb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSay</name>
      <anchorfile>classRecordedTTSProvider.html</anchorfile>
      <anchor>a8e4a929abde8bdf68febc897d8c767e0</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>say</name>
      <anchorfile>classRecordedTTSProvider.html</anchorfile>
      <anchor>ad0ff0e4f552634906562220e8b2a2aab</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>interrupt</name>
      <anchorfile>classRecordedTTSProvider.html</anchorfile>
      <anchor>aaabcb933823b4a39d91b228569962df4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RecordingSet</name>
    <filename>classRecordingSet.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>exportData</name>
      <anchorfile>classRecordingSet.html</anchorfile>
      <anchor>aed7a281b540552d5f60eb0a2d1a584e7</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>importData</name>
      <anchorfile>classRecordingSet.html</anchorfile>
      <anchor>a22123707a0c164989998a9573a453d88</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>applyTemp</name>
      <anchorfile>classRecordingSet.html</anchorfile>
      <anchor>ae6464bb3f51e5f7c452aba4be059f7c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getPath</name>
      <anchorfile>classRecordingSet.html</anchorfile>
      <anchor>ac461dc0d5d3f86d964f9f02ff359cca1</anchor>
      <arglist>(const QString &amp;text, bool forceTemp=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rename</name>
      <anchorfile>classRecordingSet.html</anchorfile>
      <anchor>a150ec4fefbb983c2f980d577890b38c7</anchor>
      <arglist>(const QString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addRecording</name>
      <anchorfile>classRecordingSet.html</anchorfile>
      <anchor>a505e162ad659df3cf30215fbe909b26b</anchor>
      <arglist>(const QString &amp;text, const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>editRecording</name>
      <anchorfile>classRecordingSet.html</anchorfile>
      <anchor>a7c9371f8035cb51445321f29d8269f5f</anchor>
      <arglist>(const QString &amp;text, const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeRecording</name>
      <anchorfile>classRecordingSet.html</anchorfile>
      <anchor>a6e346f5618f74a76ac3fc073231ea363</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>clear</name>
      <anchorfile>classRecordingSet.html</anchorfile>
      <anchor>a087d5caab6c6ff3353d1b510556ce42b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RecordingSetCollection</name>
    <filename>classRecordingSetCollection.html</filename>
    <member kind="function">
      <type></type>
      <name>RecordingSetCollection</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>a46adac9099dbbceb678730e57868a538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>a2226c950c50a268f51f67e2e893fed33</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>a5f73dabf7615ac48c2722ca6aec2e198</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportSet</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>ac9a16443e7993dde594e52ac51b6e56c</anchor>
      <arglist>(const QString &amp;path, int set) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>importSet</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>ad096a80c8228b924641395a66a74c963</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>RecordingSet *</type>
      <name>getSet</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>a77b89beb1019272bc9e33c640f4eb8f4</anchor>
      <arglist>(int id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSay</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>a8d64afa0aa3e60cfdc33c0040a1fcd82</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getPath</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>af1f9db47c17daddce600127b23e145fb</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; int &gt;</type>
      <name>getSets</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>a13af8a3869d30d61a0c3324a4f915111</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addSet</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>acbcc967a5a1a7e3f6bd13f040a9555af</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>renameSet</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>aba885ff2925e2e47b7bf5278c60821cf</anchor>
      <arglist>(int id, const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeSet</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>a0d455f895eb485c44057b4b713cc3950</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addRecording</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>abb6339fc1954fdccd1d5d2c7d1e1c1e5</anchor>
      <arglist>(int id, const QString &amp;text, const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>editRecording</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>a9231764a592f372dddc6033aef726bd4</anchor>
      <arglist>(int id, const QString &amp;text, const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeRecording</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>abe30744c1e3e9da9fa2de4477fa2b79e</anchor>
      <arglist>(int id, const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecordingSetCollection</name>
      <anchorfile>classRecordingSetCollection.html</anchorfile>
      <anchor>afa50ab82f55e97296e786b1e3f25bb9c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RecordingSetText</name>
    <filename>classRecordingSetText.html</filename>
  </compound>
  <compound kind="class">
    <name>RecWidget</name>
    <filename>classRecWidget.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>record</name>
      <anchorfile>classRecWidget.html</anchorfile>
      <anchor>af2f6580b665a3f623005ae07869551dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stopRecording</name>
      <anchorfile>classRecWidget.html</anchorfile>
      <anchor>aea566b7c6702d650a9bd4dd7059b1573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classRecWidget.html</anchorfile>
      <anchor>acff91a24bca63f7bc03899b8436057a4</anchor>
      <arglist>(QString newTitle)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>deleteAll</name>
      <anchorfile>classRecWidget.html</anchorfile>
      <anchor>aa0523077b8328fe7b63c5c92ca1631e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecWidget</name>
      <anchorfile>classRecWidget.html</anchorfile>
      <anchor>a5606394e3d08f2a31b75afd7c7d382d1</anchor>
      <arglist>(QString name, QString text, QString fileTemplate, bool forceSimpleMode=false, QWidget *parent=0, QList&lt; SimonSound::DeviceConfiguration &gt; *forcedDevices=0, bool playbackOnly=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasRecordingReady</name>
      <anchorfile>classRecWidget.html</anchorfile>
      <anchor>afad08a191b6b9d3d99089d5fa8f55c76</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RenameTerminal</name>
    <filename>classRenameTerminal.html</filename>
  </compound>
  <compound kind="class">
    <name>RenameTerminalSelectParametersPage</name>
    <filename>classRenameTerminalSelectParametersPage.html</filename>
  </compound>
  <compound kind="class">
    <name>RunCommandViewPrivate</name>
    <filename>classRunCommandViewPrivate.html</filename>
    <member kind="function">
      <type></type>
      <name>RunCommandViewPrivate</name>
      <anchorfile>classRunCommandViewPrivate.html</anchorfile>
      <anchor>a7ad244feed3b7749795a64efc60869c7</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RunCommandViewPrivate</name>
      <anchorfile>classRunCommandViewPrivate.html</anchorfile>
      <anchor>a62b3206b5cf5be4a3ecf7fc0a2f26358</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>s_cell</name>
    <filename>structs__cell.html</filename>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>word</name>
      <anchorfile>structs__cell.html</anchorfile>
      <anchor>af890341e7e4a44445729452c2504737c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct s_cell *</type>
      <name>next</name>
      <anchorfile>structs__cell.html</anchorfile>
      <anchor>a3649aeae9c51af988babbf7ba04fd4a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SampleDataProvider</name>
    <filename>classSampleDataProvider.html</filename>
  </compound>
  <compound kind="class">
    <name>SamView</name>
    <filename>classSamView.html</filename>
    <member kind="function">
      <type></type>
      <name>SamView</name>
      <anchorfile>classSamView.html</anchorfile>
      <anchor>a627796c2a6df431015d05bce915cc5ea</anchor>
      <arglist>(QWidget *parent, Qt::WFlags flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SamView</name>
      <anchorfile>classSamView.html</anchorfile>
      <anchor>acd12a1df825e991ef08c9fe2847ded9d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ScenarioManager</name>
    <filename>classScenarioManager.html</filename>
  </compound>
  <compound kind="class">
    <name>SelectionListView</name>
    <filename>classSelectionListView.html</filename>
  </compound>
  <compound kind="class">
    <name>SelectPlaceDialog</name>
    <filename>classSelectPlaceDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>SelectProgramDialog</name>
    <filename>classSelectProgramDialog.html</filename>
    <member kind="function">
      <type></type>
      <name>SelectProgramDialog</name>
      <anchorfile>classSelectProgramDialog.html</anchorfile>
      <anchor>a631a8292c27c5212cb280b19b6424ba3</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SelectProgramDialog</name>
      <anchorfile>classSelectProgramDialog.html</anchorfile>
      <anchor>af1c8c71417f703aae801988a6949000d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ShortcutCommand</name>
    <filename>classShortcutCommand.html</filename>
    <base>Command</base>
    <member kind="function">
      <type>bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classShortcutCommand.html</anchorfile>
      <anchor>ae06065a846ec5522410c2a4c4c1e18e6</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classShortcutCommand.html</anchorfile>
      <anchor>a0d31c975e34834a15dc3f0a85c116f63</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function">
      <type>const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classShortcutCommand.html</anchorfile>
      <anchor>a5508b374e3df069f9c1045b47e698045</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classShortcutCommand.html</anchorfile>
      <anchor>a99df7bce5e07333204b103a2b4213fde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutCommand</name>
      <anchorfile>classShortcutCommand.html</anchorfile>
      <anchor>a67daad05fa5de8f6d2c3242324778123</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description, const QKeySequence &amp;shortcut_, EventSimulation::PressMode mode_)</arglist>
    </member>
    <member kind="function">
      <type>QKeySequence</type>
      <name>getShortcut</name>
      <anchorfile>classShortcutCommand.html</anchorfile>
      <anchor>aec3d843d3e1e4526b55abb5893c56397</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classShortcutCommand.html</anchorfile>
      <anchor>a1ef434a9728b1a56ea4b6f477030ed26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classShortcutCommand.html</anchorfile>
      <anchor>a8fe46d8d2df0295967d06c640acb6544</anchor>
      <arglist>(int *state)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ShortcutCommandManager</name>
    <filename>classShortcutCommandManager.html</filename>
    <base>CommandManager</base>
    <member kind="function">
      <type>const QString</type>
      <name>name</name>
      <anchorfile>classShortcutCommandManager.html</anchorfile>
      <anchor>a9d2795497eb35086e58419de90ad98b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>iconSrc</name>
      <anchorfile>classShortcutCommandManager.html</anchorfile>
      <anchor>a97eb1acdebf7338212d7dafa0120532a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CreateCommandWidget *</type>
      <name>getCreateCommandWidget</name>
      <anchorfile>classShortcutCommandManager.html</anchorfile>
      <anchor>a3a777e52535881837ddf2f03d5e8e4f1</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutCommandManager</name>
      <anchorfile>classShortcutCommandManager.html</anchorfile>
      <anchor>abe1dbf11ff320e59ff9e701da2b85c6f</anchor>
      <arglist>(QObject *parent, const QVariantList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>shouldAcceptCommand</name>
      <anchorfile>classShortcutCommandManager.html</anchorfile>
      <anchor>a1fe36224ef9835d934ec61ed5d6c111a</anchor>
      <arglist>(Command *command)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimonControl</name>
    <filename>classSimonControl.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>connectToServer</name>
      <anchorfile>classSimonControl.html</anchorfile>
      <anchor>a8e37291932c1d6c154321288c38cf3f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>disconnectFromServer</name>
      <anchorfile>classSimonControl.html</anchorfile>
      <anchor>ab85eb8572525a4c4b0c5a4f2b3cba088</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>connectedToServer</name>
      <anchorfile>classSimonControl.html</anchorfile>
      <anchor>aeeedc3ebae2e1e303e74f1ff6c3c099d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>disconnectedFromServer</name>
      <anchorfile>classSimonControl.html</anchorfile>
      <anchor>a915503ab243fd3d1e200ae83a7dbe97c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>wordRecognised</name>
      <anchorfile>classSimonControl.html</anchorfile>
      <anchor>a742e57e82fd24dd1280250dfde593b2a</anchor>
      <arglist>(RecognitionResultList *recognitionResults)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>abortConnecting</name>
      <anchorfile>classSimonControl.html</anchorfile>
      <anchor>a31d41ce1f0eb62dadca12f7f99d30aa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SimonControl::SystemStatus</type>
      <name>deactivateSimon</name>
      <anchorfile>classSimonControl.html</anchorfile>
      <anchor>a47f727ef680a75f5a1071ef5f9465e84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SimonControl::SystemStatus</type>
      <name>activateSimon</name>
      <anchorfile>classSimonControl.html</anchorfile>
      <anchor>aa7e18d70e4bcf99f1e7ba64c3c37bc97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SimonControl::SystemStatus</type>
      <name>toggleActivition</name>
      <anchorfile>classSimonControl.html</anchorfile>
      <anchor>aff9983e944d80deee20bad9ea1efb032</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimonControl</name>
      <anchorfile>classSimonControl.html</anchorfile>
      <anchor>ab741036481babef9691d0e86980ddf66</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SimonControl</name>
      <anchorfile>classSimonControl.html</anchorfile>
      <anchor>a7d9d8d2273571577380132d857fea0b1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimonInfo</name>
    <filename>classSimonInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>SimonInfo</name>
      <anchorfile>classSimonInfo.html</anchorfile>
      <anchor>a450b1130e73869ef92e7b801aacb01ba</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showSplash</name>
      <anchorfile>classSimonInfo.html</anchorfile>
      <anchor>a98155ccdc3e963b0d1e50af580268030</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeToSplash</name>
      <anchorfile>classSimonInfo.html</anchorfile>
      <anchor>a11dbf5cd78caf79846c472f1dfd76f0b</anchor>
      <arglist>(QString status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideSplash</name>
      <anchorfile>classSimonInfo.html</anchorfile>
      <anchor>adf50e7383f36a6ca7657369bf91806cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SimonInfo</name>
      <anchorfile>classSimonInfo.html</anchorfile>
      <anchor>a60529ff0386095a1cfe04bd2919e110a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>showMessage</name>
      <anchorfile>classSimonInfo.html</anchorfile>
      <anchor>a06d5aa77c5629c0d080aad498c053c2d</anchor>
      <arglist>(QString message, short time, KIcon *icon=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimonTTS</name>
    <filename>classSimonTTS.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>initialize</name>
      <anchorfile>classSimonTTS.html</anchorfile>
      <anchor>a9df1a4570f7719d8df2061430e00174e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>uninitialize</name>
      <anchorfile>classSimonTTS.html</anchorfile>
      <anchor>a4eb8f734ca14fff63c4b7f97b613afe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>say</name>
      <anchorfile>classSimonTTS.html</anchorfile>
      <anchor>a2874249cde85426eada95a7fdb23ef47</anchor>
      <arglist>(const QString &amp;text, SimonTTS::TTSFlags flags=SimonTTS::StripHTML)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>interrupt</name>
      <anchorfile>classSimonTTS.html</anchorfile>
      <anchor>a6b94adf37f3ed77a64d2563ca53ec96f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QStringList</type>
      <name>recentlyUsed</name>
      <anchorfile>classSimonTTS.html</anchorfile>
      <anchor>afa30011fa3df276ddaec96f927c3eb6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static SimonTTSPrivate *</type>
      <name>getInstance</name>
      <anchorfile>classSimonTTS.html</anchorfile>
      <anchor>a8c1ea0335c54324a94467ccb793a7912</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimonTTSPrivate</name>
    <filename>classSimonTTSPrivate.html</filename>
    <member kind="function">
      <type></type>
      <name>SimonTTSPrivate</name>
      <anchorfile>classSimonTTSPrivate.html</anchorfile>
      <anchor>a91f7b4538acf6a02d415bbeff569125d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>classSimonTTSPrivate.html</anchorfile>
      <anchor>a28efc032d37b40789a36c8412205b091</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>uninitialize</name>
      <anchorfile>classSimonTTSPrivate.html</anchorfile>
      <anchor>aba589c433f6b8438cbf7909616a1e477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>say</name>
      <anchorfile>classSimonTTSPrivate.html</anchorfile>
      <anchor>ab2da8c0b1b321eb29e5934cf7ab63320</anchor>
      <arglist>(const QString &amp;text, SimonTTS::TTSFlags flags=SimonTTS::StripHTML)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>interrupt</name>
      <anchorfile>classSimonTTSPrivate.html</anchorfile>
      <anchor>ac0f6016725435904c85e262617a7216f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>recentlyUsed</name>
      <anchorfile>classSimonTTSPrivate.html</anchorfile>
      <anchor>adc6bd5d43a3f446364a26b5802c9e828</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SimonTTSPrivate</name>
      <anchorfile>classSimonTTSPrivate.html</anchorfile>
      <anchor>aabb15dbd5b5f7e792c66efab3d50d6ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>processString</name>
      <anchorfile>classSimonTTSPrivate.html</anchorfile>
      <anchor>a48bb2216f471bc6fefef9bd115274efa</anchor>
      <arglist>(QString text, SimonTTS::TTSFlags flags=SimonTTS::StripHTML)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimonTTSProvider</name>
    <filename>classSimonTTSProvider.html</filename>
  </compound>
  <compound kind="class">
    <name>SimonView</name>
    <filename>classSimonView.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>closeSimon</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>a6b85ea68dd919665b07b79463f279e3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>displayError</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>ab049b4cc58a9ddbe22e874c91e4484c4</anchor>
      <arglist>(const QString &amp;error)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>toggleActivation</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>aeecaa4eac3455f6a2e7b68defb415998</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>representState</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>a341a4f6c5076d7691971a5ad271f241d</anchor>
      <arglist>(SimonControl::SystemStatus status)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>showAddWordDialog</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>a917bb70e833ca8ee65baca971e2d102c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>showRunDialog</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>aca4a7aceec4df1902d66a35f4a6c8ddf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>showContextDialog</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>a9ae253f344a6c6d5dff4253857ffaa53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>showTrainDialog</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>a21a9ef4c7b09c8ce280699167ead20a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>showWordListDialog</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>aef4246903c2aa5cf7b48db39b01ba147</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>showGrammarDialog</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>a9fc2f084e197c0195b50d093760e8b53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>showSystemDialog</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>a04c503cb49a9a81673e76c27147d93b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimonView</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>a72d0f91bec8895ca946b79a47c17c760</anchor>
      <arglist>(QWidget *parent=0, Qt::WFlags flags=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SimonView</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>a812f34e64284d55d66db5e48885e0f2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeEvent</name>
      <anchorfile>classSimonView.html</anchorfile>
      <anchor>a138ad02b265e961ceb98cab9bd4cfcb0</anchor>
      <arglist>(QCloseEvent *event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Skype</name>
    <filename>classSkype.html</filename>
    <member kind="enumeration">
      <name>AuthorType</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a83115c77363d64d81db0001706718691</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setOnline</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a97f351999ef583a1151693080bd962ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setUserProfileRichMoodText</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>afd9effc461d5573372e3eb2a2c67ab41</anchor>
      <arglist>(const QString &amp;)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setOffline</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a4c52af0c8cc94b3b057ada54ec76db11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAway</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>af94a2c3454199ab74ef07b20f6aac280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setNotAvailable</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a8be00aa24499d29eff5651efb434ac4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setDND</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a2a85211c313b0319f0d541359d00c8fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSkypeMe</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a2c921bf8b09a6bfa481967fd80730630</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setInvisible</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ac3355741784db25136cc9d85317c7301</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setValues</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a957f8303e4ac7e2ed4d87dec49e7b595</anchor>
      <arglist>(int launchType, const QString &amp;appName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>getContactInfo</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a7a32d551b9ec7b026748d2469fa77108</anchor>
      <arglist>(const QString &amp;contact)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>getContactBuddy</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ac2247e4a60834bbf00a83f157259eebb</anchor>
      <arglist>(const QString &amp;contact)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>send</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ae80663d5019c828c906a733d6a237be0</anchor>
      <arglist>(const QString &amp;user, const QString &amp;body)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>editMessage</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a5f64dc83dba68fa04f573efa284499ef</anchor>
      <arglist>(int messageId, const QString &amp;newMessage)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>sendToChat</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a3ee59a4ea0548aa8c093e67c11ac35ea</anchor>
      <arglist>(const QString &amp;chat, const QString &amp;body)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>makeCall</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a6c5e77966cd9ca243c89ec8356bbad81</anchor>
      <arglist>(const QString &amp;userId)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>acceptCall</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a289a1f6aa88833a25962b61f64d7814d</anchor>
      <arglist>(const QString &amp;callId)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>hangUp</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a817200acac8d81e85ae96da411f5b40f</anchor>
      <arglist>(const QString &amp;callId)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>toggleHoldCall</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>adcb1440bd608d2795afc479f339c1348</anchor>
      <arglist>(const QString &amp;callId)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>getSkypeOut</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ac388daa47e309dedacc57dc77c8d2080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>enablePings</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ae987477f7ca1a3ae993ba95763154b02</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>ping</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>af2256468157a085b3a9b2b85ff7e78b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBus</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a7768eab9c0db5cde03202ea28d3c1b91</anchor>
      <arglist>(int bus)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setLaunchTimeout</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a2667c6095e7438e6a219895f9c528b15</anchor>
      <arglist>(int seconds)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSkypeCommand</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a9b5dfbc2ded243cf9721c9257eab8ecd</anchor>
      <arglist>(const QString &amp;command)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setWaitConnect</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a973539414cdeaf7873899611e22031d4</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>getTopic</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a06aeeb2c7c2cb2f23876350f0dc94987</anchor>
      <arglist>(const QString &amp;chat)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>inviteUser</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a7a37ed17bc6c72566373a3d1da9edc24</anchor>
      <arglist>(const QString &amp;chatId, const QString &amp;userId)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>leaveChat</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a60cc3afbd54fec8addc03f98f5f2a354</anchor>
      <arglist>(const QString &amp;chatId)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>removeContact</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ae46f90d8c744d588415db4f9e6380aeb</anchor>
      <arglist>(const QString &amp;contactId)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>addContact</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>abdb7b1e19f7a2f0a58ca7952ef6e44dd</anchor>
      <arglist>(const QString &amp;contactId)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAuthor</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a7010e544d3150392c2d2fe997d607a5d</anchor>
      <arglist>(const QString &amp;contactId, AuthorType author)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wentOnline</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a2d8be2254d8f42380e66e6ca6f277bc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wentOffline</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a2285705d792364089b50bcd0f8eb8045</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wentAway</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ae69a91515773de3cba774a872fd53394</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wentNotAvailable</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ab7c1baefc59cf6a12e8675bf7bc24670</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wentDND</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a6d994713ede7393578eddadbf7d0ed59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wentSkypeMe</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>aaaeb786b76e98c45e7c58feef8ba7d71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wentInvisible</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a68d1f2ed82b975faf4428b195eb185df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>statusConnecting</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a6d7ce1523a405fc03924392d18a7ddaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>newUser</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>af783c60c3b65d9a9f0a170139ed0f0f1</anchor>
      <arglist>(const QString &amp;name, int groupID)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>updateAllContacts</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ab752705392b7ba545880aee4685a574a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>contactInfo</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a225eafa302df8145e11a73a36cda1e75</anchor>
      <arglist>(const QString &amp;contact, const QString &amp;change)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>receivedIM</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a6b77bcd88d565d683d2aeed1d310bc2f</anchor>
      <arglist>(const QString &amp;user, const QString &amp;body, const QString &amp;messageId, const QDateTime &amp;timeStamp)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>receivedMultiIM</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>abde41488dcce4084313593c46931b221</anchor>
      <arglist>(const QString &amp;chat, const QString &amp;body, const QString &amp;messageId, const QString &amp;user, const QDateTime &amp;timeStamp)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>gotMessageId</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ab667d2c123950bc643388b6991e7a805</anchor>
      <arglist>(const QString &amp;id)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>callStatus</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a255f43385a88233255cd35541a8120d8</anchor>
      <arglist>(const QString &amp;callId, const QString &amp;status)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>callError</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a82b04a7c02e569bd79843eb048fd5219</anchor>
      <arglist>(const QString &amp;callId, const QString &amp;message)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>newCall</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ace10fe1430bfeb9a3c5007df5a27f9da</anchor>
      <arglist>(const QString &amp;callId, const QString &amp;userId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>skypeOutInfo</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a800ce530bcb60eed10c6c1da396b3801</anchor>
      <arglist>(int balance, const QString &amp;currency)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>setMyselfName</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>aca4ba55e9eb97145d63f8ae56dd4db60</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>setTopic</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a05e651e9c46586c31e138b528e208116</anchor>
      <arglist>(const QString &amp;chat, const QString &amp;topic)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>joinUser</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ae5cf83315015233f4724a26027859fed</anchor>
      <arglist>(const QString &amp;chat, const QString &amp;userId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>leftUser</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a33e29931458e09d5a599676032f0c773</anchor>
      <arglist>(const QString &amp;chat, const QString &amp;userd, const QString &amp;reason)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>outgoingMessage</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a7f16a2025606b7f3122405f853355435</anchor>
      <arglist>(const QString &amp;id, const QString &amp;body, const QString &amp;chat)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>groupCall</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ad8a1edf5bf140ef279dfa8cc7746ad80</anchor>
      <arglist>(const QString &amp;callId, const QString &amp;groupId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>receivedAuth</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>aaf1470a032e589210acb5b046ac7b080</anchor>
      <arglist>(const QString &amp;contactId, const QString &amp;info)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>startReceivingVideo</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ad349bf385c869df9dce4e7c1b0f706ef</anchor>
      <arglist>(const QString &amp;callId)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Skype</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a52b3273134496f3b0cb2daf364474245</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Skype</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ab788df47ca430b3be07fd28b3d6815fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canComunicate</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a7963f1b95a1dd95d75f4419282670f2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHitchMode</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a91c073cace748cee2d280c4b1d57401f</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkMode</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a438291812c9687fc029e63d7c4bc714e</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScanForUnread</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a00d40a236a4bde727cc6bd3ca1a061df</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCallIncoming</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a559c3e99a20d8b8520448489bb53c5bb</anchor>
      <arglist>(const QString &amp;callId)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getMessageChat</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a42f1c843109f7880d88fc2f5ea831280</anchor>
      <arglist>(const QString &amp;messageId)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>getChatUsers</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a372049c7f82981a66b9c82f6c91349de</anchor>
      <arglist>(const QString &amp;chat)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getMyself</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a2998fd4a378068ae7a14921539bcc438</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>createChat</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a9bfe9093119fb1d86a105c06ae064630</anchor>
      <arglist>(const QString &amp;users)</arglist>
    </member>
    <member kind="function">
      <type>AuthorType</type>
      <name>getAuthor</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a3bafd1d5db8e28f5d83807bf0cb8198d</anchor>
      <arglist>(const QString &amp;contactId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ableConference</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a46069f47bc343af10a3c1d9551a1afde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getContactGroupID</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>af7830202366470929fd641de3dc7db1e</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromGroup</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a8b2c7c924beb31d0c328d79be72e4a51</anchor>
      <arglist>(const QString &amp;name, int groupID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToGroup</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a6592a720f7c06994338b60f7e6d8414d</anchor>
      <arglist>(const QString &amp;name, int groupID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createGroup</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a169b565373e296b75a107c9dfee5297a</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteGroup</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a180832688f96ef9cb2fe7ee8705ab9af</anchor>
      <arglist>(int groupID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renameGroup</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a665f4b12bf7714f56aa320155ed4f54b</anchor>
      <arglist>(int groupID, const QString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGroupID</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ac726583d842c188796e1a10877cdd665</anchor>
      <arglist>(const QString &amp;groupname)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getGroupName</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a997a0f8cd38b0f0bf95735b5d414be06</anchor>
      <arglist>(int groupID)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getContactDisplayName</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a4d45df490fb5879bb5bbab43c574072b</anchor>
      <arglist>(const QString &amp;user)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContactDisplayName</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>aba732d51c1bad5a8cd877e9316b23e41</anchor>
      <arglist>(const QString &amp;user, const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openFileTransfer</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a89f997126ef27514339fc5b5567acb8f</anchor>
      <arglist>(const QString &amp;user, const QString &amp;url=QString())</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>searchUsers</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a7beacdedd220fdbd2ad7ddaa39458228</anchor>
      <arglist>(const QString &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>searchActiveCalls</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a257de4ff8b998ba1a299ab3dc586707c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportVideo</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>af68c7acf90fcd3c9910d3af08799932b</anchor>
      <arglist>(const QString &amp;user)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startSendingVideo</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>a6c1afc1e252241a00f1697df0798be5b</anchor>
      <arglist>(const QString &amp;callId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopSendingVideo</name>
      <anchorfile>classSkype.html</anchorfile>
      <anchor>ac32f010bab08d774e8d5d96649847db0</anchor>
      <arglist>(const QString &amp;callId)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SkypeConnection</name>
    <filename>classSkypeConnection.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>connectSkype</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a1e91f815aac285633eac7cdb3b823200</anchor>
      <arglist>(const QString &amp;start, const QString &amp;appName, int protocolVer, int bus, int launchTimeout, int waitBeforeConnect, const QString &amp;name=QString(), const QString &amp;pass=QString())</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>disconnectSkype</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a29de5503031252ef5ec2749ab00ba5ff</anchor>
      <arglist>(skypeCloseReason reason=crLocalClosed)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>send</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>ad51504fd9f6eed66afcb2c9eeb9f4243</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>Notify</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>aa6534fffe381eb46056f5a4a4d53d3b9</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>connectionDone</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a35ba655a6c8b4bb8d9ca58edea73990d</anchor>
      <arglist>(int error, int protocolVer)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>connectionClosed</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a438964dc7099a6a0f01e8abea8b7cd4d</anchor>
      <arglist>(int reason)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>received</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>ae60a52b161299a2b825277e9427263a0</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>error</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a97ef38f3a8ac5b94473e62697c4658d4</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sent</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a9207c8f24fac73f9f18295efc20b8273</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SkypeConnection</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>adea98ebbdc19d35c9b50b61816410500</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SkypeConnection</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a8afd7f541a97ecd712f9a3fafd5b3f8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPing</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a966a2504312c4c9f22b0c01fed716036</anchor>
      <arglist>(bool enable, int interval, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPing</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>ac892150356435b50d6012df1a33c19a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPingInterval</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>aef2038e095b6bfdf9ca6031bea9660d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPingTimeout</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a1fef75a3e5d7e3447a76a5bab927a00e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connected</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a88f2d3e6920072307399da58dcbf7cac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>protocolVer</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a4a3b712a667b38d7629d7f8484f1a91a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkypeConnection &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a859fb1f702e6b019c61dd3c43d54be61</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>operator%</name>
      <anchorfile>classSkypeConnection.html</anchorfile>
      <anchor>a02c3f62efa31cfdb91a48d1237d86b32</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SkypeWindow</name>
    <filename>classSkypeWindow.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>foundCallDialog</name>
      <anchorfile>classSkypeWindow.html</anchorfile>
      <anchor>affa0e214c2db7eb3621e1deaf708c994</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SkypeWindow</name>
      <anchorfile>classSkypeWindow.html</anchorfile>
      <anchor>a832182a2fa858718dfe755d3d484a46c</anchor>
      <arglist>(Q_PID pid=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SkypeWindow</name>
      <anchorfile>classSkypeWindow.html</anchorfile>
      <anchor>aa3e49eedc91c863847103533a92954b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideCallDialog</name>
      <anchorfile>classSkypeWindow.html</anchorfile>
      <anchor>aec60f2bbdcde10c19a6c8303b560642c</anchor>
      <arglist>(const QString &amp;user)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showCallDialog</name>
      <anchorfile>classSkypeWindow.html</anchorfile>
      <anchor>a413a6b518db0f45c84904b565fb674c7</anchor>
      <arglist>(const QString &amp;user)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteCallDialog</name>
      <anchorfile>classSkypeWindow.html</anchorfile>
      <anchor>a0569875feb91441f768b6374c8ad7a72</anchor>
      <arglist>(const QString &amp;user)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveWebcamWidget</name>
      <anchorfile>classSkypeWindow.html</anchorfile>
      <anchor>a3737f338a55b3497158efbc114971452</anchor>
      <arglist>(const QString &amp;user, WId otherWId, int x=0, int y=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>revertWebcamWidget</name>
      <anchorfile>classSkypeWindow.html</anchorfile>
      <anchor>a3d417f68a3069b3303974dd0c172c654</anchor>
      <arglist>(const QString &amp;user)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SoundSettings</name>
    <filename>classSoundSettings.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>load</name>
      <anchorfile>classSoundSettings.html</anchorfile>
      <anchor>a231ed85c1fcdfef36b058252adfb3533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SoundSettings</name>
      <anchorfile>classSoundSettings.html</anchorfile>
      <anchor>afdde55023223fdad35d8b0951427b948</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SpeechCalView</name>
    <filename>classSpeechCalView.html</filename>
    <member kind="function">
      <type></type>
      <name>SpeechCalView</name>
      <anchorfile>classSpeechCalView.html</anchorfile>
      <anchor>a22ce2b263878c64bf982ef96d0d3e72a</anchor>
      <arglist>(CalendarModel *model, SpeechCal *c, QWidget *parent=0, Qt::WFlags flags=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SpeechCalView</name>
      <anchorfile>classSpeechCalView.html</anchorfile>
      <anchor>ae72c0b8282507247310bfd4575f6cb9b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SpeechModelSettings</name>
    <filename>classSpeechModelSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>SPHINXDict</name>
    <filename>classSPHINXDict.html</filename>
    <base>Dict</base>
    <member kind="function">
      <type></type>
      <name>SPHINXDict</name>
      <anchorfile>classSPHINXDict.html</anchorfile>
      <anchor>af4ceb9e79e3bcac3ad76f26808a1448b</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classSPHINXDict.html</anchorfile>
      <anchor>a8dcfadb8217f19944a47829ca2a81012</anchor>
      <arglist>(QString path, QString encodingName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SSCDAccess</name>
    <filename>classSSCDAccess.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>disconnectFromServer</name>
      <anchorfile>classSSCDAccess.html</anchorfile>
      <anchor>a0dcc7960e2c2bd5b11a83f3a0d101ec3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SSCDAccess</name>
      <anchorfile>classSSCDAccess.html</anchorfile>
      <anchor>ae8f40b1f63b74b6743f93c882c75ead4</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SSCDAccess</name>
      <anchorfile>classSSCDAccess.html</anchorfile>
      <anchor>a4a118f3797f57bc8996edfdb1d6e40e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>classSSCDAccess.html</anchorfile>
      <anchor>a1739f7dc7713169623dcb98e821d57e4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SSCQueries</name>
    <filename>classSSCQueries.html</filename>
  </compound>
  <compound kind="class">
    <name>SSCView</name>
    <filename>classSSCView.html</filename>
    <member kind="function">
      <type></type>
      <name>SSCView</name>
      <anchorfile>classSSCView.html</anchorfile>
      <anchor>a7667b5dcc4d0fddabeca80ee2595f769</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SSCView</name>
      <anchorfile>classSSCView.html</anchorfile>
      <anchor>a12ac294916a030049c888c9aecd99165</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupActions</name>
      <anchorfile>classSSCView.html</anchorfile>
      <anchor>a3653a155deb41ef9939362fc603e7277</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TERM_INFO</name>
    <filename>structTERM__INFO.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>term_num</name>
      <anchorfile>structTERM__INFO.html</anchorfile>
      <anchor>ac9d287c633b3904c283b6e86cf177c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID **</type>
      <name>tw</name>
      <anchorfile>structTERM__INFO.html</anchorfile>
      <anchor>a202605cf65b1f04b8d291187d4089af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>wnum</name>
      <anchorfile>structTERM__INFO.html</anchorfile>
      <anchor>ae18a8ff2e488bbd5dc168b0b24f316da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TextMacroCommand</name>
    <filename>classTextMacroCommand.html</filename>
    <base>Command</base>
    <member kind="function">
      <type>const KIcon</type>
      <name>getCategoryIcon</name>
      <anchorfile>classTextMacroCommand.html</anchorfile>
      <anchor>a30c242204ba2f143c903d58e9a3eb93f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getCategoryText</name>
      <anchorfile>classTextMacroCommand.html</anchorfile>
      <anchor>a007c3d4eeea3d8e2b90fe0f50c7b5801</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextMacroCommand</name>
      <anchorfile>classTextMacroCommand.html</anchorfile>
      <anchor>a2dca048a8396385887139aaa6443eea2</anchor>
      <arglist>(const QString &amp;name, const QString &amp;iconSrc, const QString &amp;description, const QString &amp;text_)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>getText</name>
      <anchorfile>classTextMacroCommand.html</anchorfile>
      <anchor>a2919d25ce82a054e9bea1ccb39ed485e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>triggerPrivate</name>
      <anchorfile>classTextMacroCommand.html</anchorfile>
      <anchor>a9fdcf1e2783d2e58b02f0a39e6fc5bbf</anchor>
      <arglist>(int *state)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QMap&lt; QString, QVariant &gt;</type>
      <name>getValueMapPrivate</name>
      <anchorfile>classTextMacroCommand.html</anchorfile>
      <anchor>ad448790ed7039a155d41cd13484a078c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QDomElement</type>
      <name>serializePrivate</name>
      <anchorfile>classTextMacroCommand.html</anchorfile>
      <anchor>ac5b1ef369cc5a70e2146fceefe75d1d8</anchor>
      <arglist>(QDomDocument *doc, QDomElement &amp;commandElem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>deSerializePrivate</name>
      <anchorfile>classTextMacroCommand.html</anchorfile>
      <anchor>a9925d9c9e7ec0f1848c47b1edd5d3a51</anchor>
      <arglist>(const QDomElement &amp;commandElem)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TOKEN2</name>
    <filename>structTOKEN2.html</filename>
    <member kind="variable">
      <type>TRELLIS_ATOM *</type>
      <name>last_tre</name>
      <anchorfile>structTOKEN2.html</anchorfile>
      <anchor>a9939b77161bee78cfa224f2cfb606451</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>last_cword</name>
      <anchorfile>structTOKEN2.html</anchorfile>
      <anchor>a94bf0c500e3890c989ea736814319894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>last_lscore</name>
      <anchorfile>structTOKEN2.html</anchorfile>
      <anchor>a0911fe3adb8360a56e711c10bce0ce4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB</type>
      <name>score</name>
      <anchorfile>structTOKEN2.html</anchorfile>
      <anchor>a25171cce0b59b2d745b942b5fa810244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>node</name>
      <anchorfile>structTOKEN2.html</anchorfile>
      <anchor>a7de57b5d205e146cdde0e71c8e5b3561</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TrainingManager</name>
    <filename>classTrainingManager.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>writePromptsFile</name>
      <anchorfile>classTrainingManager.html</anchorfile>
      <anchor>aacdc4835da532a04dd3bb9c93219bbc8</anchor>
      <arglist>(PromptsTable *prompts, QString path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deletePrompt</name>
      <anchorfile>classTrainingManager.html</anchorfile>
      <anchor>a34d503167d23ff51b7cef79979c21f3d</anchor>
      <arglist>(QString key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProbability</name>
      <anchorfile>classTrainingManager.html</anchorfile>
      <anchor>ad573805e2f63be29918bf4f2a17ae5f7</anchor>
      <arglist>(QString name)</arglist>
    </member>
    <member kind="function">
      <type>PromptsTable *</type>
      <name>readPrompts</name>
      <anchorfile>classTrainingManager.html</anchorfile>
      <anchor>af993e2c99760b9fa4f4f009b62442cca</anchor>
      <arglist>(QString pathToPrompts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteWord</name>
      <anchorfile>classTrainingManager.html</anchorfile>
      <anchor>a4ca16b0e3cbfd5e1f135ff8d5ca9a424</anchor>
      <arglist>(Word *w)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>savePrompts</name>
      <anchorfile>classTrainingManager.html</anchorfile>
      <anchor>aa5d4a36326688c3f63a20e305fde8e90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>missingWords</name>
      <anchorfile>classTrainingManager.html</anchorfile>
      <anchor>a00dcad2302434331729cc608db9a6def</anchor>
      <arglist>(const QStringList &amp;prompts)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>calcRelevance</name>
      <anchorfile>classTrainingManager.html</anchorfile>
      <anchor>a0f79f9faace9c88497faca2ac9c63995</anchor>
      <arglist>(const TrainingText *text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrainingManager</name>
      <anchorfile>classTrainingManager.html</anchorfile>
      <anchor>ac47942d070449a9838d06af987a75f7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TrainingManager</name>
      <anchorfile>classTrainingManager.html</anchorfile>
      <anchor>a84466cd227fd49922cd9596e1ae68cb4</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TrainingText</name>
    <filename>classTrainingText.html</filename>
    <member kind="function">
      <type>QString</type>
      <name>getName</name>
      <anchorfile>classTrainingText.html</anchorfile>
      <anchor>a8b2e9854f80f5fd255c373ad4c3d18e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPageCount</name>
      <anchorfile>classTrainingText.html</anchorfile>
      <anchor>aaeacabb4f8baaa781571fea14f4f9c27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>getPages</name>
      <anchorfile>classTrainingText.html</anchorfile>
      <anchor>a80255731c94c8e70b77f84bd315082f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getPage</name>
      <anchorfile>classTrainingText.html</anchorfile>
      <anchor>ad003d3ed4e5bdb63b1eb983ac71bcd81</anchor>
      <arglist>(int page) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRelevance</name>
      <anchorfile>classTrainingText.html</anchorfile>
      <anchor>a5e971a9ff258a66b60a94f0d6e3a2d10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrainingText</name>
      <anchorfile>classTrainingText.html</anchorfile>
      <anchor>a8fcf097d5c57d8e2e3d78b370e553c6d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TrainingViewPrivate</name>
    <filename>classTrainingViewPrivate.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>deleteSelected</name>
      <anchorfile>classTrainingViewPrivate.html</anchorfile>
      <anchor>a015552f1d7d6562766396cd3280c5e22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>trainSelected</name>
      <anchorfile>classTrainingViewPrivate.html</anchorfile>
      <anchor>a41316c812da44262189f4bebb00ba1e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>importTexts</name>
      <anchorfile>classTrainingViewPrivate.html</anchorfile>
      <anchor>a383bc7735bdca1d72201baf93253162c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>importDirectory</name>
      <anchorfile>classTrainingViewPrivate.html</anchorfile>
      <anchor>ad848d6941bb2e8b557ae5b3e45dcd439</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrainingViewPrivate</name>
      <anchorfile>classTrainingViewPrivate.html</anchorfile>
      <anchor>ae77bd67efb560a30fa17457886d51ece</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrainingViewPrivate</name>
      <anchorfile>classTrainingViewPrivate.html</anchorfile>
      <anchor>a76846e0f31096ae389b6a0c5e31604fb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TrayIconManager</name>
    <filename>classTrayIconManager.html</filename>
    <member kind="function">
      <type>void</type>
      <name>createIcon</name>
      <anchorfile>classTrayIconManager.html</anchorfile>
      <anchor>a338274abd6f2a97fcb985547ef1461ea</anchor>
      <arglist>(const KIcon &amp;icon, const QString &amp;tooltip)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrayIconManager</name>
      <anchorfile>classTrayIconManager.html</anchorfile>
      <anchor>af42a758d067d7ccb8b5f30b84f9687a4</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrayIconManager</name>
      <anchorfile>classTrayIconManager.html</anchorfile>
      <anchor>a43b829fc6b2e84b18d899c818b5a14ff</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TTSSettings</name>
    <filename>classTTSSettings.html</filename>
  </compound>
  <compound kind="struct">
    <name>Value</name>
    <filename>structValue.html</filename>
    <member kind="variable">
      <type>long</type>
      <name>smp_period</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>aa30ddc72dafbbe89bcc045340a6c596d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>smp_freq</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a9b7d064220f2acec8a1be5f70d264a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>framesize</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a5cebebbfaad62b88e1c45528fcaf831f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>frameshift</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a6c37a87227b85131835ee04c75367b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>preEmph</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a0aaca17b83fe36b00cbb6dad1fafb143</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lifter</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a42f495047e7f84e65a689db8e96c8bc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fbank_num</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>ab38f0f0bae9fcf3c606c5cb9aaca6aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>delWin</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a4f6c669851ff0046f7f439b62c035826</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>accWin</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>aa0933668435fd89ae177c54ff7bbe799</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>silFloor</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a616eaea253bedf1dd1c819301595fae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>escale</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a262021a98db5a44a50879fd9901084bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>hipass</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a87823c7b1b487d6378453f49296bf3aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lopass</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a6ea7eb73fe9578d660b8b16c0b8046c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>enormal</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>aa2744ba59154e9c19dabc181b9786edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>raw_e</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a0b5940687b52b8b9c7354530d260074e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zmeanframe</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a8ca5f0997c418cd0f561d8d70c2dad34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>usepower</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a0b6b58e275d5d4f0c685a25fe849470c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>vtln_alpha</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>ad77a46afa9bcc747c22d9c4d64d9154d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>vtln_upper</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a102a55fe8f6cdd2c4217f28f3e332323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>vtln_lower</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a39a29ad0dd046a584e24ce81d87d928b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>delta</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a7f593a1603babbabe532770c04626879</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>acc</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>aa23d32c227bc287e0c0426a169adf2e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>energy</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a25d249e717ac872539ceabb19f615c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>c0</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a6de42e60df983717cfa19bd8a833a057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>absesup</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a4d57a8b261c6113843222cae5cccd9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cmn</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a869c050a7afeadac0311ca50c65d0001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cvn</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a3aff87d653f9faa6f65269a7a6a526a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mfcc_dim</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a3943d1a34d77afb4d53c30b756dab06d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>baselen</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a535abdb527c1165a11e13f8e6fce2bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>vecbuflen</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>acfa384c02a44ae8506bd10c0e82c5429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>veclen</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a70eb9ba4621c041572e32eb3abae3d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>loaded</name>
      <anchorfile>structValue.html</anchorfile>
      <anchor>a919defaa8bedd62cd555ae3539f7cfdc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VocabularyView</name>
    <filename>classVocabularyView.html</filename>
    <base>InlineWidget</base>
    <member kind="function">
      <type></type>
      <name>VocabularyView</name>
      <anchorfile>classVocabularyView.html</anchorfile>
      <anchor>a7d2cbc7bfa229daba8cd3bf77fce37be</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VocabularyView</name>
      <anchorfile>classVocabularyView.html</anchorfile>
      <anchor>a37a9d9ec499c1414329eafeacb8c441a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VocabularyViewPrivate</name>
    <filename>classVocabularyViewPrivate.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classVocabularyViewPrivate.html</anchorfile>
      <anchor>a6962539167093a2c32866f22f09b1798</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>deleteSelectedWord</name>
      <anchorfile>classVocabularyViewPrivate.html</anchorfile>
      <anchor>ab0c8d3b558664d5f28e3a4e8333a4f10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>copyWordToTrain</name>
      <anchorfile>classVocabularyViewPrivate.html</anchorfile>
      <anchor>a592dc07be2939a4daeb4cd7f0e0a8bd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>deleteTrainingWord</name>
      <anchorfile>classVocabularyViewPrivate.html</anchorfile>
      <anchor>a488b4cb5e5c39733f88d0bd045da94aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>trainList</name>
      <anchorfile>classVocabularyViewPrivate.html</anchorfile>
      <anchor>ae7017bc6dc8878c101913dcacb5b2e3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VocabularyViewPrivate</name>
      <anchorfile>classVocabularyViewPrivate.html</anchorfile>
      <anchor>ad2bc4e16e6adc677ff2b0805fce7f868</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VocabularyViewPrivate</name>
      <anchorfile>classVocabularyViewPrivate.html</anchorfile>
      <anchor>a96dbad4c0d6a039e1b8311a2b4ff588b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VolumeWidget</name>
    <filename>classVolumeWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>WAV</name>
    <filename>classWAV.html</filename>
    <member kind="function">
      <type></type>
      <name>WAV</name>
      <anchorfile>classWAV.html</anchorfile>
      <anchor>adf251a5780f35271dfc5c9009bb7d7ee</anchor>
      <arglist>(QString filename, int channels=0, int samplerate=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addData</name>
      <anchorfile>classWAV.html</anchorfile>
      <anchor>a3efe36909d30995cb3e16f0391f2c1d9</anchor>
      <arglist>(short *data, int length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeFile</name>
      <anchorfile>classWAV.html</anchorfile>
      <anchor>ac9e42b0903381d097edd4c23fd481bf0</anchor>
      <arglist>(QString filename=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WAV</name>
      <anchorfile>classWAV.html</anchorfile>
      <anchor>abf955e178e2e6682dbcf99b1f94db7a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WavFileWidget</name>
    <filename>classWavFileWidget.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>record</name>
      <anchorfile>classWavFileWidget.html</anchorfile>
      <anchor>af43674fc74ecaacc7d92972cf49a976c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stopRecording</name>
      <anchorfile>classWavFileWidget.html</anchorfile>
      <anchor>ad78338a47032f16989b35906c4073859</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>playback</name>
      <anchorfile>classWavFileWidget.html</anchorfile>
      <anchor>aa65d269ecc4a1ff1808d9e275016bf7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stopPlayback</name>
      <anchorfile>classWavFileWidget.html</anchorfile>
      <anchor>ac7961e5ae3d0f706ff1c9666b22f0395</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>finishPlayback</name>
      <anchorfile>classWavFileWidget.html</anchorfile>
      <anchor>a7bdfa5fb7ef12cb8df112f009e736bed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>deleteSample</name>
      <anchorfile>classWavFileWidget.html</anchorfile>
      <anchor>a0194243e6945b427fc952215bd4887b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>displayRecordingProgress</name>
      <anchorfile>classWavFileWidget.html</anchorfile>
      <anchor>a3f519d9ca84f90ac8ae5bce77a0e8bdd</anchor>
      <arglist>(int msecs, float level)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>displayPlaybackProgress</name>
      <anchorfile>classWavFileWidget.html</anchorfile>
      <anchor>a4d0e163c157e46ddc37e2d4946d9fb7e</anchor>
      <arglist>(int msecs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WavFileWidget</name>
      <anchorfile>classWavFileWidget.html</anchorfile>
      <anchor>a2a222f18bd32bb3b1919210928b98102</anchor>
      <arglist>(const SimonSound::DeviceConfiguration &amp;recordingDevice, const QString &amp;filename, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasRecordingReady</name>
      <anchorfile>classWavFileWidget.html</anchorfile>
      <anchor>a528d850902a4fdca64a0a5a9b93c2880</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WavFileWidget</name>
      <anchorfile>classWavFileWidget.html</anchorfile>
      <anchor>a27894eedbadbf65404448a9e367a4038</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WavPlayer</name>
    <filename>classWavPlayer.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classWavPlayer.html</anchorfile>
      <anchor>ac656a3c3546c39d7ba2678c1470e68c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WavPlayer</name>
      <anchorfile>classWavPlayer.html</anchorfile>
      <anchor>ab5c02ed6a1a20a998884a9e963a247d1</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>play</name>
      <anchorfile>classWavPlayer.html</anchorfile>
      <anchor>a45f52976fda8cfd2b8f526153c44b7a1</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WavPlayer</name>
      <anchorfile>classWavPlayer.html</anchorfile>
      <anchor>a16c8f68bba1231eb3eca569bb5b3c0d3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WavPlayerClient</name>
    <filename>classWavPlayerClient.html</filename>
    <member kind="function">
      <type></type>
      <name>WavPlayerClient</name>
      <anchorfile>classWavPlayerClient.html</anchorfile>
      <anchor>ab6b39daaa9d8485489c22af4175b5672</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>play</name>
      <anchorfile>classWavPlayerClient.html</anchorfile>
      <anchor>a995fec34c3d30d2a3b46e0cd95cf601e</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classWavPlayerClient.html</anchorfile>
      <anchor>a4173662422dab7d81abaa342aef1c4e0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WavRecorder</name>
    <filename>classWavRecorder.html</filename>
    <member kind="function">
      <type></type>
      <name>WavRecorder</name>
      <anchorfile>classWavRecorder.html</anchorfile>
      <anchor>a0bd28fafb28c4fe82b546877aaf60d1f</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>finish</name>
      <anchorfile>classWavRecorder.html</anchorfile>
      <anchor>a2cbc0924c5a46c6125f24cce19372493</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>record</name>
      <anchorfile>classWavRecorder.html</anchorfile>
      <anchor>ae7c08332aef4e1c8a7762bdb62f0c88a</anchor>
      <arglist>(QString filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WavRecorder</name>
      <anchorfile>classWavRecorder.html</anchorfile>
      <anchor>a91e335cc29e6d58b18d70bdf4ea5e676</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>wchmm_info</name>
    <filename>structwchmm__info.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>lmtype</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a995ad05713aff595eceb07d5d2e081c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lmvar</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a69209919b3350e26b6d2077cf275efcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>category_tree</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a8c286bada3125d62b54f6e4aa7911f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HTK_HMM_INFO *</type>
      <name>hmminfo</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a36e3183f9d59a49e67555537d7f415d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NGRAM_INFO *</type>
      <name>ngram</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>aae99470c1edd1acd1c352825e1052baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DFA_INFO *</type>
      <name>dfa</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a776457955167ee0fd663b2b36885d1cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_INFO *</type>
      <name>winfo</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>ad5df71d9791d52519d7bb2859b2ee1c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>ccd_flag</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>aee82bf626643f4124525810fcb3da275</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxwcn</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>aff02800e36e86171225636f6921896d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a86b327fabec21afee494068683c0afeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WCHMM_STATE *</type>
      <name>state</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a86a91101f225557ef1201440bf48a79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>self_a</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a995c6395356e49021770822b6971a36a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>next_a</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a4b91e49f6fcf13dc09b157614d04aca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>A_CELL2 **</type>
      <name>ac</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>ab1664705282808d3b9c58bc22455e4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID *</type>
      <name>stend</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a942f496f281ffc7461ac54bc176b8b99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int **</type>
      <name>offset</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a31fb26acb175139066d7cfe010b15200</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>wordend</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>aa8f70916de1a565efaeb225aa5fbb64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>startnum</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a8070b5b2112f53c23f919fd6974bae4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>startnode</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a233945ae969d81c3e4374f298faa374d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>wordbegin</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a8b799aaa5a9fb515ecf2396f8ecaa7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxstartnum</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a0b941db676a921364f41491b5e8125b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID *</type>
      <name>start2wid</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a5245bf22cfad6596ac5d551b4577b402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB *</type>
      <name>wordend_a</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a2c9cd1971ee0230ae064d25cadb4aea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>S_CELL **</type>
      <name>sclist</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a0c2dacb2f6e74bae86478b02096f0484</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>sclist2node</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>afcce26f4b1090a478cbe0e95d18dc8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>scnum</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>ae7376b0ee0ad8c87130c3223f6e3de7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BMALLOC_BASE *</type>
      <name>malloc_root</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a7f624d7e91efd1617d04c6fb400f160e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMMWork *</type>
      <name>hmmwrk</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a11815764503369d9fa62b5907191b822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LM_PROB_CACHE</type>
      <name>lmcache</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a2c017342dbc687f4f132d7712a2d3988</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WCHMM_WORK</type>
      <name>wrk</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>aeee02d8bc5253b258df923d4c57f9b99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>separated_word_count</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>aa999ced0e2f846f914e8ea3880de76b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>lccbuf</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a37432173fc67bc67b34b194ddbd185a0</anchor>
      <arglist>[MAX_HMMNAME_LEN+7]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>lccbuf2</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a76450fafad8cb2eda1c3e03530554e51</anchor>
      <arglist>[MAX_HMMNAME_LEN+7]</arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB(*</type>
      <name>uni_prob_user</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a353ac3208d1f65fe74a83df15e058b1f</anchor>
      <arglist>)(WORD_INFO *, WORD_ID, LOGPROB)</arglist>
    </member>
    <member kind="variable">
      <type>LOGPROB(*</type>
      <name>bi_prob_user</name>
      <anchorfile>structwchmm__info.html</anchorfile>
      <anchor>a291b391a17ee0f19807303baa7f21937</anchor>
      <arglist>)(WORD_INFO *, WORD_ID, WORD_ID, LOGPROB)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>wchmm_state</name>
    <filename>structwchmm__state.html</filename>
    <member kind="variable">
      <type>HTK_HMM_State *</type>
      <name>out</name>
      <anchorfile>structwchmm__state.html</anchorfile>
      <anchor>af89b01ccba5c11a358b4db5509e44230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>scid</name>
      <anchorfile>structwchmm__state.html</anchorfile>
      <anchor>a971edb32fb711c5851d0cffedec94201</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WCHMM_WORK</name>
    <filename>structWCHMM__WORK.html</filename>
  </compound>
  <compound kind="class">
    <name>WebserviceTTSProvider</name>
    <filename>classWebserviceTTSProvider.html</filename>
    <base>SimonTTSProvider</base>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>classWebserviceTTSProvider.html</anchorfile>
      <anchor>a6632c24700580679b1ae8494a9e5853f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>uninitialize</name>
      <anchorfile>classWebserviceTTSProvider.html</anchorfile>
      <anchor>ab60eaee6b36a9187e77d3842eb57dc99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSay</name>
      <anchorfile>classWebserviceTTSProvider.html</anchorfile>
      <anchor>a180625dfc3a52baa47836181d108b55e</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>say</name>
      <anchorfile>classWebserviceTTSProvider.html</anchorfile>
      <anchor>a45e40f16f3968ee51e736bb2303b9917</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>interrupt</name>
      <anchorfile>classWebserviceTTSProvider.html</anchorfile>
      <anchor>aee63c893187f79a3ade9e29fb48c67eb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WiktionaryDict</name>
    <filename>classWiktionaryDict.html</filename>
    <base>Dict</base>
    <member kind="function">
      <type></type>
      <name>WiktionaryDict</name>
      <anchorfile>classWiktionaryDict.html</anchorfile>
      <anchor>a0b2b78823ee4727c7e7a65c837ba9e2b</anchor>
      <arglist>(QString path=&quot;&quot;, QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classWiktionaryDict.html</anchorfile>
      <anchor>ab750ad1ea4c856ea207b6663c8aa0eac</anchor>
      <arglist>(QString path=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startElement</name>
      <anchorfile>classWiktionaryDict.html</anchorfile>
      <anchor>af0d4ecf6b549bfb2e7d2333bb177df4c</anchor>
      <arglist>(const QString &amp;, const QString &amp;, const QString &amp;qName, const QXmlAttributes &amp;attributes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>endElement</name>
      <anchorfile>classWiktionaryDict.html</anchorfile>
      <anchor>ae53ec9788f48e0de7e5ff2a5cae8ca88</anchor>
      <arglist>(const QString &amp;, const QString &amp;, const QString &amp;qName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>characters</name>
      <anchorfile>classWiktionaryDict.html</anchorfile>
      <anchor>aa4f208faded44e428eb250a47802ff8f</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>findIPAs</name>
      <anchorfile>classWiktionaryDict.html</anchorfile>
      <anchor>ab83a24fa66a2323491662ec053d13ed3</anchor>
      <arglist>(QString haystack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertWords</name>
      <anchorfile>classWiktionaryDict.html</anchorfile>
      <anchor>a7040baf73f3b28d46a0202b82ef045fe</anchor>
      <arglist>(QString word, QString terminal, QStringList pronunciations)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WiktionaryDict</name>
      <anchorfile>classWiktionaryDict.html</anchorfile>
      <anchor>a0a192bbc2357001106938f1a9b9f1039</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WindowsEvents</name>
    <filename>classWindowsEvents.html</filename>
    <base>CoreEvents</base>
    <member kind="function">
      <type></type>
      <name>WindowsEvents</name>
      <anchorfile>classWindowsEvents.html</anchorfile>
      <anchor>a8863acd224f1828051bb2a2a17649707</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>click</name>
      <anchorfile>classWindowsEvents.html</anchorfile>
      <anchor>a3afffddd0231ba9495ffda94e3f6dbb4</anchor>
      <arglist>(int x, int y, EventSimulation::ClickMode clickMode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendKeyPrivate</name>
      <anchorfile>classWindowsEvents.html</anchorfile>
      <anchor>abf3bef1a5761338f6be55b6706b1b002</anchor>
      <arglist>(unsigned int key, EventSimulation::PressMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModifierKey</name>
      <anchorfile>classWindowsEvents.html</anchorfile>
      <anchor>a9802ad39203fca7f197b2f6c99e5537a</anchor>
      <arglist>(int virtualKey, bool once)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetModifier</name>
      <anchorfile>classWindowsEvents.html</anchorfile>
      <anchor>a348d15caee11066710f30ad519ab8fbf</anchor>
      <arglist>(int virtualKey)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowsEvents</name>
      <anchorfile>classWindowsEvents.html</anchorfile>
      <anchor>a572367843392b4cc2954710cca7929e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WindowsProcessInfoGatherer</name>
    <filename>classWindowsProcessInfoGatherer.html</filename>
    <base>ProcessInfoGatherer</base>
    <member kind="slot">
      <type>void</type>
      <name>checkActiveWindow</name>
      <anchorfile>classWindowsProcessInfoGatherer.html</anchorfile>
      <anchor>a0733f93b7e076dcb419ebca0a03b72e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>checkCurrentProcesses</name>
      <anchorfile>classWindowsProcessInfoGatherer.html</anchorfile>
      <anchor>a2a785ca058213a076411ef63383d51a6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Word</name>
    <filename>classWord.html</filename>
    <member kind="function">
      <type></type>
      <name>Word</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>afb1c5f1c6e61e36499d55a1c23f5660a</anchor>
      <arglist>(QString word_, QString pronunciation_, QString terminal_)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getWord</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>a8a6b1d869b70c7d837cc43ffbd25794a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWord</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>ab916dd32de9da3d8b33f54defecde7d4</anchor>
      <arglist>(QString word)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getLexiconWord</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>af1c0ebbad4db72b11437ccc47350bc0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getPronunciation</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>a21b992c79da61fb6cb02d8d6fa39cd2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPronunciation</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>a3ac0e5a62a9eb8b84e3b5d99a5be1d8e</anchor>
      <arglist>(QString pronunciation)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getTerminal</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>a54df1d45c3662d2cfcaf294eeb9fff6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTerminal</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>aa3c807d79fbd9e84d6047d14af96ca7e</anchor>
      <arglist>(QString terminal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>a961a0165f485680288dbc1e694ea5e3b</anchor>
      <arglist>(const Word &amp;w2) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPropability</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>a889c4b4cc28a8031b31086ed011c1371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Word</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>a1fbcaae6859604d92e94cab540cb3523</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WORD_INFO</name>
    <filename>structWORD__INFO.html</filename>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>maxnum</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a6ce4d3802aa457f48c5acac17dcfedee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>num</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a191c092b3f14b69148da4358842e8e9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>errnum</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a476e8933ab3f29264619fc70355767f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>linenum</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>ac0a569b4a20b140abebe9563493de4b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>do_conv</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>af029e18477929413125d28eb0e3a011c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>ok_flag</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a0d7da35515a3613c5cd3aa58a4a54a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>wlen</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a81f284210cec51b81e9458405f4a5749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>wname</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>afe8fc00749966fcdc2659241c7cd6ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>woutput</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a8d5955d1ab04b1d4179799aeb4506bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HMM_Logical ***</type>
      <name>wseq</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a57f6c55efe5243a28b09e886edb1457e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID *</type>
      <name>wton</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a557266111476523950a092bfb609044e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>head_silwid</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a8859c545dc144fd65cc952bed40524e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WORD_ID</type>
      <name>tail_silwid</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>aa7cad0bf269e73af63e68c963529a48c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>maxwn</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>af1b64e460318c833856a002136400c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>maxwlen</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>af81f79f8d858b394b6d2f66c88864c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>totalstatenum</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a7441d5a035b611846211fdd97e307877</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>totalmodelnum</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a851ac1076ad0624c0f077189fe924832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>totaltransnum</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a87dc2dc923b5fd05b14be5dbdc6578cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean *</type>
      <name>is_transparent</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>a2f9a1310985d4a9f3e854f3cdb0149b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>APATNODE *</type>
      <name>errph_root</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>ae18d8e7017f1e03350a4749f9cd09e01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BMALLOC_BASE *</type>
      <name>mroot</name>
      <anchorfile>structWORD__INFO.html</anchorfile>
      <anchor>ae8e4a0469bc1c4f9b10a7a35cba5f7dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>XEvents</name>
    <filename>classXEvents.html</filename>
    <base>CoreEvents</base>
    <member kind="function">
      <type></type>
      <name>XEvents</name>
      <anchorfile>classXEvents.html</anchorfile>
      <anchor>af020a6ce1fb3013ac5aa076d92da6a92</anchor>
      <arglist>(char *displayName=&quot;:0.0&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~XEvents</name>
      <anchorfile>classXEvents.html</anchorfile>
      <anchor>a0cec658f1a44f943bcf93008afea09e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>XMLDomReader</name>
    <filename>classXMLDomReader.html</filename>
    <base>XMLReader</base>
    <member kind="function">
      <type></type>
      <name>XMLDomReader</name>
      <anchorfile>classXMLDomReader.html</anchorfile>
      <anchor>a78337747cd839545eab6372ed2d7b8ca</anchor>
      <arglist>(QString path, QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classXMLDomReader.html</anchorfile>
      <anchor>ae4eb3d7bf3b54a7ebdb89d7897af1286</anchor>
      <arglist>(QString path=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load</name>
      <anchorfile>classXMLDomReader.html</anchorfile>
      <anchor>acd3cbd6785130c9a7cec5cb9cf76ef9c</anchor>
      <arglist>(QString path=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~XMLDomReader</name>
      <anchorfile>classXMLDomReader.html</anchorfile>
      <anchor>a09f107df068d1574b2f4853e64568053</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>XMLReader</name>
    <filename>classXMLReader.html</filename>
    <member kind="function">
      <type></type>
      <name>XMLReader</name>
      <anchorfile>classXMLReader.html</anchorfile>
      <anchor>a42faf9c5d78994e597f608126123b559</anchor>
      <arglist>(QString path, QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~XMLReader</name>
      <anchorfile>classXMLReader.html</anchorfile>
      <anchor>a73065c7758f26ef69387e315c96d13ac</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>XMLSAXReader</name>
    <filename>classXMLSAXReader.html</filename>
    <base>XMLReader</base>
    <member kind="function">
      <type></type>
      <name>XMLSAXReader</name>
      <anchorfile>classXMLSAXReader.html</anchorfile>
      <anchor>a5ae4ce6329668d058ed2e63c0c6d2966</anchor>
      <arglist>(QString path, QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classXMLSAXReader.html</anchorfile>
      <anchor>a548b7dd5baaad6f25335d9634c25d1e3</anchor>
      <arglist>(QXmlDefaultHandler *handler, QString path=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~XMLSAXReader</name>
      <anchorfile>classXMLSAXReader.html</anchorfile>
      <anchor>ac8cbca7caeb8a1fa6541e5930074cdeb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>XMLTrainingText</name>
    <filename>classXMLTrainingText.html</filename>
    <base virtualness="virtual">XMLDomReader</base>
    <base virtualness="virtual">TrainingText</base>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classXMLTrainingText.html</anchorfile>
      <anchor>ae96227d07e8cbceeccea57e90123ca00</anchor>
      <arglist>(QString path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classXMLTrainingText.html</anchorfile>
      <anchor>a8ee3e55d067ee81176a087428af3322f</anchor>
      <arglist>(QString path=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>XMLTrainingTextList</name>
    <filename>classXMLTrainingTextList.html</filename>
    <base>XMLDomReader</base>
    <member kind="function">
      <type></type>
      <name>XMLTrainingTextList</name>
      <anchorfile>classXMLTrainingTextList.html</anchorfile>
      <anchor>a7457ce32fbbd99ad5981f5d7e6d01389</anchor>
      <arglist>(QString path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load</name>
      <anchorfile>classXMLTrainingTextList.html</anchorfile>
      <anchor>a596c4b01ca0b53323ca4de3b6ac2145c</anchor>
      <arglist>(QString path=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~XMLTrainingTextList</name>
      <anchorfile>classXMLTrainingTextList.html</anchorfile>
      <anchor>ade25b19743fe3eedf3f9737644c93d35</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ZEROCROSS</name>
    <filename>structZEROCROSS.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>trigger</name>
      <anchorfile>structZEROCROSS.html</anchorfile>
      <anchor>a7835cac5f1a9ad4cd058cd5471704652</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>length</name>
      <anchorfile>structZEROCROSS.html</anchorfile>
      <anchor>aac72d30a1a9d98f343d378faf23f3f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>offset</name>
      <anchorfile>structZEROCROSS.html</anchorfile>
      <anchor>ad7c4dd8d0af865dd7346029c2ce81280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>zero_cross</name>
      <anchorfile>structZEROCROSS.html</anchorfile>
      <anchor>ac30942c33eeb764738b9ad5fd41ded29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>is_trig</name>
      <anchorfile>structZEROCROSS.html</anchorfile>
      <anchor>abce337f53fd19f9fb5ed37e6cf4e234d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sign</name>
      <anchorfile>structZEROCROSS.html</anchorfile>
      <anchor>a0936fcda4ff73eceed16171318937e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>top</name>
      <anchorfile>structZEROCROSS.html</anchorfile>
      <anchor>a8ae1b9f2ef328edac01cf1857a34e0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>valid_len</name>
      <anchorfile>structZEROCROSS.html</anchorfile>
      <anchor>a5edcc211ec3a675778e38e3a520571d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SP16 *</type>
      <name>data</name>
      <anchorfile>structZEROCROSS.html</anchorfile>
      <anchor>a59a53a849f96737be662b4add8f3eb7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>is_zc</name>
      <anchorfile>structZEROCROSS.html</anchorfile>
      <anchor>a50203d936bfdba321ca6b7af340747b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>level</name>
      <anchorfile>structZEROCROSS.html</anchorfile>
      <anchor>a3295d72d60e43b395b0a20a466e1b7fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>julius/gramtools/accept_check/</name>
    <path>/home/anash/simon/simonsource/julius/gramtools/accept_check/</path>
    <filename>dir_7246afc5724395ae66d86dc80454062f.html</filename>
    <file>accept_check.c</file>
    <file>common.h</file>
    <file>rdterm.c</file>
  </compound>
  <compound kind="dir">
    <name>accomp/</name>
    <path>/home/anash/simon/simonsource/accomp/</path>
    <filename>dir_d24b35bf77fee53209512fd931c47dbd.html</filename>
    <dir>accomp/julius/</dir>
  </compound>
  <compound kind="dir">
    <name>plugins/Conditions/ActiveWindow/</name>
    <path>/home/anash/simon/simonsource/plugins/Conditions/ActiveWindow/</path>
    <filename>dir_191db74ce740d958437535b3736cdb59.html</filename>
    <file>activewindow.cpp</file>
    <file>activewindow.h</file>
    <file>createactivewindowwidget.cpp</file>
    <file>createactivewindowwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Conditions/ActiveWindow/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Conditions/ActiveWindow/</path>
    <filename>dir_46da36032c9be2624e03b61bdf7cac05.html</filename>
    <file>moc_activewindow.cpp</file>
    <file>moc_createactivewindowwidget.cpp</file>
    <file>simonactivewindowplugin_automoc.cpp</file>
    <file>ui_createactivewindowwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonmodelmanagementui/AddWord/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonmodelmanagementui/AddWord/</path>
    <filename>dir_21a75dc66b2172a7e8f6cb438367c2ef.html</filename>
    <file>addwordintropage.cpp</file>
    <file>addwordintropage.h</file>
    <file>addwordrecordpage.cpp</file>
    <file>addwordrecordpage.h</file>
    <file>addwordresolvepage.cpp</file>
    <file>addwordresolvepage.h</file>
    <file>addwordview.cpp</file>
    <file>addwordview.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/adin/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/</path>
    <filename>dir_b415f6606e85352a7e8c61764aa77483.html</filename>
    <dir>julius/libsent/src/adin/pa/</dir>
    <file>adin_esd.c</file>
    <file>adin_file.c</file>
    <file>adin_mic_darwin_coreaudio.c</file>
    <file>adin_mic_freebsd.c</file>
    <file>adin_mic_linux.c</file>
    <file>adin_mic_linux_alsa.c</file>
    <file>adin_mic_linux_oss.c</file>
    <file>adin_mic_o2.c</file>
    <file>adin_mic_sol2.c</file>
    <file>adin_mic_sp.c</file>
    <file>adin_mic_sun4.c</file>
    <file>adin_na.c</file>
    <file>adin_netaudio.c</file>
    <file>adin_portaudio.c</file>
    <file>adin_portaudio_orig.c</file>
    <file>adin_sndfile.c</file>
    <file>adin_tcpip.c</file>
    <file>ds48to16.c</file>
    <file>lpfcoef_2to1.h</file>
    <file>lpfcoef_3to4.h</file>
    <file>zc-e.c</file>
    <file>zmean.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/adinrec/</name>
    <path>/home/anash/simon/simonsource/julius/adinrec/</path>
    <filename>dir_611d3f43076a03806553050346ab0527.html</filename>
    <file>adinrec.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/adintool/</name>
    <path>/home/anash/simon/simonsource/julius/adintool/</path>
    <filename>dir_2d180e0c9e33a278605afa7930a58c24.html</filename>
    <file>adintool.c</file>
  </compound>
  <compound kind="dir">
    <name>build/afaras/</name>
    <path>/home/anash/simon/simonsource/build/afaras/</path>
    <filename>dir_4b326c4222acb24e92ee366b52d1edd2.html</filename>
    <dir>build/afaras/src/</dir>
  </compound>
  <compound kind="dir">
    <name>afaras/</name>
    <path>/home/anash/simon/simonsource/afaras/</path>
    <filename>dir_0e3aa57461229c0d3d8fdb0efd7eafc2.html</filename>
    <dir>afaras/src/</dir>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/AI/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/AI/</path>
    <filename>dir_52baae76a3850ab91cc1af92e7f75096.html</filename>
    <file>aicommandmanager.cpp</file>
    <file>aicommandmanager.h</file>
    <file>aiconfiguration.cpp</file>
    <file>aiconfiguration.h</file>
    <file>aimlparser.cpp</file>
    <file>aimlparser.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/AI/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/AI/</path>
    <filename>dir_aa010b60d37bf1190e9b57f9d1017002.html</filename>
    <file>moc_aicommandmanager.cpp</file>
    <file>moc_aiconfiguration.cpp</file>
    <file>simonaiplugin_automoc.cpp</file>
    <file>ui_aiconfigurationdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Akonadi/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Akonadi/</path>
    <filename>dir_654d486dd5ee859e094ad6d508aad2c5.html</filename>
    <file>akonadicommand.cpp</file>
    <file>akonadicommand.h</file>
    <file>akonadicommandmanager.cpp</file>
    <file>akonadicommandmanager.h</file>
    <file>akonadiconfiguration.cpp</file>
    <file>akonadiconfiguration.h</file>
    <file>alarmscheduleitem.cpp</file>
    <file>alarmscheduleitem.h</file>
    <file>commandscheduleitem.cpp</file>
    <file>commandscheduleitem.h</file>
    <file>createakonadicommandwidget.cpp</file>
    <file>createakonadicommandwidget.h</file>
    <file>dialogrunner.cpp</file>
    <file>dialogrunner.h</file>
    <file>scheduleitem.cpp</file>
    <file>scheduleitem.h</file>
    <file>timeselector.cpp</file>
    <file>timeselector.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/anlz/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/anlz/</path>
    <filename>dir_c6c9d3c480f0b0dc69d4cdf7172b8bcf.html</filename>
    <file>param_malloc.c</file>
    <file>paramselect.c</file>
    <file>paramtypes.c</file>
    <file>rdparam.c</file>
    <file>strip.c</file>
    <file>strip_mfcc.c</file>
    <file>wrsamp.c</file>
    <file>wrwav.c</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/ATIntegration/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/ATIntegration/</path>
    <filename>dir_e096bf053098f0e101317bc1d6d70cc0.html</filename>
    <file>atbackend.cpp</file>
    <file>atbackend.h</file>
    <file>ato.h</file>
    <file>atobject.cpp</file>
    <file>atobject.h</file>
    <file>atwatcher.cpp</file>
    <file>atwatcher.h</file>
    <file>dbusbackend.cpp</file>
    <file>dbusbackend.h</file>
    <file>msaabackend.cpp</file>
    <file>msaabackend.h</file>
  </compound>
  <compound kind="dir">
    <name>build/benefit/</name>
    <path>/home/anash/simon/simonsource/build/benefit/</path>
    <filename>dir_d3b3b5d3868e337e245c8dcaf6abcb60.html</filename>
    <dir>build/benefit/simonskype/</dir>
  </compound>
  <compound kind="dir">
    <name>benefit/</name>
    <path>/home/anash/simon/simonsource/benefit/</path>
    <filename>dir_fe2accca09723d1aedb6f1f064e259b9.html</filename>
    <dir>benefit/simonskype/</dir>
    <dir>benefit/speechcal/</dir>
  </compound>
  <compound kind="dir">
    <name>build/</name>
    <path>/home/anash/simon/simonsource/build/</path>
    <filename>dir_279c528b59a62fc6bab2b0b12ee45000.html</filename>
    <dir>build/afaras/</dir>
    <dir>build/benefit/</dir>
    <dir>build/CMakeFiles/</dir>
    <dir>build/CMakeTmp/</dir>
    <dir>build/ksimond/</dir>
    <dir>build/plugins/</dir>
    <dir>build/sam/</dir>
    <dir>build/simon/</dir>
    <dir>build/simond/</dir>
    <dir>build/simonlib/</dir>
    <dir>build/simonoid/</dir>
    <dir>build/ssc/</dir>
    <dir>build/sscd/</dir>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Calculator/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Calculator/</path>
    <filename>dir_0040637de049312182bc02e8ecd820de.html</filename>
    <file>calculatorcommandmanager.cpp</file>
    <file>calculatorcommandmanager.h</file>
    <file>calculatorconfiguration.cpp</file>
    <file>calculatorconfiguration.h</file>
    <file>token.cpp</file>
    <file>token.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/Calculator/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/Calculator/</path>
    <filename>dir_c60c79abf9321346132d0559df68dda3.html</filename>
    <file>moc_calculatorcommandmanager.cpp</file>
    <file>moc_calculatorconfiguration.cpp</file>
    <file>simoncalculatorplugin_automoc.cpp</file>
    <file>ui_calculatorconfigurationdlg.h</file>
    <file>ui_calculatorwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>build/CMakeFiles/</name>
    <path>/home/anash/simon/simonsource/build/CMakeFiles/</path>
    <filename>dir_514999a4b9b06a2214bc8e798d83d923.html</filename>
    <dir>build/CMakeFiles/CompilerIdC/</dir>
    <dir>build/CMakeFiles/CompilerIdCXX/</dir>
  </compound>
  <compound kind="dir">
    <name>build/CMakeTmp/</name>
    <path>/home/anash/simon/simonsource/build/CMakeTmp/</path>
    <filename>dir_4c0e80e45ca131fa004a2c7a9c7c644b.html</filename>
    <file>check_qt_visibility.cpp</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/</path>
    <filename>dir_b21b893bfda00a7b6040853c7a07dfdc.html</filename>
    <dir>plugins/Commands/AI/</dir>
    <dir>plugins/Commands/Akonadi/</dir>
    <dir>plugins/Commands/ATIntegration/</dir>
    <dir>plugins/Commands/Calculator/</dir>
    <dir>plugins/Commands/Composite/</dir>
    <dir>plugins/Commands/DBus/</dir>
    <dir>plugins/Commands/DesktopGrid/</dir>
    <dir>plugins/Commands/Dialog/</dir>
    <dir>plugins/Commands/Dictation/</dir>
    <dir>plugins/Commands/Executable/</dir>
    <dir>plugins/Commands/Filter/</dir>
    <dir>plugins/Commands/InputNumber/</dir>
    <dir>plugins/Commands/Json/</dir>
    <dir>plugins/Commands/Keyboard/</dir>
    <dir>plugins/Commands/List/</dir>
    <dir>plugins/Commands/Place/</dir>
    <dir>plugins/Commands/PronunciationTraining/</dir>
    <dir>plugins/Commands/Recognizer/</dir>
    <dir>plugins/Commands/Shortcut/</dir>
    <dir>plugins/Commands/Template/</dir>
    <dir>plugins/Commands/TextMacro/</dir>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/</path>
    <filename>dir_367c83f024d18f436f0b51153f22fca3.html</filename>
    <dir>build/plugins/Commands/AI/</dir>
    <dir>build/plugins/Commands/Calculator/</dir>
    <dir>build/plugins/Commands/Composite/</dir>
    <dir>build/plugins/Commands/DBus/</dir>
    <dir>build/plugins/Commands/DesktopGrid/</dir>
    <dir>build/plugins/Commands/Dialog/</dir>
    <dir>build/plugins/Commands/Dictation/</dir>
    <dir>build/plugins/Commands/Executable/</dir>
    <dir>build/plugins/Commands/Filter/</dir>
    <dir>build/plugins/Commands/InputNumber/</dir>
    <dir>build/plugins/Commands/Json/</dir>
    <dir>build/plugins/Commands/Keyboard/</dir>
    <dir>build/plugins/Commands/List/</dir>
    <dir>build/plugins/Commands/Place/</dir>
    <dir>build/plugins/Commands/PronunciationTraining/</dir>
    <dir>build/plugins/Commands/Recognizer/</dir>
    <dir>build/plugins/Commands/Shortcut/</dir>
    <dir>build/plugins/Commands/TextMacro/</dir>
  </compound>
  <compound kind="dir">
    <name>build/CMakeFiles/CompilerIdC/</name>
    <path>/home/anash/simon/simonsource/build/CMakeFiles/CompilerIdC/</path>
    <filename>dir_75cafb4eec88822b4843c6ab9daae77d.html</filename>
    <file>CMakeCCompilerId.c</file>
  </compound>
  <compound kind="dir">
    <name>build/CMakeFiles/CompilerIdCXX/</name>
    <path>/home/anash/simon/simonsource/build/CMakeFiles/CompilerIdCXX/</path>
    <filename>dir_acabd7cd3f895d045c9e6d2fe6420eeb.html</filename>
    <file>CMakeCXXCompilerId.cpp</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Composite/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Composite/</path>
    <filename>dir_d01a78bfec0379e4efd595347e5d4b29.html</filename>
    <file>compositecommand.cpp</file>
    <file>compositecommand.h</file>
    <file>compositecommandmanager.cpp</file>
    <file>compositecommandmanager.h</file>
    <file>createcompositecommandwidget.cpp</file>
    <file>createcompositecommandwidget.h</file>
    <file>delaycommand.cpp</file>
    <file>delaycommand.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/Composite/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/Composite/</path>
    <filename>dir_788e3da18c706e57742f6a526ebe6ed6.html</filename>
    <file>moc_compositecommandmanager.cpp</file>
    <file>moc_createcompositecommandwidget.cpp</file>
    <file>simoncompositecommandplugin_automoc.cpp</file>
    <file>ui_createcompositecommandwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Conditions/</name>
    <path>/home/anash/simon/simonsource/plugins/Conditions/</path>
    <filename>dir_8789535388fecdeadf8a7cca45f7e924.html</filename>
    <dir>plugins/Conditions/ActiveWindow/</dir>
    <dir>plugins/Conditions/OrConditionAssociation/</dir>
    <dir>plugins/Conditions/ProcessOpened/</dir>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Conditions/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Conditions/</path>
    <filename>dir_6c296d94c3af75fb0a9de97946df0891.html</filename>
    <dir>build/plugins/Conditions/ActiveWindow/</dir>
    <dir>build/plugins/Conditions/OrConditionAssociation/</dir>
    <dir>build/plugins/Conditions/ProcessOpened/</dir>
  </compound>
  <compound kind="dir">
    <name>simonlib/speechmodelcompilation/config/</name>
    <path>/home/anash/simon/simonsource/simonlib/speechmodelcompilation/config/</path>
    <filename>dir_69026239b3766c9a7388a7850b17927e.html</filename>
    <file>modelcompilationsettings.cpp</file>
    <file>modelcompilationsettings.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simontts/config/</name>
    <path>/home/anash/simon/simonsource/simonlib/simontts/config/</path>
    <filename>dir_d01fa8a79067a8ee354531f0ace17730.html</filename>
    <file>editrecording.cpp</file>
    <file>editrecording.h</file>
    <file>ttssettings.cpp</file>
    <file>ttssettings.h</file>
  </compound>
  <compound kind="dir">
    <name>ssc/config/</name>
    <path>/home/anash/simon/simonsource/ssc/config/</path>
    <filename>dir_8f08d6a95b6c3cde8e2b71a6656aaf63.html</filename>
    <file>plugin_exporter.cpp</file>
    <file>sscconfiguration.cpp</file>
    <file>sscconfiguration.h</file>
    <file>sscconfiguration_export.h</file>
  </compound>
  <compound kind="dir">
    <name>simond/config/</name>
    <path>/home/anash/simon/simonsource/simond/config/</path>
    <filename>dir_c73406ea492cf2670fc633fc1deb58fc.html</filename>
    <file>configuration.h</file>
    <file>plugin_exporter.cpp</file>
    <file>simondconfiguration_export.h</file>
    <file>simondconfigurationmain.cpp</file>
    <file>simondconfigurationmain.h</file>
    <file>simondnetworkconfiguration.cpp</file>
    <file>simondnetworkconfiguration.h</file>
    <file>simonduserconfiguration.cpp</file>
    <file>simonduserconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>ksimond/config/</name>
    <path>/home/anash/simon/simonsource/ksimond/config/</path>
    <filename>dir_23141f6c127ada796308897d3c0f0524.html</filename>
    <file>ksimondsettings.cpp</file>
    <file>ksimondsettings.h</file>
  </compound>
  <compound kind="dir">
    <name>build/ssc/config/</name>
    <path>/home/anash/simon/simonsource/build/ssc/config/</path>
    <filename>dir_0c5389b4f2961830940de6a22e2e249e.html</filename>
    <file>moc_sscconfiguration.cpp</file>
    <file>sscconfig.cpp</file>
    <file>sscconfig.h</file>
    <file>sscsettings_automoc.cpp</file>
    <file>ui_sscconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/speechmodelcompilation/config/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/speechmodelcompilation/config/</path>
    <filename>dir_125f5bf4f826579ae2a9c251d4e268a8.html</filename>
    <file>moc_modelcompilationsettings.cpp</file>
    <file>modelcompilationconfiguration.cpp</file>
    <file>modelcompilationconfiguration.h</file>
    <file>simonmodelcompilationconfiguration_automoc.cpp</file>
    <file>ui_externalprograms.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simontts/config/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simontts/config/</path>
    <filename>dir_df94c0135f57496d14b0b6178a56bd20.html</filename>
    <file>moc_editrecording.cpp</file>
    <file>moc_ttssettings.cpp</file>
    <file>simonttsconfiguration_automoc.cpp</file>
    <file>ttsconfiguration.cpp</file>
    <file>ttsconfiguration.h</file>
    <file>ui_editrecording.h</file>
    <file>ui_simonttsconfigurationdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simond/config/</name>
    <path>/home/anash/simon/simonsource/build/simond/config/</path>
    <filename>dir_b3e5512d496ffcb827d0ef8fdb866db4.html</filename>
    <file>moc_simondnetworkconfiguration.cpp</file>
    <file>moc_simonduserconfiguration.cpp</file>
    <file>simondconfiguration.cpp</file>
    <file>simondconfiguration.h</file>
    <file>simondsettings_automoc.cpp</file>
    <file>ui_simondnetworkconfiguration.h</file>
    <file>ui_simonduserconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>build/ksimond/config/</name>
    <path>/home/anash/simon/simonsource/build/ksimond/config/</path>
    <filename>dir_c31b0a52e35730b325fbdca10e6800af.html</filename>
    <file>ksimondconfiguration.cpp</file>
    <file>ksimondconfiguration.h</file>
    <file>ksimondsettings_automoc.cpp</file>
    <file>moc_ksimondsettings.cpp</file>
    <file>ui_ksimondconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simondialogengine/confui/</name>
    <path>/home/anash/simon/simonsource/simonlib/simondialogengine/confui/</path>
    <filename>dir_d22e321193419acd5c51e71cd381e9dd.html</filename>
    <file>avatarconfiguration.cpp</file>
    <file>avatarconfiguration.h</file>
    <file>boundvaluesconfiguration.cpp</file>
    <file>boundvaluesconfiguration.h</file>
    <file>createavatardialog.cpp</file>
    <file>createavatardialog.h</file>
    <file>createboundvaluedialog.cpp</file>
    <file>createboundvaluedialog.h</file>
    <file>createtemplateoptiondialog.cpp</file>
    <file>createtemplateoptiondialog.h</file>
    <file>outputconfiguration.cpp</file>
    <file>outputconfiguration.h</file>
    <file>simondialogengineconfui_export.h</file>
    <file>templateoptionsconfiguration.cpp</file>
    <file>templateoptionsconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simondialogengine/confui/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simondialogengine/confui/</path>
    <filename>dir_1fc6154e1ecb6d79d88bee9f75da9ddb.html</filename>
    <file>moc_avatarconfiguration.cpp</file>
    <file>moc_boundvaluesconfiguration.cpp</file>
    <file>moc_createavatardialog.cpp</file>
    <file>moc_createboundvaluedialog.cpp</file>
    <file>moc_templateoptionsconfiguration.cpp</file>
    <file>simondialogengineconfui_automoc.cpp</file>
    <file>ui_avatarconfiguration.h</file>
    <file>ui_boundvaluesconfiguration.h</file>
    <file>ui_createavatardlg.h</file>
    <file>ui_createboundvalue.h</file>
    <file>ui_createtemplateoptiondialog.h</file>
    <file>ui_outputconfiguration.h</file>
    <file>ui_templateoptionsconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/DBus/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/DBus/</path>
    <filename>dir_90490801862903b3aeca5fc17da5f0b0.html</filename>
    <file>createdbuscommandwidget.cpp</file>
    <file>createdbuscommandwidget.h</file>
    <file>dbuscommand.cpp</file>
    <file>dbuscommand.h</file>
    <file>dbuscommandmanager.cpp</file>
    <file>dbuscommandmanager.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/DBus/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/DBus/</path>
    <filename>dir_7407e7f35b26e86ca6d7f0eec2290514.html</filename>
    <file>moc_createdbuscommandwidget.cpp</file>
    <file>moc_dbuscommandmanager.cpp</file>
    <file>simondbuscommandplugin_automoc.cpp</file>
    <file>ui_createdbuscommandwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/DesktopGrid/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/DesktopGrid/</path>
    <filename>dir_958fbe7200a5acf3317ef0c6ba0437fc.html</filename>
    <file>desktopgridcommandmanager.cpp</file>
    <file>desktopgridcommandmanager.h</file>
    <file>desktopgridconfiguration.cpp</file>
    <file>desktopgridconfiguration.h</file>
    <file>screengrid.cpp</file>
    <file>screengrid.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/DesktopGrid/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/DesktopGrid/</path>
    <filename>dir_de23f79df41d33e7d142cacaf1a4cd5c.html</filename>
    <file>moc_desktopgridcommandmanager.cpp</file>
    <file>moc_desktopgridconfiguration.cpp</file>
    <file>moc_screengrid.cpp</file>
    <file>simondesktopgridplugin_automoc.cpp</file>
    <file>ui_desktopgridconfigurationdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/dfa/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/dfa/</path>
    <filename>dir_3d1f7d1d0099b0d02220fbc88e9be4e5.html</filename>
    <file>cpair.c</file>
    <file>dfa_lookup.c</file>
    <file>dfa_malloc.c</file>
    <file>dfa_util.c</file>
    <file>init_dfa.c</file>
    <file>mkcpair.c</file>
    <file>mkterminfo.c</file>
    <file>rddfa.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/gramtools/dfa_determinize/</name>
    <path>/home/anash/simon/simonsource/julius/gramtools/dfa_determinize/</path>
    <filename>dir_7463ca012d744ddb5495eb551e338e21.html</filename>
    <file>dfa_determinize.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/gramtools/dfa_minimize/</name>
    <path>/home/anash/simon/simonsource/julius/gramtools/dfa_minimize/</path>
    <filename>dir_f6ca760f807d5b083214efb908d67538.html</filename>
    <file>dfa_minimize.c</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Dialog/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Dialog/</path>
    <filename>dir_1d2cdc7eb14c5bd4286e83cc6e2c5652.html</filename>
    <dir>plugins/Commands/Dialog/tests/</dir>
    <file>createdialogcommandwidget.cpp</file>
    <file>createdialogcommandwidget.h</file>
    <file>createtransitiondialog.cpp</file>
    <file>createtransitiondialog.h</file>
    <file>dialogcommandmanager.cpp</file>
    <file>dialogcommandmanager.h</file>
    <file>dialogconfiguration.cpp</file>
    <file>dialogconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/Dialog/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/Dialog/</path>
    <filename>dir_00435f8733aec381cba70f892962bbe4.html</filename>
    <file>moc_createdialogcommandwidget.cpp</file>
    <file>moc_dialogcommandmanager.cpp</file>
    <file>moc_dialogconfiguration.cpp</file>
    <file>simondialogcommandplugin_automoc.cpp</file>
    <file>ui_createdialogcommandwidget.h</file>
    <file>ui_createtransitiondlg.h</file>
    <file>ui_dialogconfigurationdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Dictation/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Dictation/</path>
    <filename>dir_b9968515bec4c3eee0b24eb259fa479b.html</filename>
    <file>dictationcommandmanager.cpp</file>
    <file>dictationcommandmanager.h</file>
    <file>dictationconfiguration.cpp</file>
    <file>dictationconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/Dictation/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/Dictation/</path>
    <filename>dir_948f309b7b1f1ea529a56b63536d1beb.html</filename>
    <file>moc_dictationcommandmanager.cpp</file>
    <file>moc_dictationconfiguration.cpp</file>
    <file>simondictationcommandplugin_automoc.cpp</file>
    <file>ui_dictationconfigurationdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/eventsimulation/</name>
    <path>/home/anash/simon/simonsource/simonlib/eventsimulation/</path>
    <filename>dir_dbdbaafdf4098c0691f92e2c57876f43.html</filename>
    <file>clickmode.h</file>
    <file>coreevents.cpp</file>
    <file>coreevents.h</file>
    <file>eventhandler.cpp</file>
    <file>eventhandler.h</file>
    <file>eventsimulation_export.h</file>
    <file>pressmode.h</file>
    <file>windowsevents.cpp</file>
    <file>windowsevents.h</file>
    <file>xevents.cpp</file>
    <file>xevents.h</file>
    <file>xeventsprivate.cpp</file>
    <file>xeventsprivate.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/eventsimulation/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/eventsimulation/</path>
    <filename>dir_0feb7157459f397319cd4e158375b9d3.html</filename>
    <file>eventsimulation_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Executable/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Executable/</path>
    <filename>dir_e4f9847d2814fe5d92193febde760981.html</filename>
    <file>createexecutablecommandwidget.cpp</file>
    <file>createexecutablecommandwidget.h</file>
    <file>executablecommand.cpp</file>
    <file>executablecommand.h</file>
    <file>executablecommandmanager.cpp</file>
    <file>executablecommandmanager.h</file>
    <file>selectprogramdialog.cpp</file>
    <file>selectprogramdialog.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/Executable/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/Executable/</path>
    <filename>dir_391fe1468e3588402a4809c681653740.html</filename>
    <file>moc_createexecutablecommandwidget.cpp</file>
    <file>moc_executablecommandmanager.cpp</file>
    <file>moc_selectprogramdialog.cpp</file>
    <file>simonexecutablecommandplugin_automoc.cpp</file>
    <file>ui_createexecutablecommandwidget.h</file>
    <file>ui_selectprogramdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Filter/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Filter/</path>
    <filename>dir_d33909716b742ea5d35b1ded4fa81e50.html</filename>
    <file>filtercommandmanager.cpp</file>
    <file>filtercommandmanager.h</file>
    <file>filterconfiguration.cpp</file>
    <file>filterconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/Filter/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/Filter/</path>
    <filename>dir_f76547eabcbe7bd4d247af605ff50e62.html</filename>
    <file>moc_filtercommandmanager.cpp</file>
    <file>moc_filterconfiguration.cpp</file>
    <file>simonfilterplugin_automoc.cpp</file>
    <file>ui_filterconfigurationdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/gramtools/generate/</name>
    <path>/home/anash/simon/simonsource/julius/gramtools/generate/</path>
    <filename>dir_8d2f2d14a410583b465aeceeab435788.html</filename>
    <file>common.h</file>
    <file>gen_next.c</file>
    <file>gen_next.h</file>
    <file>generate.c</file>
    <file>rdterm.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/generate-ngram/</name>
    <path>/home/anash/simon/simonsource/julius/generate-ngram/</path>
    <filename>dir_100bae3ce47e8a9a8535944112ef7d51.html</filename>
    <file>generate-ngram.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/gramtools/</name>
    <path>/home/anash/simon/simonsource/julius/gramtools/</path>
    <filename>dir_2fb6f320999d46f41fda18e1f965290c.html</filename>
    <dir>julius/gramtools/accept_check/</dir>
    <dir>julius/gramtools/dfa_determinize/</dir>
    <dir>julius/gramtools/dfa_minimize/</dir>
    <dir>julius/gramtools/generate/</dir>
    <dir>julius/gramtools/mkdfa/</dir>
    <dir>julius/gramtools/nextword/</dir>
  </compound>
  <compound kind="dir">
    <name>simonlib/simondialogengine/graphicalview/</name>
    <path>/home/anash/simon/simonsource/simonlib/simondialogengine/graphicalview/</path>
    <filename>dir_46427a35bac6975df5e6bcb97b769f1a.html</filename>
    <file>dialogcommandbutton.cpp</file>
    <file>dialogcommandbutton.h</file>
    <file>simondialogenginevisualview_export.h</file>
    <file>visualdialogview.cpp</file>
    <file>visualdialogview.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simondialogengine/graphicalview/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simondialogengine/graphicalview/</path>
    <filename>dir_550c10ca9e57681054dda8669ea60874.html</filename>
    <file>moc_dialogcommandbutton.cpp</file>
    <file>moc_visualdialogview.cpp</file>
    <file>simondialogenginegraphicalview_automoc.cpp</file>
    <file>ui_dialogwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/hmminfo/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/hmminfo/</path>
    <filename>dir_5082cc06b37d683f296bbe2c41caf474.html</filename>
    <file>cdhmm.c</file>
    <file>cdset.c</file>
    <file>check_hmm_restriction.c</file>
    <file>check_hmmtype.c</file>
    <file>chkhmmlist.c</file>
    <file>guess_cdHMM.c</file>
    <file>hmm_lookup.c</file>
    <file>init_phmm.c</file>
    <file>put_htkdata_info.c</file>
    <file>rdhmmdef.c</file>
    <file>rdhmmdef_data.c</file>
    <file>rdhmmdef_dens.c</file>
    <file>rdhmmdef_mpdf.c</file>
    <file>rdhmmdef_options.c</file>
    <file>rdhmmdef_regtree.c</file>
    <file>rdhmmdef_state.c</file>
    <file>rdhmmdef_streamweight.c</file>
    <file>rdhmmdef_tiedmix.c</file>
    <file>rdhmmdef_trans.c</file>
    <file>rdhmmdef_var.c</file>
    <file>rdhmmlist.c</file>
    <file>read_binhmm.c</file>
    <file>read_binhmmlist.c</file>
    <file>write_binhmm.c</file>
    <file>write_binhmmlist.c</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonmodelmanagementui/ImportDict/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonmodelmanagementui/ImportDict/</path>
    <filename>dir_8e1e4d5fdaf50a238ed8daeb54baab2a.html</filename>
    <file>bompdict.cpp</file>
    <file>bompdict.h</file>
    <file>dict.cpp</file>
    <file>dict.h</file>
    <file>importdict.cpp</file>
    <file>importdict.h</file>
    <file>importdictbompdownloadpage.cpp</file>
    <file>importdictbompdownloadpage.h</file>
    <file>importdictbomppage.cpp</file>
    <file>importdictbomppage.h</file>
    <file>importdictintropage.cpp</file>
    <file>importdictintropage.h</file>
    <file>importdictjuliuspage.cpp</file>
    <file>importdictjuliuspage.h</file>
    <file>importdictplspage.cpp</file>
    <file>importdictplspage.h</file>
    <file>importdictselectsourcepage.cpp</file>
    <file>importdictselectsourcepage.h</file>
    <file>importdictsphinxpage.cpp</file>
    <file>importdictsphinxpage.h</file>
    <file>importdictview.cpp</file>
    <file>importdictview.h</file>
    <file>importdictworkingpage.cpp</file>
    <file>importdictworkingpage.h</file>
    <file>importlexiconpage.cpp</file>
    <file>importlexiconpage.h</file>
    <file>juliusvocabulary.cpp</file>
    <file>juliusvocabulary.h</file>
    <file>lexicondict.cpp</file>
    <file>lexicondict.h</file>
    <file>plsdict.cpp</file>
    <file>plsdict.h</file>
    <file>sphinxdict.cpp</file>
    <file>sphinxdict.h</file>
    <file>wiktionarydict.cpp</file>
    <file>wiktionarydict.h</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonmodelmanagementui/ImportGrammar/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonmodelmanagementui/ImportGrammar/</path>
    <filename>dir_028494cee2f68ca679ab1efff4332bec.html</filename>
    <file>importgrammar.cpp</file>
    <file>importgrammar.h</file>
    <file>importgrammarselectinputpage.cpp</file>
    <file>importgrammarselectinputpage.h</file>
    <file>importgrammarwizard.cpp</file>
    <file>importgrammarwizard.h</file>
    <file>importgrammarworkingpage.cpp</file>
    <file>importgrammarworkingpage.h</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonmodelmanagementui/ImportTrainingData/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonmodelmanagementui/ImportTrainingData/</path>
    <filename>dir_fe8c21ebcf2b2693ef356626af240027.html</filename>
    <file>importtrainingdata.cpp</file>
    <file>importtrainingdata.h</file>
    <file>importtrainingdirectory.cpp</file>
    <file>importtrainingdirectory.h</file>
    <file>importtrainingdirectoryintropage.cpp</file>
    <file>importtrainingdirectoryintropage.h</file>
    <file>importtrainingdirectoryworkingpage.cpp</file>
    <file>importtrainingdirectoryworkingpage.h</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonmodelmanagementui/ImportTrainingTexts/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonmodelmanagementui/ImportTrainingTexts/</path>
    <filename>dir_9daab631f67cf3c8e0645480e2180b76.html</filename>
    <file>importtrainingtextaddpage.cpp</file>
    <file>importtrainingtextaddpage.h</file>
    <file>importtrainingtextlocalpage.cpp</file>
    <file>importtrainingtextlocalpage.h</file>
    <file>importtrainingtexts.cpp</file>
    <file>importtrainingtexts.h</file>
    <file>importtrainingtextselectsourcepage.cpp</file>
    <file>importtrainingtextselectsourcepage.h</file>
    <file>importtrainingtextworkingpage.cpp</file>
    <file>importtrainingtextworkingpage.h</file>
    <file>xmltrainingtextlist.cpp</file>
    <file>xmltrainingtextlist.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/libjulius/include/</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/</path>
    <filename>dir_21d2c5d21486f61ac441ba1776a70e9b.html</filename>
    <dir>julius/libjulius/include/julius/</dir>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/include/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/</path>
    <filename>dir_58aba74566af7abaebf13783684922a4.html</filename>
    <dir>julius/libsent/include/sent/</dir>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/InputNumber/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/InputNumber/</path>
    <filename>dir_271d40952058f20b872a178716a747af.html</filename>
    <file>inputnumbercommandmanager.cpp</file>
    <file>inputnumbercommandmanager.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/InputNumber/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/InputNumber/</path>
    <filename>dir_a51d53a014bccfa2ae920fc0c0862407.html</filename>
    <file>moc_inputnumbercommandmanager.cpp</file>
    <file>simoninputnumbercommandplugin_automoc.cpp</file>
    <file>ui_inputnumberwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/jcontrol/</name>
    <path>/home/anash/simon/simonsource/julius/jcontrol/</path>
    <filename>dir_735797c59f0b65c258becff309a2d86a.html</filename>
    <file>japi.h</file>
    <file>japi_grammar.c</file>
    <file>japi_misc.c</file>
    <file>japi_process.c</file>
    <file>jcontrol.c</file>
    <file>server.c</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Json/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Json/</path>
    <filename>dir_7848bf40bef7e89d5fdd26eb74783d3d.html</filename>
    <file>createjsoncommandwidget.cpp</file>
    <file>createjsoncommandwidget.h</file>
    <file>jsoncommand.cpp</file>
    <file>jsoncommand.h</file>
    <file>jsoncommandmanager.cpp</file>
    <file>jsoncommandmanager.h</file>
    <file>jsonconfiguration.cpp</file>
    <file>jsonconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/Json/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/Json/</path>
    <filename>dir_a12c40508af3cc98ca4d4fe9ff28cfcf.html</filename>
    <file>moc_createjsoncommandwidget.cpp</file>
    <file>moc_jsoncommandmanager.cpp</file>
    <file>moc_jsonconfiguration.cpp</file>
    <file>simonjsoncommandplugin_automoc.cpp</file>
    <file>ui_createjsoncommandwidget.h</file>
    <file>ui_jsonconfigurationdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/libjulius/include/julius/</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/include/julius/</path>
    <filename>dir_37c93f77b965b7e4715c4b9c41671ec1.html</filename>
    <file>acconfig.h</file>
    <file>beam.h</file>
    <file>callback.h</file>
    <file>config.h</file>
    <file>config_linux.h</file>
    <file>config_win32.h</file>
    <file>define.h</file>
    <file>extern.h</file>
    <file>global.h</file>
    <file>graph.h</file>
    <file>jconf.h</file>
    <file>jfunc.h</file>
    <file>julius.h</file>
    <file>juliuslib.h</file>
    <file>misc.h</file>
    <file>multi-gram.h</file>
    <file>plugin.h</file>
    <file>private_globals.h</file>
    <file>recog.h</file>
    <file>search.h</file>
    <file>trellis.h</file>
    <file>useropt.h</file>
    <file>wchmm.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/julius/</name>
    <path>/home/anash/simon/simonsource/julius/julius/</path>
    <filename>dir_d81865408502cf8755970772bb2d5a8e.html</filename>
    <dir>julius/julius/libjcode/</dir>
    <file>app.h</file>
    <file>charconv.c</file>
    <file>charconv.h</file>
    <file>charconv_iconv.c</file>
    <file>charconv_libjcode.c</file>
    <file>charconv_win32.c</file>
    <file>config.h</file>
    <file>config_linux.h</file>
    <file>config_win32.h</file>
    <file>main.c</file>
    <file>module.c</file>
    <file>output_file.c</file>
    <file>output_module.c</file>
    <file>output_stdout.c</file>
    <file>recogloop.c</file>
    <file>record.c</file>
    <file>visual.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/</name>
    <path>/home/anash/simon/simonsource/julius/</path>
    <filename>dir_9882a1a0a415413df22104bbf1ace5cb.html</filename>
    <dir>julius/adinrec/</dir>
    <dir>julius/adintool/</dir>
    <dir>julius/generate-ngram/</dir>
    <dir>julius/gramtools/</dir>
    <dir>julius/jcontrol/</dir>
    <dir>julius/julius/</dir>
    <dir>julius/julius-simple/</dir>
    <dir>julius/libjulius/</dir>
    <dir>julius/libsent/</dir>
    <dir>julius/mkbingram/</dir>
    <dir>julius/mkbinhmm/</dir>
    <dir>julius/mkss/</dir>
    <dir>julius/plugin/</dir>
  </compound>
  <compound kind="dir">
    <name>accomp/julius/</name>
    <path>/home/anash/simon/simonsource/accomp/julius/</path>
    <filename>dir_0637f61e7bc35235291905149138d279.html</filename>
    <file>julius-4.1_simon.patch</file>
  </compound>
  <compound kind="dir">
    <name>julius/julius-simple/</name>
    <path>/home/anash/simon/simonsource/julius/julius-simple/</path>
    <filename>dir_2f6ecc8fa90e14554190b6fda0f345a9.html</filename>
    <file>julius-simple.c</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Keyboard/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Keyboard/</path>
    <filename>dir_44e46aba37f01d9498e94571cba488ea.html</filename>
    <file>flowlayout.cpp</file>
    <file>flowlayout.h</file>
    <file>keyboardbutton.cpp</file>
    <file>keyboardbutton.h</file>
    <file>keyboardcommandmanager.cpp</file>
    <file>keyboardcommandmanager.h</file>
    <file>keyboardconfiguration.cpp</file>
    <file>keyboardconfiguration.h</file>
    <file>keyboardmodifybuttondialog.cpp</file>
    <file>keyboardmodifybuttondialog.h</file>
    <file>keyboardset.cpp</file>
    <file>keyboardset.h</file>
    <file>keyboardsetcontainer.cpp</file>
    <file>keyboardsetcontainer.h</file>
    <file>keyboardtab.cpp</file>
    <file>keyboardtab.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/Keyboard/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/Keyboard/</path>
    <filename>dir_b53bb5deb366517127d1e8cde05c18c4.html</filename>
    <file>moc_keyboardbutton.cpp</file>
    <file>moc_keyboardcommandmanager.cpp</file>
    <file>moc_keyboardconfiguration.cpp</file>
    <file>moc_keyboardmodifybuttondialog.cpp</file>
    <file>simonkeyboardcommandplugin_automoc.cpp</file>
    <file>ui_keyboardconfigurationdlg.h</file>
    <file>ui_keyboardwidget.h</file>
    <file>ui_modifybuttondlg.h</file>
  </compound>
  <compound kind="dir">
    <name>build/ksimond/</name>
    <path>/home/anash/simon/simonsource/build/ksimond/</path>
    <filename>dir_cc71e16426530a3fedaffb02bcc6deef.html</filename>
    <dir>build/ksimond/config/</dir>
    <dir>build/ksimond/src/</dir>
  </compound>
  <compound kind="dir">
    <name>ksimond/</name>
    <path>/home/anash/simon/simonsource/ksimond/</path>
    <filename>dir_5034ef7d425dae32a3c02594994bfb55.html</filename>
    <dir>ksimond/config/</dir>
    <dir>ksimond/src/</dir>
  </compound>
  <compound kind="dir">
    <name>julius/julius/libjcode/</name>
    <path>/home/anash/simon/simonsource/julius/julius/libjcode/</path>
    <filename>dir_1f86c5e8b31d8a6484866f50f4df972e.html</filename>
    <file>detect.c</file>
    <file>jlib.h</file>
    <file>jlibconfig.h</file>
    <file>libjcode.c</file>
    <file>sample.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/libjulius/</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/</path>
    <filename>dir_c1c5676ff4891395d30acab11c480de6.html</filename>
    <dir>julius/libjulius/include/</dir>
    <dir>julius/libjulius/src/</dir>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/</path>
    <filename>dir_114970cc23b3eb7aad68c3ba678fcc06.html</filename>
    <dir>julius/libsent/include/</dir>
    <dir>julius/libsent/src/</dir>
    <file>acconfig.h</file>
  </compound>
  <compound kind="dir">
    <name>benefit/simonskype/src/libskype/</name>
    <path>/home/anash/simon/simonsource/benefit/simonskype/src/libskype/</path>
    <filename>dir_dac621d9efa79dabab69b6b0203b3fa1.html</filename>
    <dir>benefit/simonskype/src/libskype/skypedbus/</dir>
    <file>skype.cpp</file>
    <file>skype.h</file>
    <file>skypewindow.cpp</file>
    <file>skypewindow.h</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/List/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/List/</path>
    <filename>dir_1ea27036622476f346222f229855fd76.html</filename>
    <file>createlistcommandwidget.cpp</file>
    <file>createlistcommandwidget.h</file>
    <file>listcommandmanager.cpp</file>
    <file>listcommandmanager.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/List/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/List/</path>
    <filename>dir_056196de68ee625574c81ec3eea54738.html</filename>
    <file>moc_createlistcommandwidget.cpp</file>
    <file>moc_listcommandmanager.cpp</file>
    <file>simonlistcommandplugin_automoc.cpp</file>
    <file>ui_createlistcommandwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonmodelmanagementui/MergeTerminals/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonmodelmanagementui/MergeTerminals/</path>
    <filename>dir_cdbb9526966bceea2d9e135cddc8b25d.html</filename>
    <file>mergeterminals.cpp</file>
    <file>mergeterminals.h</file>
    <file>mergeterminalsselectterminalspage.cpp</file>
    <file>mergeterminalsselectterminalspage.h</file>
    <file>mergeterminalswizard.cpp</file>
    <file>mergeterminalswizard.h</file>
    <file>mergeterminalsworkingpage.cpp</file>
    <file>mergeterminalsworkingpage.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/mkbingram/</name>
    <path>/home/anash/simon/simonsource/julius/mkbingram/</path>
    <filename>dir_ff89c3c877b291309033474dc7daf46e.html</filename>
    <file>mkbingram.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/mkbinhmm/</name>
    <path>/home/anash/simon/simonsource/julius/mkbinhmm/</path>
    <filename>dir_7a5c79b6f3ff00beff5d554c4eca2ea3.html</filename>
    <file>mkbinhmm.c</file>
    <file>mkbinhmmlist.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/gramtools/mkdfa/</name>
    <path>/home/anash/simon/simonsource/julius/gramtools/mkdfa/</path>
    <filename>dir_fb4f4d6aa38bba21a9029badcc72f3f3.html</filename>
    <dir>julius/gramtools/mkdfa/mkfa-1.44-flex/</dir>
  </compound>
  <compound kind="dir">
    <name>julius/gramtools/mkdfa/mkfa-1.44-flex/</name>
    <path>/home/anash/simon/simonsource/julius/gramtools/mkdfa/mkfa-1.44-flex/</path>
    <filename>dir_ac3ed2683344f9a118e3a72c8d1f5c82.html</filename>
    <file>dfa.c</file>
    <file>dfa.h</file>
    <file>gram.tab.c</file>
    <file>gram.tab.h</file>
    <file>lex.yy.c</file>
    <file>main.c</file>
    <file>mkfa.h</file>
    <file>nfa.c</file>
    <file>nfa.h</file>
    <file>triplet.c</file>
    <file>triplet.h</file>
    <file>voca.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/mkss/</name>
    <path>/home/anash/simon/simonsource/julius/mkss/</path>
    <filename>dir_5199fa22ab097d44c7ca8f53d16eebf0.html</filename>
    <file>mkss.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/net/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/net/</path>
    <filename>dir_2e064a59df7a8a67b5694ee401fcfb5e.html</filename>
    <file>rdwt.c</file>
    <file>server-client.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/gramtools/nextword/</name>
    <path>/home/anash/simon/simonsource/julius/gramtools/nextword/</path>
    <filename>dir_d0e15a5e4fab0e5755ab78dbc0d7e2d1.html</filename>
    <file>common.h</file>
    <file>get_next.c</file>
    <file>nextword.c</file>
    <file>nextword.h</file>
    <file>rdterm.c</file>
    <file>readline.c</file>
    <file>wtoken.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/ngram/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/ngram/</path>
    <filename>dir_2702d67b6685b12d1d531b2ea6970b56.html</filename>
    <file>init_ngram.c</file>
    <file>ngram_access.c</file>
    <file>ngram_compact_context.c</file>
    <file>ngram_lookup.c</file>
    <file>ngram_malloc.c</file>
    <file>ngram_read_arpa.c</file>
    <file>ngram_read_bin.c</file>
    <file>ngram_util.c</file>
    <file>ngram_write_bin.c</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Conditions/OrConditionAssociation/</name>
    <path>/home/anash/simon/simonsource/plugins/Conditions/OrConditionAssociation/</path>
    <filename>dir_6457eba39fe84d90e4b6bdd499199ef7.html</filename>
    <file>createorconditionassociationwidget.cpp</file>
    <file>createorconditionassociationwidget.h</file>
    <file>newassociationcondition.cpp</file>
    <file>newassociationcondition.h</file>
    <file>orconditionassociation.cpp</file>
    <file>orconditionassociation.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Conditions/OrConditionAssociation/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Conditions/OrConditionAssociation/</path>
    <filename>dir_324ac5cde2e6afa431390aae675db2f7.html</filename>
    <file>moc_createorconditionassociationwidget.cpp</file>
    <file>moc_newassociationcondition.cpp</file>
    <file>moc_orconditionassociation.cpp</file>
    <file>simonorconditionassociationplugin_automoc.cpp</file>
    <file>ui_createorconditionassociationwidget.h</file>
    <file>ui_newassociationcondition.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/adin/pa/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/adin/pa/</path>
    <filename>dir_2770dd97593f61d70908b0d0da36243f.html</filename>
    <file>dsound_wrapper.c</file>
    <file>dsound_wrapper.h</file>
    <file>pa_convert.c</file>
    <file>pa_dsound.c</file>
    <file>pa_host.h</file>
    <file>pa_lib.c</file>
    <file>pa_trace.c</file>
    <file>pa_trace.h</file>
    <file>pa_unix.c</file>
    <file>pa_unix.h</file>
    <file>pa_unix_oss.c</file>
    <file>pa_unix_solaris.c</file>
    <file>pa_win_wmme.c</file>
    <file>pablio.c</file>
    <file>pablio.h</file>
    <file>portaudio.h</file>
    <file>ringbuffer.c</file>
    <file>ringbuffer.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/phmm/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/phmm/</path>
    <filename>dir_9b1995815b0014b608c75a97cebba367.html</filename>
    <file>addlog.c</file>
    <file>calc_mix.c</file>
    <file>calc_tied_mix.c</file>
    <file>gms.c</file>
    <file>gms_gprune.c</file>
    <file>gprune_beam.c</file>
    <file>gprune_common.c</file>
    <file>gprune_heu.c</file>
    <file>gprune_none.c</file>
    <file>gprune_safe.c</file>
    <file>mkwhmm.c</file>
    <file>outprob.c</file>
    <file>outprob_init.c</file>
    <file>vsegment.c</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Place/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Place/</path>
    <filename>dir_9bb68599e4ab318fc53010cdb6b0ad3a.html</filename>
    <file>createplacecommandwidget.cpp</file>
    <file>createplacecommandwidget.h</file>
    <file>placecommand.cpp</file>
    <file>placecommand.h</file>
    <file>placecommandmanager.cpp</file>
    <file>placecommandmanager.h</file>
    <file>selectplacedialog.cpp</file>
    <file>selectplacedialog.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/Place/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/Place/</path>
    <filename>dir_e5f54322871bb2544478b5ba213e09d9.html</filename>
    <file>moc_createplacecommandwidget.cpp</file>
    <file>moc_placecommandmanager.cpp</file>
    <file>moc_selectplacedialog.cpp</file>
    <file>simonplacecommandplugin_automoc.cpp</file>
    <file>ui_createplacecommandwidget.h</file>
    <file>ui_selectplacedlg.h</file>
  </compound>
  <compound kind="dir">
    <name>julius/plugin/</name>
    <path>/home/anash/simon/simonsource/julius/plugin/</path>
    <filename>dir_9a0936e7184149c1f115c1a500e6ff46.html</filename>
    <file>adin_oss.c</file>
    <file>audio_postprocess.c</file>
    <file>calcmix.c</file>
    <file>feature_postprocess.c</file>
    <file>fvin.c</file>
    <file>generic_callback.c</file>
    <file>plugin_defs.h</file>
    <file>result.c</file>
  </compound>
  <compound kind="dir">
    <name>plugins/</name>
    <path>/home/anash/simon/simonsource/plugins/</path>
    <filename>dir_a8699bd1f780aca4025a40798184e79d.html</filename>
    <dir>plugins/Commands/</dir>
    <dir>plugins/Conditions/</dir>
  </compound>
  <compound kind="dir">
    <name>build/plugins/</name>
    <path>/home/anash/simon/simonsource/build/plugins/</path>
    <filename>dir_5427170296d06afd4a80047a5963f67e.html</filename>
    <dir>build/plugins/Commands/</dir>
    <dir>build/plugins/Conditions/</dir>
  </compound>
  <compound kind="dir">
    <name>plugins/Conditions/ProcessOpened/</name>
    <path>/home/anash/simon/simonsource/plugins/Conditions/ProcessOpened/</path>
    <filename>dir_d0b5ed1e87414ea0461aa16f6c2f9779.html</filename>
    <file>createprocessopenedconditionwidget.cpp</file>
    <file>createprocessopenedconditionwidget.h</file>
    <file>processopenedcondition.cpp</file>
    <file>processopenedcondition.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Conditions/ProcessOpened/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Conditions/ProcessOpened/</path>
    <filename>dir_990789c36f0cd4ea4241fef2708924ec.html</filename>
    <file>moc_createprocessopenedconditionwidget.cpp</file>
    <file>moc_processopenedcondition.cpp</file>
    <file>simonprocessopenedconditionplugin_automoc.cpp</file>
    <file>ui_createprocessopenedconditionwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/PronunciationTraining/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/PronunciationTraining/</path>
    <filename>dir_53c008a797675fc95abdc249c8f0ea8f.html</filename>
    <file>pronunciationtraining.cpp</file>
    <file>pronunciationtraining.h</file>
    <file>pronunciationtrainingcommandmanager.cpp</file>
    <file>pronunciationtrainingcommandmanager.h</file>
    <file>pronunciationtrainingconfiguration.cpp</file>
    <file>pronunciationtrainingconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/PronunciationTraining/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/PronunciationTraining/</path>
    <filename>dir_4f70debd236f804274c5297aa27ae719.html</filename>
    <file>moc_pronunciationtraining.cpp</file>
    <file>moc_pronunciationtrainingcommandmanager.cpp</file>
    <file>moc_pronunciationtrainingconfiguration.cpp</file>
    <file>simonpronunciationtrainingplugin_automoc.cpp</file>
    <file>ui_pronunciationtrainingconfigurationdlg.h</file>
    <file>ui_pronunciationtrainingdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Recognizer/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Recognizer/</path>
    <filename>dir_97c27e0fa82391be6737fdfb9b1f4468.html</filename>
    <file>recognizercommandmanager.cpp</file>
    <file>recognizercommandmanager.h</file>
    <file>recognizerconfiguration.cpp</file>
    <file>recognizerconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/Recognizer/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/Recognizer/</path>
    <filename>dir_ec23a3f3569ed77796fe77558cebbdf6.html</filename>
    <file>moc_recognizercommandmanager.cpp</file>
    <file>moc_recognizerconfiguration.cpp</file>
    <file>simonrecognizercommandplugin_automoc.cpp</file>
    <file>ui_recognizerconfigurationdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonmodelmanagementui/RenameTerminal/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonmodelmanagementui/RenameTerminal/</path>
    <filename>dir_3c26127f6d745ac805f6ed23762d18cf.html</filename>
    <file>renameterminal.cpp</file>
    <file>renameterminal.h</file>
    <file>renameterminalselectparameterspage.cpp</file>
    <file>renameterminalselectparameterspage.h</file>
    <file>renameterminalwizard.cpp</file>
    <file>renameterminalwizard.h</file>
    <file>renameterminalworkingpage.cpp</file>
    <file>renameterminalworkingpage.h</file>
  </compound>
  <compound kind="dir">
    <name>build/sam/</name>
    <path>/home/anash/simon/simonsource/build/sam/</path>
    <filename>dir_ae886d5d1d6ea3e4ecc9396ef62cac59.html</filename>
    <dir>build/sam/src/</dir>
  </compound>
  <compound kind="dir">
    <name>sam/</name>
    <path>/home/anash/simon/simonsource/sam/</path>
    <filename>dir_acc56d8337cb824bee79ab097bea6519.html</filename>
    <dir>sam/src/</dir>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/include/sent/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/include/sent/</path>
    <filename>dir_26580e851946dc9c1f98ff67fd62497a.html</filename>
    <file>adin.h</file>
    <file>config.h</file>
    <file>config_linux.h</file>
    <file>config_win32.h</file>
    <file>dfa.h</file>
    <file>hmm.h</file>
    <file>hmm_calc.h</file>
    <file>htk_defs.h</file>
    <file>htk_hmm.h</file>
    <file>htk_param.h</file>
    <file>machines.h</file>
    <file>mfcc.h</file>
    <file>ngram2.h</file>
    <file>ptree.h</file>
    <file>speech.h</file>
    <file>stddefs.h</file>
    <file>tcpip.h</file>
    <file>util.h</file>
    <file>vocabulary.h</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Shortcut/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Shortcut/</path>
    <filename>dir_9795cc7226af0e6614e355edf83f710c.html</filename>
    <file>createshortcutcommandwidget.cpp</file>
    <file>createshortcutcommandwidget.h</file>
    <file>shortcutcommand.cpp</file>
    <file>shortcutcommand.h</file>
    <file>shortcutcommandmanager.cpp</file>
    <file>shortcutcommandmanager.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/Shortcut/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/Shortcut/</path>
    <filename>dir_9e919c27bcdb60a27768bf72c1786176.html</filename>
    <file>moc_createshortcutcommandwidget.cpp</file>
    <file>moc_shortcutcommandmanager.cpp</file>
    <file>simonshortcutcommandplugin_automoc.cpp</file>
    <file>ui_createshortcutcommandwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simon/</name>
    <path>/home/anash/simon/simonsource/build/simon/</path>
    <filename>dir_889482048d09d8fd36359a75bab70e6f.html</filename>
    <dir>build/simon/src/</dir>
  </compound>
  <compound kind="dir">
    <name>simon/</name>
    <path>/home/anash/simon/simonsource/simon/</path>
    <filename>dir_1ee40bb7f3fed0a3c922d2f94b01b7e4.html</filename>
    <dir>simon/src/</dir>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonactions/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonactions/</path>
    <filename>dir_15efd4ed1dd0f42c809b4d1522708634.html</filename>
    <file>actionlib_export.h</file>
    <file>actionmanager.cpp</file>
    <file>actionmanager.h</file>
    <file>commandlistwidget.cpp</file>
    <file>commandlistwidget.h</file>
    <file>commandmodel.cpp</file>
    <file>commandmodel.h</file>
    <file>commandsettings.cpp</file>
    <file>commandsettings.h</file>
    <file>commandsettingsinternal.cpp</file>
    <file>commandsettingsinternal.h</file>
    <file>commandtablemodel.cpp</file>
    <file>commandtablemodel.h</file>
    <file>greedyreceiver.cpp</file>
    <file>greedyreceiver.h</file>
    <file>listcommand.cpp</file>
    <file>listcommand.h</file>
    <file>listconfiguration.cpp</file>
    <file>listconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonactions/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonactions/</path>
    <filename>dir_569fd02d991825abb6b49c8e92cf0ddd.html</filename>
    <file>actionmanageradaptor.cpp</file>
    <file>actionmanageradaptor.h</file>
    <file>actionmanageradaptor.moc</file>
    <file>moc_actionmanager.cpp</file>
    <file>moc_commandlistwidget.cpp</file>
    <file>moc_commandmodel.cpp</file>
    <file>moc_commandsettings.cpp</file>
    <file>moc_commandsettingsinternal.cpp</file>
    <file>moc_commandtablemodel.cpp</file>
    <file>moc_listcommand.cpp</file>
    <file>moc_listconfiguration.cpp</file>
    <file>simonactions_automoc.cpp</file>
    <file>simonactionskcm_automoc.cpp</file>
    <file>ui_commandsettingsdlg.h</file>
    <file>ui_listconfigurationdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonactionsui/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonactionsui/</path>
    <filename>dir_c6d6b380d20901e08ccbed92ba359e18.html</filename>
    <file>addactiondialog.cpp</file>
    <file>addactiondialog.h</file>
    <file>commandpreviewwidget.cpp</file>
    <file>commandpreviewwidget.h</file>
    <file>manageactionsautorunwidget.cpp</file>
    <file>manageactionsautorunwidget.h</file>
    <file>manageactionsdialog.cpp</file>
    <file>manageactionsdialog.h</file>
    <file>newcommand.cpp</file>
    <file>newcommand.h</file>
    <file>runcommandview.cpp</file>
    <file>runcommandview.h</file>
    <file>runcommandviewprivate.cpp</file>
    <file>runcommandviewprivate.h</file>
    <file>simonactionsui_export.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simon/src/simonactionsui/</name>
    <path>/home/anash/simon/simonsource/build/simon/src/simonactionsui/</path>
    <filename>dir_d24ef799231b51018a0db2b37d434428.html</filename>
    <file>moc_addactiondialog.cpp</file>
    <file>moc_commandpreviewwidget.cpp</file>
    <file>moc_manageactionsdialog.cpp</file>
    <file>moc_newcommand.cpp</file>
    <file>moc_runcommandview.cpp</file>
    <file>moc_runcommandviewprivate.cpp</file>
    <file>simonactionsui_automoc.cpp</file>
    <file>ui_addactiondlg.h</file>
    <file>ui_commandpreviewwidget.h</file>
    <file>ui_manageactionsautorunwidget.h</file>
    <file>ui_manageactionsdlg.h</file>
    <file>ui_modifycommands.h</file>
    <file>ui_rundialog.h</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonappcore/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonappcore/</path>
    <filename>dir_1f3330b6e57e6cec411f81ba69070458.html</filename>
    <file>generalsettings.cpp</file>
    <file>generalsettings.h</file>
    <file>simonappcore_export.h</file>
    <file>simoncontrol.cpp</file>
    <file>simoncontrol.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simon/src/simonappcore/</name>
    <path>/home/anash/simon/simonsource/build/simon/src/simonappcore/</path>
    <filename>dir_f9a2ba369568fe4af4349fca3e053b5e.html</filename>
    <file>coreconfiguration.cpp</file>
    <file>coreconfiguration.h</file>
    <file>moc_generalsettings.cpp</file>
    <file>moc_simoncontrol.cpp</file>
    <file>simonappcore_automoc.cpp</file>
    <file>simonappcorekcm_automoc.cpp</file>
    <file>ui_generalsettingsdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simoncontextadapter/</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextadapter/</path>
    <filename>dir_355d46e8e5f557ca8d28b136f95e02b3.html</filename>
    <file>contextadapter.cpp</file>
    <file>contextadapter.h</file>
    <file>simoncontextadapter_export.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simoncontextadapter/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simoncontextadapter/</path>
    <filename>dir_fa3cb551a715ce1d58757ffc6204d0b5.html</filename>
    <file>moc_contextadapter.cpp</file>
    <file>simoncontextadapter_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simoncontextdetection/</name>
    <path>/home/anash/simon/simonsource/simonlib/simoncontextdetection/</path>
    <filename>dir_4462858bec17b9c9bf25e4162b02e6c6.html</filename>
    <file>compoundcondition.cpp</file>
    <file>compoundcondition.h</file>
    <file>compoundconditionmodel.cpp</file>
    <file>compoundconditionmodel.h</file>
    <file>condition.cpp</file>
    <file>condition.h</file>
    <file>conditionassociation.cpp</file>
    <file>conditionassociation.h</file>
    <file>conditionconfiguration.cpp</file>
    <file>conditionconfiguration.h</file>
    <file>contextmanager.cpp</file>
    <file>contextmanager.h</file>
    <file>createconditionwidget.cpp</file>
    <file>createconditionwidget.h</file>
    <file>linuxprocessinfogatherer.cpp</file>
    <file>linuxprocessinfogatherer.h</file>
    <file>linuxprocessinfogathererhelper.cpp</file>
    <file>linuxprocessinfogathererhelper.h</file>
    <file>processinfo.cpp</file>
    <file>processinfo.h</file>
    <file>processinfogatherer.cpp</file>
    <file>processinfogatherer.h</file>
    <file>simoncontextdetection_export.h</file>
    <file>windowsprocessinfogatherer.cpp</file>
    <file>windowsprocessinfogatherer.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simoncontextdetection/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simoncontextdetection/</path>
    <filename>dir_93c2b73ecca7d910a2d6b3eb6ec61f71.html</filename>
    <file>moc_compoundcondition.cpp</file>
    <file>moc_condition.cpp</file>
    <file>moc_conditionassociation.cpp</file>
    <file>moc_contextmanager.cpp</file>
    <file>moc_createconditionwidget.cpp</file>
    <file>moc_linuxprocessinfogatherer.cpp</file>
    <file>moc_linuxprocessinfogathererhelper.cpp</file>
    <file>moc_processinfo.cpp</file>
    <file>moc_processinfogatherer.cpp</file>
    <file>moc_windowsprocessinfogatherer.cpp</file>
    <file>simoncontextdetection_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simoncontextui/</name>
    <path>/home/anash/simon/simonsource/simon/src/simoncontextui/</path>
    <filename>dir_b0ac4a5625192360cbf9e04837cad234.html</filename>
    <file>contextview.cpp</file>
    <file>contextview.h</file>
    <file>contextviewprivate.cpp</file>
    <file>contextviewprivate.h</file>
    <file>newcondition.cpp</file>
    <file>newcondition.h</file>
    <file>simoncontextui_export.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simon/src/simoncontextui/</name>
    <path>/home/anash/simon/simonsource/build/simon/src/simoncontextui/</path>
    <filename>dir_7d85c58f4066aff7fe71e6bd400393ae.html</filename>
    <file>moc_contextview.cpp</file>
    <file>moc_contextviewprivate.cpp</file>
    <file>moc_newchildscenario.cpp</file>
    <file>moc_newcondition.cpp</file>
    <file>simoncontextui_automoc.cpp</file>
    <file>ui_contextdialog.h</file>
    <file>ui_modifycondition.h</file>
    <file>ui_newchildscenario.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simond/</name>
    <path>/home/anash/simon/simonsource/build/simond/</path>
    <filename>dir_5a75f4126e17efc52ebfeecebe951358.html</filename>
    <dir>build/simond/config/</dir>
    <dir>build/simond/src/</dir>
  </compound>
  <compound kind="dir">
    <name>simond/</name>
    <path>/home/anash/simon/simonsource/simond/</path>
    <filename>dir_e2cb30340be9e0d66eea6a04e9ae4aec.html</filename>
    <dir>simond/config/</dir>
    <dir>simond/src/</dir>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonddatabaseaccess/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonddatabaseaccess/</path>
    <filename>dir_a386b8cb4b230cde023ac2e7dcb2a033.html</filename>
    <file>databaseaccess.cpp</file>
    <file>databaseaccess.h</file>
    <file>simonddatabaseaccess_export.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonddatabaseaccess/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonddatabaseaccess/</path>
    <filename>dir_0d04668a5b274d7f6fd082fb1e1c459a.html</filename>
    <file>moc_databaseaccess.cpp</file>
    <file>simonddatabaseaccess_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simondialogengine/</name>
    <path>/home/anash/simon/simonsource/simonlib/simondialogengine/</path>
    <filename>dir_7006ff4b57ef33fb5ab7c2ea05b6660a.html</filename>
    <dir>simonlib/simondialogengine/confui/</dir>
    <dir>simonlib/simondialogengine/graphicalview/</dir>
    <dir>simonlib/simondialogengine/tests/</dir>
    <dir>simonlib/simondialogengine/ttsview/</dir>
    <file>argumentboundvalue.cpp</file>
    <file>argumentboundvalue.h</file>
    <file>avatar.cpp</file>
    <file>avatar.h</file>
    <file>avatarmodel.cpp</file>
    <file>avatarmodel.h</file>
    <file>boundvalue.cpp</file>
    <file>boundvalue.h</file>
    <file>dialogboundvalues.cpp</file>
    <file>dialogboundvalues.h</file>
    <file>dialogcommand.cpp</file>
    <file>dialogcommand.h</file>
    <file>dialogmanager.cpp</file>
    <file>dialogmanager.h</file>
    <file>dialogstate.cpp</file>
    <file>dialogstate.h</file>
    <file>dialogtemplateoptions.cpp</file>
    <file>dialogtemplateoptions.h</file>
    <file>dialogtext.cpp</file>
    <file>dialogtext.h</file>
    <file>dialogtextparser.cpp</file>
    <file>dialogtextparser.h</file>
    <file>dialogview.cpp</file>
    <file>dialogview.h</file>
    <file>plasmaboundvalue.cpp</file>
    <file>plasmaboundvalue.h</file>
    <file>scriptboundvalue.cpp</file>
    <file>scriptboundvalue.h</file>
    <file>simondialogengine_export.h</file>
    <file>staticboundvalue.cpp</file>
    <file>staticboundvalue.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simondialogengine/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simondialogengine/</path>
    <filename>dir_f443551dfb5640a8a56e22d066fe4cb4.html</filename>
    <dir>build/simonlib/simondialogengine/confui/</dir>
    <dir>build/simonlib/simondialogengine/graphicalview/</dir>
    <dir>build/simonlib/simondialogengine/ttsview/</dir>
    <file>moc_dialogcommand.cpp</file>
    <file>moc_dialogstate.cpp</file>
    <file>simondialogengine_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simondstreamer/</name>
    <path>/home/anash/simon/simonsource/simonlib/simondstreamer/</path>
    <filename>dir_0b22668dd3b641291d2962eb37a5a44c.html</filename>
    <file>simondstreamer.cpp</file>
    <file>simondstreamer.h</file>
    <file>simondstreamer_export.h</file>
    <file>simondstreamerclient.cpp</file>
    <file>simondstreamerclient.h</file>
    <file>simonsender.cpp</file>
    <file>simonsender.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simondstreamer/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simondstreamer/</path>
    <filename>dir_62202c692cf5754a63e0b37cdd234932.html</filename>
    <file>moc_simondstreamer.cpp</file>
    <file>moc_simondstreamerclient.cpp</file>
    <file>moc_simonsender.cpp</file>
    <file>simondstreamer_automoc.cpp</file>
    <file>simonsenderadaptor.cpp</file>
    <file>simonsenderadaptor.h</file>
    <file>simonsenderadaptor.moc</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simoninfo/</name>
    <path>/home/anash/simon/simonsource/simonlib/simoninfo/</path>
    <filename>dir_0bf8f8fb22ae69f579e487f466724fbd.html</filename>
    <file>osd.cpp</file>
    <file>osd.h</file>
    <file>simoninfo.cpp</file>
    <file>simoninfo.h</file>
    <file>simoninfo_export.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simoninfo/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simoninfo/</path>
    <filename>dir_d396a78116be3bca9bfdac19dddf3877.html</filename>
    <file>moc_osd.cpp</file>
    <file>simoninfo_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonjsonconnector/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonjsonconnector/</path>
    <filename>dir_966b944e934b833a062fbc6077f57984.html</filename>
    <file>jsonnotificationreceiver.cpp</file>
    <file>jsonnotificationreceiver.h</file>
    <file>simonjsonconnector.cpp</file>
    <file>simonjsonconnector.h</file>
    <file>simonjsonconnector_export.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonjsonconnector/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonjsonconnector/</path>
    <filename>dir_1c0457462161ea69f536eae4323d0bb5.html</filename>
    <file>moc_simonjsonconnector.cpp</file>
    <file>simonjsonconnector_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/</name>
    <path>/home/anash/simon/simonsource/simonlib/</path>
    <filename>dir_7414d2392103bae92d8c05b847ffedf2.html</filename>
    <dir>simonlib/eventsimulation/</dir>
    <dir>simonlib/simonactions/</dir>
    <dir>simonlib/simoncontextadapter/</dir>
    <dir>simonlib/simoncontextdetection/</dir>
    <dir>simonlib/simonddatabaseaccess/</dir>
    <dir>simonlib/simondialogengine/</dir>
    <dir>simonlib/simondstreamer/</dir>
    <dir>simonlib/simoninfo/</dir>
    <dir>simonlib/simonjsonconnector/</dir>
    <dir>simonlib/simonlistcommand/</dir>
    <dir>simonlib/simonlogging/</dir>
    <dir>simonlib/simonmodeltest/</dir>
    <dir>simonlib/simonprogresstracking/</dir>
    <dir>simonlib/simonprotocol/</dir>
    <dir>simonlib/simonrecognitionresult/</dir>
    <dir>simonlib/simonscenariobase/</dir>
    <dir>simonlib/simonscenarios/</dir>
    <dir>simonlib/simonscenarioui/</dir>
    <dir>simonlib/simonsound/</dir>
    <dir>simonlib/simontts/</dir>
    <dir>simonlib/simonuicomponents/</dir>
    <dir>simonlib/simonwav/</dir>
    <dir>simonlib/simonxml/</dir>
    <dir>simonlib/speechmodelcompilation/</dir>
    <dir>simonlib/speechmodelcompilationadapter/</dir>
    <dir>simonlib/sscobjects/</dir>
    <dir>simonlib/sscprotocol/</dir>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/</path>
    <filename>dir_8cfb720d61f532419d3d68555757a8fe.html</filename>
    <dir>build/simonlib/eventsimulation/</dir>
    <dir>build/simonlib/simonactions/</dir>
    <dir>build/simonlib/simoncontextadapter/</dir>
    <dir>build/simonlib/simoncontextdetection/</dir>
    <dir>build/simonlib/simonddatabaseaccess/</dir>
    <dir>build/simonlib/simondialogengine/</dir>
    <dir>build/simonlib/simondstreamer/</dir>
    <dir>build/simonlib/simoninfo/</dir>
    <dir>build/simonlib/simonjsonconnector/</dir>
    <dir>build/simonlib/simonlogging/</dir>
    <dir>build/simonlib/simonmodeltest/</dir>
    <dir>build/simonlib/simonprogresstracking/</dir>
    <dir>build/simonlib/simonrecognitionresult/</dir>
    <dir>build/simonlib/simonscenariobase/</dir>
    <dir>build/simonlib/simonscenarios/</dir>
    <dir>build/simonlib/simonscenarioui/</dir>
    <dir>build/simonlib/simonsound/</dir>
    <dir>build/simonlib/simontts/</dir>
    <dir>build/simonlib/simonuicomponents/</dir>
    <dir>build/simonlib/simonwav/</dir>
    <dir>build/simonlib/simonxml/</dir>
    <dir>build/simonlib/speechmodelcompilation/</dir>
    <dir>build/simonlib/speechmodelcompilationadapter/</dir>
    <dir>build/simonlib/sscobjects/</dir>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonlistcommand/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonlistcommand/</path>
    <filename>dir_c38ba3b9cf80672636b24553d340d48e.html</filename>
    <file>simonlistcommand_export.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonlogging/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonlogging/</path>
    <filename>dir_5adfe17204349b77713740d1c000a76f.html</filename>
    <file>logentry.cpp</file>
    <file>logentry.h</file>
    <file>logger.cpp</file>
    <file>logger.h</file>
    <file>logmanager.cpp</file>
    <file>logmanager.h</file>
    <file>logview.cpp</file>
    <file>logview.h</file>
    <file>simonlogging_export.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonlogging/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonlogging/</path>
    <filename>dir_cc9ba71f5ab025dd04caf07944a808f2.html</filename>
    <file>simonlogging_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonmodelmanagementui/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonmodelmanagementui/</path>
    <filename>dir_b9e0e371954d98be16305a1bff7c1d1f.html</filename>
    <dir>simon/src/simonmodelmanagementui/AddWord/</dir>
    <dir>simon/src/simonmodelmanagementui/ImportDict/</dir>
    <dir>simon/src/simonmodelmanagementui/ImportGrammar/</dir>
    <dir>simon/src/simonmodelmanagementui/ImportTrainingData/</dir>
    <dir>simon/src/simonmodelmanagementui/ImportTrainingTexts/</dir>
    <dir>simon/src/simonmodelmanagementui/MergeTerminals/</dir>
    <dir>simon/src/simonmodelmanagementui/RenameTerminal/</dir>
    <dir>simon/src/simonmodelmanagementui/TrainSamples/</dir>
    <file>deleteworddialog.cpp</file>
    <file>deleteworddialog.h</file>
    <file>dragtableview.cpp</file>
    <file>dragtableview.h</file>
    <file>droplistview.cpp</file>
    <file>droplistview.h</file>
    <file>droplistwidget.cpp</file>
    <file>droplistwidget.h</file>
    <file>editworddialog.cpp</file>
    <file>editworddialog.h</file>
    <file>grammarview.cpp</file>
    <file>grammarview.h</file>
    <file>grammarviewprivate.cpp</file>
    <file>grammarviewprivate.h</file>
    <file>modelmanageruiproxy.cpp</file>
    <file>modelmanageruiproxy.h</file>
    <file>modelsettings.cpp</file>
    <file>modelsettings.h</file>
    <file>plugin_exporter.cpp</file>
    <file>simonmodelmanagementui_export.h</file>
    <file>trainingview.cpp</file>
    <file>trainingview.h</file>
    <file>trainingviewprivate.cpp</file>
    <file>trainingviewprivate.h</file>
    <file>vocabularyview.cpp</file>
    <file>vocabularyview.h</file>
    <file>vocabularyviewprivate.cpp</file>
    <file>vocabularyviewprivate.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simon/src/simonmodelmanagementui/</name>
    <path>/home/anash/simon/simonsource/build/simon/src/simonmodelmanagementui/</path>
    <filename>dir_312918f470e7f0f40eb9b42d78a9d3f2.html</filename>
    <file>moc_addwordintropage.cpp</file>
    <file>moc_addwordrecordpage.cpp</file>
    <file>moc_addwordresolvepage.cpp</file>
    <file>moc_addwordview.cpp</file>
    <file>moc_bompdict.cpp</file>
    <file>moc_dict.cpp</file>
    <file>moc_dragtableview.cpp</file>
    <file>moc_droplistwidget.cpp</file>
    <file>moc_editworddialog.cpp</file>
    <file>moc_grammarview.cpp</file>
    <file>moc_grammarviewprivate.cpp</file>
    <file>moc_importdict.cpp</file>
    <file>moc_importdictbompdownloadpage.cpp</file>
    <file>moc_importdictbomppage.cpp</file>
    <file>moc_importdictintropage.cpp</file>
    <file>moc_importdictjuliuspage.cpp</file>
    <file>moc_importdictplspage.cpp</file>
    <file>moc_importdictselectsourcepage.cpp</file>
    <file>moc_importdictsphinxpage.cpp</file>
    <file>moc_importdictview.cpp</file>
    <file>moc_importdictworkingpage.cpp</file>
    <file>moc_importgrammar.cpp</file>
    <file>moc_importgrammarselectinputpage.cpp</file>
    <file>moc_importgrammarwizard.cpp</file>
    <file>moc_importgrammarworkingpage.cpp</file>
    <file>moc_importlexiconpage.cpp</file>
    <file>moc_importtrainingdata.cpp</file>
    <file>moc_importtrainingdirectory.cpp</file>
    <file>moc_importtrainingdirectoryintropage.cpp</file>
    <file>moc_importtrainingdirectoryworkingpage.cpp</file>
    <file>moc_importtrainingtextaddpage.cpp</file>
    <file>moc_importtrainingtextlocalpage.cpp</file>
    <file>moc_importtrainingtexts.cpp</file>
    <file>moc_importtrainingtextselectsourcepage.cpp</file>
    <file>moc_importtrainingtextworkingpage.cpp</file>
    <file>moc_juliusvocabulary.cpp</file>
    <file>moc_lexicondict.cpp</file>
    <file>moc_mergeterminals.cpp</file>
    <file>moc_mergeterminalsselectterminalspage.cpp</file>
    <file>moc_mergeterminalswizard.cpp</file>
    <file>moc_mergeterminalsworkingpage.cpp</file>
    <file>moc_modelmanageruiproxy.cpp</file>
    <file>moc_modelsettings.cpp</file>
    <file>moc_renameterminal.cpp</file>
    <file>moc_renameterminalselectparameterspage.cpp</file>
    <file>moc_renameterminalwizard.cpp</file>
    <file>moc_renameterminalworkingpage.cpp</file>
    <file>moc_sphinxdict.cpp</file>
    <file>moc_trainingswizard.cpp</file>
    <file>moc_trainingview.cpp</file>
    <file>moc_trainingviewprivate.cpp</file>
    <file>moc_trainsamplepage.cpp</file>
    <file>moc_vocabularyview.cpp</file>
    <file>moc_vocabularyviewprivate.cpp</file>
    <file>moc_xmltrainingtextlist.cpp</file>
    <file>simonmodelmanagementui_automoc.cpp</file>
    <file>simonmodelmanagementuikcm_automoc.cpp</file>
    <file>speechmodelmanagementuiconfiguration.cpp</file>
    <file>speechmodelmanagementuiconfiguration.h</file>
    <file>ui_addwordintropage.h</file>
    <file>ui_editword.h</file>
    <file>ui_grammarview.h</file>
    <file>ui_importdictbompdownloadpage.h</file>
    <file>ui_importdictbomppage.h</file>
    <file>ui_importdictjuliuspage.h</file>
    <file>ui_importdictlexiconpage.h</file>
    <file>ui_importdictplspage.h</file>
    <file>ui_importdictselectsourcepage.h</file>
    <file>ui_importdictsphinxpage.h</file>
    <file>ui_importgrammarworkingpage.h</file>
    <file>ui_importtrainingdataintrodlg.h</file>
    <file>ui_importtrainingdataworkingdlg.h</file>
    <file>ui_importtrainingtextaddpage.h</file>
    <file>ui_importtrainingtextlocalpage.h</file>
    <file>ui_importtrainingtextselectsourcepage.h</file>
    <file>ui_importtrainingtextworkingpage.h</file>
    <file>ui_mergeterminalsselectpage.h</file>
    <file>ui_mergeterminalsworkingpage.h</file>
    <file>ui_modelsettingsdlg.h</file>
    <file>ui_removeword.h</file>
    <file>ui_renameterminalselectparameterspage.h</file>
    <file>ui_renameterminalworkingpage.h</file>
    <file>ui_resolvewordpage.h</file>
    <file>ui_selectinputpage.h</file>
    <file>ui_trainmain.h</file>
    <file>ui_vocabulary.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonmodeltest/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonmodeltest/</path>
    <filename>dir_d35de1626a3683ec8489292083b637cd.html</filename>
    <dir>simonlib/simonmodeltest/test/</dir>
    <file>fileresultmodel.cpp</file>
    <file>fileresultmodel.h</file>
    <file>modeltest.cpp</file>
    <file>modeltest.h</file>
    <file>recognizerresult.cpp</file>
    <file>recognizerresult.h</file>
    <file>simonmodeltest_export.h</file>
    <file>testresult.cpp</file>
    <file>testresult.h</file>
    <file>testresultinstance.cpp</file>
    <file>testresultinstance.h</file>
    <file>testresultleaf.cpp</file>
    <file>testresultleaf.h</file>
    <file>testresultmodel.cpp</file>
    <file>testresultmodel.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonmodeltest/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonmodeltest/</path>
    <filename>dir_800fb9e3ff8dc323257f22ab56430eb7.html</filename>
    <file>moc_fileresultmodel.cpp</file>
    <file>moc_modeltest.cpp</file>
    <file>simonmodeltest_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonoid/</name>
    <path>/home/anash/simon/simonsource/simonoid/</path>
    <filename>dir_86b8c5c0b135c76f29c867ab08059e98.html</filename>
    <file>simonoid.cpp</file>
    <file>simonoid.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonoid/</name>
    <path>/home/anash/simon/simonsource/build/simonoid/</path>
    <filename>dir_f3803ec8c84d84a014b4acf0019a76d8.html</filename>
    <file>plasma_applet_simonoid_automoc.cpp</file>
    <file>simonoid.moc</file>
    <file>ui_config.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonprogresstracking/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonprogresstracking/</path>
    <filename>dir_09c2bd7d728443304d694b840c6bd0e8.html</filename>
    <file>compositeprogresswidget.cpp</file>
    <file>compositeprogresswidget.h</file>
    <file>operation.cpp</file>
    <file>operation.h</file>
    <file>progresswidget.cpp</file>
    <file>progresswidget.h</file>
    <file>simonprogresstracking_export.h</file>
    <file>statusmanager.cpp</file>
    <file>statusmanager.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonprogresstracking/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonprogresstracking/</path>
    <filename>dir_490e43f48a07f5c62229b6ca8e785975.html</filename>
    <file>moc_compositeprogresswidget.cpp</file>
    <file>moc_operation.cpp</file>
    <file>moc_progresswidget.cpp</file>
    <file>moc_statusmanager.cpp</file>
    <file>simonprogresstracking_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonprotocol/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonprotocol/</path>
    <filename>dir_fa9cda5a16558bd1bd3c1da2c8db0b92.html</filename>
    <file>simonprotocol.h</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonrecognitioncontrol/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonrecognitioncontrol/</path>
    <filename>dir_91c0158c8951fbf5a6083e29eca14e5b.html</filename>
    <file>networksettings.cpp</file>
    <file>networksettings.h</file>
    <file>plugin_exporter.cpp</file>
    <file>recognitioncontrol.cpp</file>
    <file>recognitioncontrol.h</file>
    <file>recognitioncontrol_export.h</file>
    <file>synchronisationsettings.cpp</file>
    <file>synchronisationsettings.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simon/src/simonrecognitioncontrol/</name>
    <path>/home/anash/simon/simonsource/build/simon/src/simonrecognitioncontrol/</path>
    <filename>dir_57b0adeface8ae29ec944bd4678ef421.html</filename>
    <file>moc_networksettings.cpp</file>
    <file>moc_recognitioncontrol.cpp</file>
    <file>moc_synchronisationsettings.cpp</file>
    <file>recognitionconfiguration.cpp</file>
    <file>recognitionconfiguration.h</file>
    <file>simonrecognitioncontrol_automoc.cpp</file>
    <file>simonrecognitioncontrolkcm_automoc.cpp</file>
    <file>ui_networksettingsdlg.h</file>
    <file>ui_synchronisationsettings.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonrecognitionresult/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonrecognitionresult/</path>
    <filename>dir_b4c9200da450b3994f23f567e9a14dec.html</filename>
    <file>recognitionresult.cpp</file>
    <file>recognitionresult.h</file>
    <file>simonrecognitionresult_export.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonrecognitionresult/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonrecognitionresult/</path>
    <filename>dir_6149c0143aab5188dec56c2165d034cd.html</filename>
    <file>simonrecognitionresult_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonscenariobase/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonscenariobase/</path>
    <filename>dir_d6c35637f28aa32e61190ffadf21de1f.html</filename>
    <file>scenarioobject.cpp</file>
    <file>scenarioobject.h</file>
    <file>simonscenariobase_export.h</file>
    <file>versionnumber.cpp</file>
    <file>versionnumber.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonscenariobase/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonscenariobase/</path>
    <filename>dir_005f86a006b262efa8036a30be55cdad.html</filename>
    <file>simonscenariobase_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonscenarios/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonscenarios/</path>
    <filename>dir_6543a80f18aec0de65e55092ef2a062d.html</filename>
    <file>action.cpp</file>
    <file>action.h</file>
    <file>actioncollection.cpp</file>
    <file>actioncollection.h</file>
    <file>actioncommandmodel.cpp</file>
    <file>actioncommandmodel.h</file>
    <file>actionmodel.cpp</file>
    <file>actionmodel.h</file>
    <file>activevocabulary.cpp</file>
    <file>activevocabulary.h</file>
    <file>author.cpp</file>
    <file>author.h</file>
    <file>command.cpp</file>
    <file>command.h</file>
    <file>commandconfiguration.cpp</file>
    <file>commandconfiguration.h</file>
    <file>commandlistelements.h</file>
    <file>commandmanager.cpp</file>
    <file>commandmanager.h</file>
    <file>commandparameter.cpp</file>
    <file>commandparameter.h</file>
    <file>createcommandwidget.cpp</file>
    <file>createcommandwidget.h</file>
    <file>createvoiceinterfacecommandwidget.cpp</file>
    <file>createvoiceinterfacecommandwidget.h</file>
    <file>createvoiceinterfacecommandwidgetprivate.cpp</file>
    <file>createvoiceinterfacecommandwidgetprivate.h</file>
    <file>grammar.cpp</file>
    <file>grammar.h</file>
    <file>languagedescriptioncontainer.cpp</file>
    <file>languagedescriptioncontainer.h</file>
    <file>model.cpp</file>
    <file>model.h</file>
    <file>modelmanager.cpp</file>
    <file>modelmanager.h</file>
    <file>promptstable.cpp</file>
    <file>promptstable.h</file>
    <file>scenario.cpp</file>
    <file>scenario.h</file>
    <file>scenariodisplay.cpp</file>
    <file>scenariodisplay.h</file>
    <file>scenariomanager.cpp</file>
    <file>scenariomanager.h</file>
    <file>shadowvocabulary.cpp</file>
    <file>shadowvocabulary.h</file>
    <file>simoncommand.h</file>
    <file>simoncommandpluginbase_export.h</file>
    <file>simonmodelmanagement_export.h</file>
    <file>speechmodel.h</file>
    <file>speechmodelsettings.cpp</file>
    <file>speechmodelsettings.h</file>
    <file>trainingcontainer.cpp</file>
    <file>trainingcontainer.h</file>
    <file>trainingmanager.cpp</file>
    <file>trainingmanager.h</file>
    <file>trainingtext.cpp</file>
    <file>trainingtext.h</file>
    <file>trainingtextcollection.cpp</file>
    <file>trainingtextcollection.h</file>
    <file>vocabulary.cpp</file>
    <file>vocabulary.h</file>
    <file>voiceinterfacecommand.cpp</file>
    <file>voiceinterfacecommand.h</file>
    <file>voiceinterfacecommandtemplate.cpp</file>
    <file>voiceinterfacecommandtemplate.h</file>
    <file>word.cpp</file>
    <file>word.h</file>
    <file>wordlisttype.cpp</file>
    <file>wordlisttype.h</file>
    <file>xmltrainingtext.cpp</file>
    <file>xmltrainingtext.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonscenarios/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonscenarios/</path>
    <filename>dir_fb869a4d1fa7ca0f588a36b2e3779614.html</filename>
    <file>moc_action.cpp</file>
    <file>moc_actionmodel.cpp</file>
    <file>moc_commandconfiguration.cpp</file>
    <file>moc_commandmanager.cpp</file>
    <file>moc_createcommandwidget.cpp</file>
    <file>moc_createvoiceinterfacecommandwidget.cpp</file>
    <file>moc_createvoiceinterfacecommandwidgetprivate.cpp</file>
    <file>moc_modelmanager.cpp</file>
    <file>moc_promptstable.cpp</file>
    <file>moc_scenario.cpp</file>
    <file>moc_scenariomanager.cpp</file>
    <file>moc_scenariotreemodel.cpp</file>
    <file>moc_shadowvocabulary.cpp</file>
    <file>moc_speechmodelsettings.cpp</file>
    <file>moc_trainingmanager.cpp</file>
    <file>simonscenarios_automoc.cpp</file>
    <file>simonscenarioskcm_automoc.cpp</file>
    <file>speechmodelmanagementconfiguration.cpp</file>
    <file>speechmodelmanagementconfiguration.h</file>
    <file>ui_createvoiceinterfacecommandwidget.h</file>
    <file>ui_trainingsettings.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonscenarioui/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonscenarioui/</path>
    <filename>dir_51572a1b6aefef9b61665aca34732779.html</filename>
    <file>newauthor.cpp</file>
    <file>newauthor.h</file>
    <file>newscenario.cpp</file>
    <file>newscenario.h</file>
    <file>scenariomanagementdialog.cpp</file>
    <file>scenariomanagementdialog.h</file>
    <file>simonscenarioui_export.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonscenarioui/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonscenarioui/</path>
    <filename>dir_5f8ebaa35112da0834e3600622c305d5.html</filename>
    <file>moc_newauthor.cpp</file>
    <file>moc_newscenario.cpp</file>
    <file>moc_scenariomanagementdialog.cpp</file>
    <file>simonscenarioui_automoc.cpp</file>
    <file>ui_modifyauthor.h</file>
    <file>ui_modifyscenario.h</file>
    <file>ui_scenariomanagementdlg.h</file>
  </compound>
  <compound kind="dir">
    <name>build/benefit/simonskype/</name>
    <path>/home/anash/simon/simonsource/build/benefit/simonskype/</path>
    <filename>dir_16abb87f92809fb5728c01aa5a67d48c.html</filename>
    <dir>build/benefit/simonskype/src/</dir>
  </compound>
  <compound kind="dir">
    <name>benefit/simonskype/</name>
    <path>/home/anash/simon/simonsource/benefit/simonskype/</path>
    <filename>dir_dafc9895fd11af56fb061a34e8e9d425.html</filename>
    <dir>benefit/simonskype/src/</dir>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonsound/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonsound/</path>
    <filename>dir_1ca0701f7327c52098b255bcb2cb35b9.html</filename>
    <file>devicesettings.cpp</file>
    <file>devicesettings.h</file>
    <file>devicevolumewidget.cpp</file>
    <file>devicevolumewidget.h</file>
    <file>loudnessmetersoundprocessor.cpp</file>
    <file>loudnessmetersoundprocessor.h</file>
    <file>nullrecorderclient.cpp</file>
    <file>nullrecorderclient.h</file>
    <file>postprocessing.cpp</file>
    <file>postprocessing.h</file>
    <file>recwidget.cpp</file>
    <file>recwidget.h</file>
    <file>resamplesoundprocessor.cpp</file>
    <file>resamplesoundprocessor.h</file>
    <file>simonsamples.h</file>
    <file>simonsound.h</file>
    <file>simonsound_export.h</file>
    <file>simonsoundinput.cpp</file>
    <file>simonsoundinput.h</file>
    <file>simonsoundoutput.cpp</file>
    <file>simonsoundoutput.h</file>
    <file>singledevicesettings.cpp</file>
    <file>singledevicesettings.h</file>
    <file>soundbuffer.cpp</file>
    <file>soundbuffer.h</file>
    <file>soundclient.cpp</file>
    <file>soundclient.h</file>
    <file>soundinputbuffer.cpp</file>
    <file>soundinputbuffer.h</file>
    <file>soundinputclient.cpp</file>
    <file>soundinputclient.h</file>
    <file>soundoutputbuffer.cpp</file>
    <file>soundoutputbuffer.h</file>
    <file>soundoutputclient.cpp</file>
    <file>soundoutputclient.h</file>
    <file>soundprocessor.h</file>
    <file>soundserver.cpp</file>
    <file>soundserver.h</file>
    <file>soundsettings.cpp</file>
    <file>soundsettings.h</file>
    <file>trainsamplevolumepage.cpp</file>
    <file>trainsamplevolumepage.h</file>
    <file>vadsoundprocessor.cpp</file>
    <file>vadsoundprocessor.h</file>
    <file>volumewidget.cpp</file>
    <file>volumewidget.h</file>
    <file>wavfilewidget.cpp</file>
    <file>wavfilewidget.h</file>
    <file>wavplayer.cpp</file>
    <file>wavplayer.h</file>
    <file>wavplayerclient.cpp</file>
    <file>wavplayerclient.h</file>
    <file>wavplayersubclient.cpp</file>
    <file>wavplayersubclient.h</file>
    <file>wavrecorder.cpp</file>
    <file>wavrecorder.h</file>
    <file>wavrecorderclient.cpp</file>
    <file>wavrecorderclient.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonsound/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonsound/</path>
    <filename>dir_7a1ab30afec2da848fff36a2e89a548c.html</filename>
    <file>moc_devicesettings.cpp</file>
    <file>moc_devicevolumewidget.cpp</file>
    <file>moc_loudnessmetersoundprocessor.cpp</file>
    <file>moc_nullrecorderclient.cpp</file>
    <file>moc_postprocessing.cpp</file>
    <file>moc_recwidget.cpp</file>
    <file>moc_simonsoundinput.cpp</file>
    <file>moc_simonsoundoutput.cpp</file>
    <file>moc_singledevicesettings.cpp</file>
    <file>moc_soundserver.cpp</file>
    <file>moc_soundsettings.cpp</file>
    <file>moc_vadsoundprocessor.cpp</file>
    <file>moc_volumewidget.cpp</file>
    <file>moc_wavfilewidget.cpp</file>
    <file>moc_wavplayerclient.cpp</file>
    <file>moc_wavplayersubclient.cpp</file>
    <file>moc_wavrecorderclient.cpp</file>
    <file>simonsound_automoc.cpp</file>
    <file>simonsoundkcm_automoc.cpp</file>
    <file>soundconfig.cpp</file>
    <file>soundconfig.h</file>
    <file>ui_deviceconfiguration.h</file>
    <file>ui_devicevolumewidget.h</file>
    <file>ui_postprocessing.h</file>
    <file>ui_prompt.h</file>
    <file>ui_recwidget.h</file>
    <file>ui_singledeviceconfiguration.h</file>
    <file>ui_trainingsettings.h</file>
    <file>ui_trainsamplevolumepage.h</file>
    <file>ui_vad.h</file>
    <file>ui_volumewidget.h</file>
    <file>ui_wavfilewidget.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simontts/</name>
    <path>/home/anash/simon/simonsource/simonlib/simontts/</path>
    <filename>dir_d8d3d584c7f11d391bd0c8609d0ddfe9.html</filename>
    <dir>simonlib/simontts/config/</dir>
    <file>joviettsprovider.cpp</file>
    <file>joviettsprovider.h</file>
    <file>recordedttsprovider.cpp</file>
    <file>recordedttsprovider.h</file>
    <file>recordingset.cpp</file>
    <file>recordingset.h</file>
    <file>recordingsetcollection.cpp</file>
    <file>recordingsetcollection.h</file>
    <file>simontts.cpp</file>
    <file>simontts.h</file>
    <file>simontts_export.h</file>
    <file>simonttsprivate.cpp</file>
    <file>simonttsprivate.h</file>
    <file>simonttsprovider.h</file>
    <file>webservicettsprovider.cpp</file>
    <file>webservicettsprovider.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simontts/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simontts/</path>
    <filename>dir_48b86499912965ea33d4b6907bd20170.html</filename>
    <dir>build/simonlib/simontts/config/</dir>
    <file>moc_recordedttsprovider.cpp</file>
    <file>moc_webservicettsprovider.cpp</file>
    <file>simontts_automoc.cpp</file>
    <file>ttsconfiguration.cpp</file>
    <file>ttsconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonuicomponents/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonuicomponents/</path>
    <filename>dir_a5d82b5058da83d3a58559047972cd69.html</filename>
    <file>addserverconnection.cpp</file>
    <file>addserverconnection.h</file>
    <file>guievents.cpp</file>
    <file>guievents.h</file>
    <file>inlinewidget.cpp</file>
    <file>inlinewidget.h</file>
    <file>inlinewidgetview.cpp</file>
    <file>inlinewidgetview.h</file>
    <file>multikcmview.cpp</file>
    <file>multikcmview.h</file>
    <file>selectionlistview.cpp</file>
    <file>selectionlistview.h</file>
    <file>serveraddressselector.cpp</file>
    <file>serveraddressselector.h</file>
    <file>simonuicomponents_export.h</file>
    <file>simonwizard.cpp</file>
    <file>simonwizard.h</file>
    <file>textlistwidget.cpp</file>
    <file>textlistwidget.h</file>
    <file>trayiconmanager.cpp</file>
    <file>trayiconmanager.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonuicomponents/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonuicomponents/</path>
    <filename>dir_91079ead6bae37a2502b599ea5a1ae4b.html</filename>
    <file>moc_addserverconnection.cpp</file>
    <file>moc_inlinewidget.cpp</file>
    <file>moc_inlinewidgetview.cpp</file>
    <file>moc_multikcmview.cpp</file>
    <file>moc_selectionlistview.cpp</file>
    <file>moc_serveraddressselector.cpp</file>
    <file>moc_textlistwidget.cpp</file>
    <file>moc_trayiconmanager.cpp</file>
    <file>simonuicomponents_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonwav/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonwav/</path>
    <filename>dir_400697f12b1c3d7e975b0d23294b4c52.html</filename>
    <file>simonwav_export.h</file>
    <file>wav.cpp</file>
    <file>wav.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonwav/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonwav/</path>
    <filename>dir_e87abfa55229f2b587508aee455ef47f.html</filename>
    <file>simonwav_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonxml/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonxml/</path>
    <filename>dir_2011aad68db583a1d75df7fe9aea61f1.html</filename>
    <file>simonxml_export.h</file>
    <file>xmldomreader.cpp</file>
    <file>xmldomreader.h</file>
    <file>xmlreader.cpp</file>
    <file>xmlreader.h</file>
    <file>xmlsaxreader.cpp</file>
    <file>xmlsaxreader.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simonxml/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simonxml/</path>
    <filename>dir_a499748e8943893dc738db400aee2356.html</filename>
    <file>moc_xmlreader.cpp</file>
    <file>simonxml_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>benefit/simonskype/src/libskype/skypedbus/</name>
    <path>/home/anash/simon/simonsource/benefit/simonskype/src/libskype/skypedbus/</path>
    <filename>dir_cb73b7ec08b0dcf085a25950bc958fc0.html</filename>
    <file>skypeconnection.cpp</file>
    <file>skypeconnection.h</file>
  </compound>
  <compound kind="dir">
    <name>benefit/speechcal/</name>
    <path>/home/anash/simon/simonsource/benefit/speechcal/</path>
    <filename>dir_3fca5222730018cc08ad81cb1d3d9ed3.html</filename>
    <dir>benefit/speechcal/src/</dir>
  </compound>
  <compound kind="dir">
    <name>simonlib/speechmodelcompilation/</name>
    <path>/home/anash/simon/simonsource/simonlib/speechmodelcompilation/</path>
    <filename>dir_12597430169a17b32231e061e91fb505.html</filename>
    <dir>simonlib/speechmodelcompilation/config/</dir>
    <file>audiocopyconfig.h</file>
    <file>modelcompilationmanager.cpp</file>
    <file>modelcompilationmanager.h</file>
    <file>reestimationconfig.h</file>
    <file>simonmodelcompilationmanagement_export.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/speechmodelcompilation/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/speechmodelcompilation/</path>
    <filename>dir_c0bfa2c776c588955b6f858c54cbb896.html</filename>
    <dir>build/simonlib/speechmodelcompilation/config/</dir>
    <file>moc_modelcompilationmanager.cpp</file>
    <file>simonmodelcompilation_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/speechmodelcompilationadapter/</name>
    <path>/home/anash/simon/simonsource/simonlib/speechmodelcompilationadapter/</path>
    <filename>dir_92d3169e5e86b4da9590b8e6a5b62877.html</filename>
    <file>modelcompilationadapter.cpp</file>
    <file>modelcompilationadapter.h</file>
    <file>modelcompilationadapterhtk.cpp</file>
    <file>modelcompilationadapterhtk.h</file>
    <file>simonmodelcompilationadapter_export.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/speechmodelcompilationadapter/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/speechmodelcompilationadapter/</path>
    <filename>dir_19f76c9add66e2d29a2c86dbd1697ecb.html</filename>
    <file>moc_modelcompilationadapter.cpp</file>
    <file>moc_modelcompilationadapterhtk.cpp</file>
    <file>simonmodelcompilationadapter_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/</path>
    <filename>dir_49b6592d4e3ac26f7deb91f2359ae6fe.html</filename>
    <dir>julius/libsent/src/adin/</dir>
    <dir>julius/libsent/src/anlz/</dir>
    <dir>julius/libsent/src/dfa/</dir>
    <dir>julius/libsent/src/hmminfo/</dir>
    <dir>julius/libsent/src/net/</dir>
    <dir>julius/libsent/src/ngram/</dir>
    <dir>julius/libsent/src/phmm/</dir>
    <dir>julius/libsent/src/util/</dir>
    <dir>julius/libsent/src/voca/</dir>
    <dir>julius/libsent/src/wav2mfcc/</dir>
  </compound>
  <compound kind="dir">
    <name>julius/libjulius/src/</name>
    <path>/home/anash/simon/simonsource/julius/libjulius/src/</path>
    <filename>dir_d04db43c46fb62c827cdb27ab8d4e0bb.html</filename>
    <file>adin-cut.c</file>
    <file>backtrellis.c</file>
    <file>beam.c</file>
    <file>callback.c</file>
    <file>confnet.c</file>
    <file>default.c</file>
    <file>dfa_decode.c</file>
    <file>factoring_sub.c</file>
    <file>gmm.c</file>
    <file>gramlist.c</file>
    <file>graphout.c</file>
    <file>hmm_check.c</file>
    <file>instance.c</file>
    <file>jfunc.c</file>
    <file>m_adin.c</file>
    <file>m_chkparam.c</file>
    <file>m_fusion.c</file>
    <file>m_info.c</file>
    <file>m_jconf.c</file>
    <file>m_options.c</file>
    <file>m_usage.c</file>
    <file>multi-gram.c</file>
    <file>ngram_decode.c</file>
    <file>outprob_style.c</file>
    <file>pass1.c</file>
    <file>plugin.c</file>
    <file>realtime-1stpass.c</file>
    <file>recogmain.c</file>
    <file>search_bestfirst_main.c</file>
    <file>search_bestfirst_v1.c</file>
    <file>search_bestfirst_v2.c</file>
    <file>spsegment.c</file>
    <file>useropt.c</file>
    <file>version.c</file>
    <file>wav2mfcc.c</file>
    <file>wchmm.c</file>
    <file>wchmm_check.c</file>
    <file>word_align.c</file>
  </compound>
  <compound kind="dir">
    <name>build/sscd/src/</name>
    <path>/home/anash/simon/simonsource/build/sscd/src/</path>
    <filename>dir_7616cd8602fe9489b739885c2734b67e.html</filename>
    <file>moc_clientsocket.cpp</file>
    <file>moc_databaseaccess.cpp</file>
    <file>moc_sscdcontrol.cpp</file>
    <file>sscd_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>build/simond/src/</name>
    <path>/home/anash/simon/simonsource/build/simond/src/</path>
    <filename>dir_1db3b7f31832e7412673921e2967aff1.html</filename>
    <file>moc_clientsocket.cpp</file>
    <file>moc_juliuscontrol.cpp</file>
    <file>moc_recognitioncontrol.cpp</file>
    <file>moc_simondcontrol.cpp</file>
    <file>moc_synchronisationmanager.cpp</file>
    <file>simond_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>build/simon/src/</name>
    <path>/home/anash/simon/simonsource/build/simon/src/</path>
    <filename>dir_ca2160d7852f4a97c7f2f843c2d65df2.html</filename>
    <dir>build/simon/src/simonactionsui/</dir>
    <dir>build/simon/src/simonappcore/</dir>
    <dir>build/simon/src/simoncontextui/</dir>
    <dir>build/simon/src/simonmodelmanagementui/</dir>
    <dir>build/simon/src/simonrecognitioncontrol/</dir>
    <file>moc_firstrunbasemodelconfig.cpp</file>
    <file>moc_firstrunscenariosconfig.cpp</file>
    <file>moc_firstrunsimondconfig.cpp</file>
    <file>moc_firstrunsoundconfig.cpp</file>
    <file>moc_firstrunwizard.cpp</file>
    <file>moc_simonview.cpp</file>
    <file>simon_automoc.cpp</file>
    <file>ui_firstrunbasemodelconfig.h</file>
    <file>ui_firstrunscenariosconfig.h</file>
    <file>ui_firstrunsimondconfig.h</file>
    <file>ui_firstrunsoundconfig.h</file>
    <file>ui_simonview.h</file>
  </compound>
  <compound kind="dir">
    <name>build/ksimond/src/</name>
    <path>/home/anash/simon/simonsource/build/ksimond/src/</path>
    <filename>dir_6039faec2ccdfcc4d73fccd56a91cfb5.html</filename>
    <file>ksimond_automoc.cpp</file>
    <file>ksimondconfiguration.cpp</file>
    <file>ksimondconfiguration.h</file>
    <file>moc_ksimondview.cpp</file>
  </compound>
  <compound kind="dir">
    <name>build/benefit/simonskype/src/</name>
    <path>/home/anash/simon/simonsource/build/benefit/simonskype/src/</path>
    <filename>dir_e5321cc000261c1c45ab82d7f6779410.html</filename>
    <file>moc_simonskype.cpp</file>
    <file>simonskype_automoc.cpp</file>
    <file>skype.moc</file>
    <file>skypeadaptor.cpp</file>
    <file>skypeadaptor.h</file>
    <file>skypeadaptor.moc</file>
    <file>skypeconnection.moc</file>
    <file>skypewindow.moc</file>
  </compound>
  <compound kind="dir">
    <name>build/ssc/src/</name>
    <path>/home/anash/simon/simonsource/build/ssc/src/</path>
    <filename>dir_94bf07bad4980e16f1302f23e0792266.html</filename>
    <file>moc_deviceinformationwidget.cpp</file>
    <file>moc_manageinstitutions.cpp</file>
    <file>moc_manageusers.cpp</file>
    <file>moc_modifyuser.cpp</file>
    <file>moc_modifyuserininstitution.cpp</file>
    <file>moc_sendsamplespage.cpp</file>
    <file>moc_sendsampleworker.cpp</file>
    <file>moc_sscdaccess.cpp</file>
    <file>moc_sscview.cpp</file>
    <file>moc_trainingswizard.cpp</file>
    <file>moc_trainsamplepage.cpp</file>
    <file>moc_uploadsamples.cpp</file>
    <file>ssc_automoc.cpp</file>
    <file>sscconfig.cpp</file>
    <file>sscconfig.h</file>
    <file>ui_details.h</file>
    <file>ui_deviceinformation.h</file>
    <file>ui_finduser.h</file>
    <file>ui_institution.h</file>
    <file>ui_main.h</file>
    <file>ui_modifyuserininstitution.h</file>
    <file>ui_uploadsamples.h</file>
  </compound>
  <compound kind="dir">
    <name>build/sam/src/</name>
    <path>/home/anash/simon/simonsource/build/sam/src/</path>
    <filename>dir_c7be104943d2606db1e28721326c59cb.html</filename>
    <file>moc_corpusinformationwidget.cpp</file>
    <file>moc_exporttestresults.cpp</file>
    <file>moc_samview.cpp</file>
    <file>moc_testconfigurationwidget.cpp</file>
    <file>moc_testresultwidget.cpp</file>
    <file>sam_automoc.cpp</file>
    <file>ui_corpusinformation.h</file>
    <file>ui_exporttestresultsdlg.h</file>
    <file>ui_main.h</file>
    <file>ui_testconfiguration.h</file>
    <file>ui_testresult.h</file>
  </compound>
  <compound kind="dir">
    <name>build/afaras/src/</name>
    <path>/home/anash/simon/simonsource/build/afaras/src/</path>
    <filename>dir_f6d47fa4e9a1f5ffcd47a80a099241b6.html</filename>
    <file>afaras_automoc.cpp</file>
    <file>moc_afarasview.cpp</file>
    <file>ui_main.h</file>
  </compound>
  <compound kind="dir">
    <name>sscd/src/</name>
    <path>/home/anash/simon/simonsource/sscd/src/</path>
    <filename>dir_b4cec2006259b5e219c1cfc0ba736b5c.html</filename>
    <file>basedirectory.h</file>
    <file>clientsocket.cpp</file>
    <file>clientsocket.h</file>
    <file>databaseaccess.cpp</file>
    <file>databaseaccess.h</file>
    <file>main.cpp</file>
    <file>mysqlqueries.cpp</file>
    <file>mysqlqueries.h</file>
    <file>sscdcontrol.cpp</file>
    <file>sscdcontrol.h</file>
    <file>sscqueries.cpp</file>
    <file>sscqueries.h</file>
  </compound>
  <compound kind="dir">
    <name>ssc/src/</name>
    <path>/home/anash/simon/simonsource/ssc/src/</path>
    <filename>dir_451f9f3170fba35230d371689231a4fb.html</filename>
    <file>deviceinformationpage.cpp</file>
    <file>deviceinformationpage.h</file>
    <file>deviceinformationwidget.cpp</file>
    <file>deviceinformationwidget.h</file>
    <file>institutionmodel.cpp</file>
    <file>institutionmodel.h</file>
    <file>main.cpp</file>
    <file>manageinstitutions.cpp</file>
    <file>manageinstitutions.h</file>
    <file>manageusers.cpp</file>
    <file>manageusers.h</file>
    <file>modifyuser.cpp</file>
    <file>modifyuser.h</file>
    <file>modifyuserininstitution.cpp</file>
    <file>modifyuserininstitution.h</file>
    <file>sampledataprovider.cpp</file>
    <file>sampledataprovider.h</file>
    <file>sendsamplespage.cpp</file>
    <file>sendsamplespage.h</file>
    <file>sendsampleworker.cpp</file>
    <file>sendsampleworker.h</file>
    <file>sscdaccess.cpp</file>
    <file>sscdaccess.h</file>
    <file>sscview.cpp</file>
    <file>sscview.h</file>
    <file>trainingswizard.cpp</file>
    <file>trainingswizard.h</file>
    <file>trainsampleintropage.cpp</file>
    <file>trainsampleintropage.h</file>
    <file>trainsamplepage.cpp</file>
    <file>trainsamplepage.h</file>
    <file>uploadsamples.cpp</file>
    <file>uploadsamples.h</file>
    <file>usermodel.cpp</file>
    <file>usermodel.h</file>
  </compound>
  <compound kind="dir">
    <name>simond/src/</name>
    <path>/home/anash/simon/simonsource/simond/src/</path>
    <filename>dir_9c0876d2b0375061edc84319fa1ebf27.html</filename>
    <file>clientsocket.cpp</file>
    <file>clientsocket.h</file>
    <file>juliuscontrol.cpp</file>
    <file>juliuscontrol.h</file>
    <file>main.cpp</file>
    <file>recognitioncontrol.cpp</file>
    <file>recognitioncontrol.h</file>
    <file>simondcontrol.cpp</file>
    <file>simondcontrol.h</file>
    <file>synchronisationmanager.cpp</file>
    <file>synchronisationmanager.h</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/</name>
    <path>/home/anash/simon/simonsource/simon/src/</path>
    <filename>dir_29a687267a2b0fb93d1b1964d88d1bbf.html</filename>
    <dir>simon/src/simonactionsui/</dir>
    <dir>simon/src/simonappcore/</dir>
    <dir>simon/src/simoncontextui/</dir>
    <dir>simon/src/simonmodelmanagementui/</dir>
    <dir>simon/src/simonrecognitioncontrol/</dir>
    <file>firstrunbasemodelconfig.cpp</file>
    <file>firstrunbasemodelconfig.h</file>
    <file>firstrunscenariosconfig.cpp</file>
    <file>firstrunscenariosconfig.h</file>
    <file>firstrunsimondconfig.cpp</file>
    <file>firstrunsimondconfig.h</file>
    <file>firstrunsoundconfig.cpp</file>
    <file>firstrunsoundconfig.h</file>
    <file>firstrunwizard.cpp</file>
    <file>firstrunwizard.h</file>
    <file>main.cpp</file>
    <file>simonview.cpp</file>
    <file>simonview.h</file>
  </compound>
  <compound kind="dir">
    <name>sam/src/</name>
    <path>/home/anash/simon/simonsource/sam/src/</path>
    <filename>dir_32467a3b186df60d790da2ec09ec97d7.html</filename>
    <file>accuracydisplay.cpp</file>
    <file>accuracydisplay.h</file>
    <file>carraydata.h</file>
    <file>corpusinformation.cpp</file>
    <file>corpusinformation.h</file>
    <file>corpusinformationwidget.cpp</file>
    <file>corpusinformationwidget.h</file>
    <file>exporttestresults.cpp</file>
    <file>exporttestresults.h</file>
    <file>latexreporttemplateengine.cpp</file>
    <file>latexreporttemplateengine.h</file>
    <file>main.cpp</file>
    <file>qwt_bars_item.cpp</file>
    <file>qwt_bars_item.h</file>
    <file>reportparameters.cpp</file>
    <file>reportparameters.h</file>
    <file>reporttemplateengine.cpp</file>
    <file>reporttemplateengine.h</file>
    <file>samui.cpp</file>
    <file>samui.h</file>
    <file>samview.cpp</file>
    <file>samview.h</file>
    <file>samxmlhelper.cpp</file>
    <file>samxmlhelper.h</file>
    <file>templatevaluelist.cpp</file>
    <file>templatevaluelist.h</file>
    <file>testconfigurationwidget.cpp</file>
    <file>testconfigurationwidget.h</file>
    <file>testresultplotter.cpp</file>
    <file>testresultplotter.h</file>
    <file>testresultwidget.cpp</file>
    <file>testresultwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>ksimond/src/</name>
    <path>/home/anash/simon/simonsource/ksimond/src/</path>
    <filename>dir_753e266b5042965c614f70a1f59f95c6.html</filename>
    <file>ksimondview.cpp</file>
    <file>ksimondview.h</file>
    <file>main.cpp</file>
  </compound>
  <compound kind="dir">
    <name>benefit/speechcal/src/</name>
    <path>/home/anash/simon/simonsource/benefit/speechcal/src/</path>
    <filename>dir_db4afcd384e7b7a9451b6d6bf859ca52.html</filename>
    <file>calendarmodel.cpp</file>
    <file>calendarmodel.h</file>
    <file>main.cpp</file>
    <file>speechcal.cpp</file>
    <file>speechcal.h</file>
    <file>speechcalview.cpp</file>
    <file>speechcalview.h</file>
  </compound>
  <compound kind="dir">
    <name>benefit/simonskype/src/</name>
    <path>/home/anash/simon/simonsource/benefit/simonskype/src/</path>
    <filename>dir_08bcefddef5d0f00f43e3a65092683ec.html</filename>
    <dir>benefit/simonskype/src/libskype/</dir>
    <file>main.cpp</file>
    <file>simonskype.cpp</file>
    <file>simonskype.h</file>
  </compound>
  <compound kind="dir">
    <name>afaras/src/</name>
    <path>/home/anash/simon/simonsource/afaras/src/</path>
    <filename>dir_bd25de501a95e1cff31a244ba4368f17.html</filename>
    <file>afarasview.cpp</file>
    <file>afarasview.h</file>
    <file>main.cpp</file>
  </compound>
  <compound kind="dir">
    <name>build/ssc/</name>
    <path>/home/anash/simon/simonsource/build/ssc/</path>
    <filename>dir_42587e5196662bae1c23e0e6f5382fc0.html</filename>
    <dir>build/ssc/config/</dir>
    <dir>build/ssc/src/</dir>
  </compound>
  <compound kind="dir">
    <name>ssc/</name>
    <path>/home/anash/simon/simonsource/ssc/</path>
    <filename>dir_08c8f9c1b395c059ccc3ca9574b91b13.html</filename>
    <dir>ssc/config/</dir>
    <dir>ssc/src/</dir>
  </compound>
  <compound kind="dir">
    <name>build/sscd/</name>
    <path>/home/anash/simon/simonsource/build/sscd/</path>
    <filename>dir_c9e9de9427ace7428b8bed538d124f0b.html</filename>
    <dir>build/sscd/src/</dir>
  </compound>
  <compound kind="dir">
    <name>sscd/</name>
    <path>/home/anash/simon/simonsource/sscd/</path>
    <filename>dir_9f0362843b3566eff273f12c359b509e.html</filename>
    <dir>sscd/src/</dir>
  </compound>
  <compound kind="dir">
    <name>simonlib/sscobjects/</name>
    <path>/home/anash/simon/simonsource/simonlib/sscobjects/</path>
    <filename>dir_b12a2aed512a8eed283f18ff88e23f8b.html</filename>
    <file>institution.cpp</file>
    <file>institution.h</file>
    <file>language.cpp</file>
    <file>language.h</file>
    <file>microphone.cpp</file>
    <file>microphone.h</file>
    <file>sample.cpp</file>
    <file>sample.h</file>
    <file>soundcard.cpp</file>
    <file>soundcard.h</file>
    <file>sscobject.cpp</file>
    <file>sscobject.h</file>
    <file>sscobjects_export.h</file>
    <file>user.cpp</file>
    <file>user.h</file>
    <file>userininstitution.cpp</file>
    <file>userininstitution.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/sscobjects/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/sscobjects/</path>
    <filename>dir_e8706952617fe97c5da7560ce690b09e.html</filename>
    <file>sscobjects_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/sscprotocol/</name>
    <path>/home/anash/simon/simonsource/simonlib/sscprotocol/</path>
    <filename>dir_8fb6d1afb9f2f257d495283e4993dacb.html</filename>
    <file>sscprotocol.h</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Template/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Template/</path>
    <filename>dir_e0b447232f33f36e5bcc31ccbdfe1eec.html</filename>
    <file>createdialogcommandwidget.cpp</file>
    <file>createdialogcommandwidget.h</file>
    <file>dialogcommand.cpp</file>
    <file>dialogcommand.h</file>
    <file>dialogcommandmanager.cpp</file>
    <file>dialogcommandmanager.h</file>
    <file>dialogconfiguration.cpp</file>
    <file>dialogconfiguration.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simonmodeltest/test/</name>
    <path>/home/anash/simon/simonsource/simonlib/simonmodeltest/test/</path>
    <filename>dir_c9b2004e6ea039f3dd20df988c028631.html</filename>
    <file>testresulttest.cpp</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simondialogengine/tests/</name>
    <path>/home/anash/simon/simonsource/simonlib/simondialogengine/tests/</path>
    <filename>dir_2fcc916a31323e8cdac24e9eb1de1a53.html</filename>
    <file>boundvaluetest.cpp</file>
    <file>dialogavatartest.cpp</file>
    <file>dialogboundvaluestest.cpp</file>
    <file>dialogcommandtest.cpp</file>
    <file>dialogmultiplestatetextstest.cpp</file>
    <file>dialogstatetest.cpp</file>
    <file>dialogtemplateoptionstest.cpp</file>
    <file>dialogtextparsertest.cpp</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/Dialog/tests/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/Dialog/tests/</path>
    <filename>dir_4bd00c0d34a4323f6fd80449bc7c12ac.html</filename>
    <file>dialogtest.cpp</file>
  </compound>
  <compound kind="dir">
    <name>plugins/Commands/TextMacro/</name>
    <path>/home/anash/simon/simonsource/plugins/Commands/TextMacro/</path>
    <filename>dir_67668b71595f594fb38648332c004b0f.html</filename>
    <file>createtextmacrocommandwidget.cpp</file>
    <file>createtextmacrocommandwidget.h</file>
    <file>textmacrocommand.cpp</file>
    <file>textmacrocommand.h</file>
    <file>textmacrocommandmanager.cpp</file>
    <file>textmacrocommandmanager.h</file>
  </compound>
  <compound kind="dir">
    <name>build/plugins/Commands/TextMacro/</name>
    <path>/home/anash/simon/simonsource/build/plugins/Commands/TextMacro/</path>
    <filename>dir_7dce7d836570bd008f3833d0af41fd56.html</filename>
    <file>moc_createtextmacrocommandwidget.cpp</file>
    <file>moc_textmacrocommandmanager.cpp</file>
    <file>simontextmacrocommandplugin_automoc.cpp</file>
    <file>ui_createtextmacrocommandwidget.h</file>
  </compound>
  <compound kind="dir">
    <name>simon/src/simonmodelmanagementui/TrainSamples/</name>
    <path>/home/anash/simon/simonsource/simon/src/simonmodelmanagementui/TrainSamples/</path>
    <filename>dir_cb8f0a168dbd2e45d8780bc1b8592d1c.html</filename>
    <file>trainingswizard.cpp</file>
    <file>trainingswizard.h</file>
    <file>trainsampleintropage.cpp</file>
    <file>trainsampleintropage.h</file>
    <file>trainsamplepage.cpp</file>
    <file>trainsamplepage.h</file>
  </compound>
  <compound kind="dir">
    <name>simonlib/simondialogengine/ttsview/</name>
    <path>/home/anash/simon/simonsource/simonlib/simondialogengine/ttsview/</path>
    <filename>dir_190e8bec1f24e5e01017f40755480325.html</filename>
    <file>simondialogenginettsview_export.h</file>
    <file>ttsdialogview.cpp</file>
    <file>ttsdialogview.h</file>
  </compound>
  <compound kind="dir">
    <name>build/simonlib/simondialogengine/ttsview/</name>
    <path>/home/anash/simon/simonsource/build/simonlib/simondialogengine/ttsview/</path>
    <filename>dir_511f90f461d0a8315657013bb072325e.html</filename>
    <file>simondialogenginettsview_automoc.cpp</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/util/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/util/</path>
    <filename>dir_d14109917c84a7be87faf4b593b4f4e3.html</filename>
    <file>aptree.c</file>
    <file>confout.c</file>
    <file>endian.c</file>
    <file>gzfile.c</file>
    <file>jlog.c</file>
    <file>mybmalloc.c</file>
    <file>mymalloc.c</file>
    <file>mystrtok.c</file>
    <file>ptree.c</file>
    <file>qsort.c</file>
    <file>readfile.c</file>
    <file>strcasecmp.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/voca/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/voca/</path>
    <filename>dir_11639fcff5ac3550c279a405c5f22cfc.html</filename>
    <file>init_voca.c</file>
    <file>voca_load_htkdict.c</file>
    <file>voca_load_wordlist.c</file>
    <file>voca_lookup.c</file>
    <file>voca_malloc.c</file>
    <file>voca_util.c</file>
  </compound>
  <compound kind="dir">
    <name>julius/libsent/src/wav2mfcc/</name>
    <path>/home/anash/simon/simonsource/julius/libsent/src/wav2mfcc/</path>
    <filename>dir_6bf4013dc97d6d4b0985428750295377.html</filename>
    <file>mfcc-core.c</file>
    <file>para.c</file>
    <file>ss.c</file>
    <file>wav2mfcc-buffer.c</file>
    <file>wav2mfcc-pipe.c</file>
  </compound>
</tagfile>
