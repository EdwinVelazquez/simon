#############################################################################
# Makefile for building: ImportGrammar
# Generated by qmake (2.01a) (Qt 4.4.0) on: So Mai 18 16:44:46 2008
# Project:  ImportGrammar.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile ImportGrammar.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -march=pentium-m -fomit-frame-pointer -pipe -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -march=pentium-m -fomit-frame-pointer -pipe -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/qt4 -lQtGui -L/usr/lib/qt4 -L/usr/X11R6/lib -lpng -lSM -lICE -lXrender -lXrandr -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -lrt -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = importgrammar.cpp \
		importgrammarselectfilespage.cpp \
		importgrammarwizard.cpp \
		importgrammarworkingpage.cpp moc_importgrammar.cpp \
		moc_importgrammarselectfilespage.cpp \
		moc_importgrammarwizard.cpp \
		moc_importgrammarworkingpage.cpp
OBJECTS       = importgrammar.o \
		importgrammarselectfilespage.o \
		importgrammarwizard.o \
		importgrammarworkingpage.o \
		moc_importgrammar.o \
		moc_importgrammarselectfilespage.o \
		moc_importgrammarwizard.o \
		moc_importgrammarworkingpage.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		ImportGrammar.pro
QMAKE_TARGET  = ImportGrammar
DESTDIR       = 
TARGET        = ImportGrammar

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_importgrammardescriptionpage.h ui_selectfilestoreadpage.h ui_importgrammarworkingpage.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: ImportGrammar.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/libQtGui.prl \
		/usr/lib/qt4/libQtCore.prl
	$(QMAKE) -unix -o Makefile ImportGrammar.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/qt4/libQtGui.prl:
/usr/lib/qt4/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile ImportGrammar.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/ImportGrammar1.0.0 || $(MKDIR) .tmp/ImportGrammar1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/ImportGrammar1.0.0/ && $(COPY_FILE) --parents importgrammar.h importgrammarselectfilespage.h importgrammarwizard.h importgrammarworkingpage.h .tmp/ImportGrammar1.0.0/ && $(COPY_FILE) --parents importgrammar.cpp importgrammarselectfilespage.cpp importgrammarwizard.cpp importgrammarworkingpage.cpp .tmp/ImportGrammar1.0.0/ && $(COPY_FILE) --parents importgrammardescriptionpage.ui selectfilestoreadpage.ui importgrammarworkingpage.ui .tmp/ImportGrammar1.0.0/ && (cd `dirname .tmp/ImportGrammar1.0.0` && $(TAR) ImportGrammar1.0.0.tar ImportGrammar1.0.0 && $(COMPRESS) ImportGrammar1.0.0.tar) && $(MOVE) `dirname .tmp/ImportGrammar1.0.0`/ImportGrammar1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/ImportGrammar1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_importgrammar.cpp moc_importgrammarselectfilespage.cpp moc_importgrammarwizard.cpp moc_importgrammarworkingpage.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_importgrammar.cpp moc_importgrammarselectfilespage.cpp moc_importgrammarwizard.cpp moc_importgrammarworkingpage.cpp
moc_importgrammar.cpp: importgrammar.h
	/usr/bin/moc $(DEFINES) $(INCPATH) importgrammar.h -o moc_importgrammar.cpp

moc_importgrammarselectfilespage.cpp: ui_selectfilestoreadpage.h \
		importgrammarselectfilespage.h
	/usr/bin/moc $(DEFINES) $(INCPATH) importgrammarselectfilespage.h -o moc_importgrammarselectfilespage.cpp

moc_importgrammarwizard.cpp: importgrammarwizard.h
	/usr/bin/moc $(DEFINES) $(INCPATH) importgrammarwizard.h -o moc_importgrammarwizard.cpp

moc_importgrammarworkingpage.cpp: ui_importgrammarworkingpage.h \
		importgrammarworkingpage.h
	/usr/bin/moc $(DEFINES) $(INCPATH) importgrammarworkingpage.h -o moc_importgrammarworkingpage.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_importgrammardescriptionpage.h ui_selectfilestoreadpage.h ui_importgrammarworkingpage.h
compiler_uic_clean:
	-$(DEL_FILE) ui_importgrammardescriptionpage.h ui_selectfilestoreadpage.h ui_importgrammarworkingpage.h
ui_importgrammardescriptionpage.h: importgrammardescriptionpage.ui
	/usr/bin/uic importgrammardescriptionpage.ui -o ui_importgrammardescriptionpage.h

ui_selectfilestoreadpage.h: selectfilestoreadpage.ui
	/usr/bin/uic selectfilestoreadpage.ui -o ui_selectfilestoreadpage.h

ui_importgrammarworkingpage.h: importgrammarworkingpage.ui
	/usr/bin/uic importgrammarworkingpage.ui -o ui_importgrammarworkingpage.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

importgrammar.o: importgrammar.cpp importgrammar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o importgrammar.o importgrammar.cpp

importgrammarselectfilespage.o: importgrammarselectfilespage.cpp importgrammarselectfilespage.h \
		ui_selectfilestoreadpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o importgrammarselectfilespage.o importgrammarselectfilespage.cpp

importgrammarwizard.o: importgrammarwizard.cpp importgrammarwizard.h \
		importgrammarselectfilespage.h \
		ui_selectfilestoreadpage.h \
		importgrammarworkingpage.h \
		ui_importgrammarworkingpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o importgrammarwizard.o importgrammarwizard.cpp

importgrammarworkingpage.o: importgrammarworkingpage.cpp importgrammarworkingpage.h \
		ui_importgrammarworkingpage.h \
		importgrammar.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o importgrammarworkingpage.o importgrammarworkingpage.cpp

moc_importgrammar.o: moc_importgrammar.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_importgrammar.o moc_importgrammar.cpp

moc_importgrammarselectfilespage.o: moc_importgrammarselectfilespage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_importgrammarselectfilespage.o moc_importgrammarselectfilespage.cpp

moc_importgrammarwizard.o: moc_importgrammarwizard.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_importgrammarwizard.o moc_importgrammarwizard.cpp

moc_importgrammarworkingpage.o: moc_importgrammarworkingpage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_importgrammarworkingpage.o moc_importgrammarworkingpage.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

