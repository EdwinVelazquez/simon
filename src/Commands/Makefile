#############################################################################
# Makefile for building: Commands
# Generated by qmake (2.01a) (Qt 4.4.0) on: So Mai 18 16:22:39 2008
# Project:  Commands.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile Commands.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -march=pentium-m -fomit-frame-pointer -pipe -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -march=pentium-m -fomit-frame-pointer -pipe -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I../SimonLib/SpeechGUI -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/qt4 -lQtXml -L/usr/lib/qt4 -lQtGui -L/usr/X11R6/lib -lpng -lSM -lICE -lXrender -lXrandr -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -lrt -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = runlinuxbackend.cpp \
		newcommand.cpp \
		runapplicationview.cpp \
		runcommand.cpp \
		xmlcommand.cpp moc_newcommand.cpp \
		moc_runapplicationview.cpp
OBJECTS       = runlinuxbackend.o \
		newcommand.o \
		runapplicationview.o \
		runcommand.o \
		xmlcommand.o \
		moc_newcommand.o \
		moc_runapplicationview.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		Commands.pro
QMAKE_TARGET  = Commands
DESTDIR       = 
TARGET        = Commands

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_modifycommands.h ui_rundialog.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Commands.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/libQtXml.prl \
		/usr/lib/qt4/libQtCore.prl \
		/usr/lib/qt4/libQtGui.prl
	$(QMAKE) -unix -o Makefile Commands.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/qt4/libQtXml.prl:
/usr/lib/qt4/libQtCore.prl:
/usr/lib/qt4/libQtGui.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile Commands.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Commands1.0.0 || $(MKDIR) .tmp/Commands1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Commands1.0.0/ && $(COPY_FILE) --parents runlinuxbackend.h command.h newcommand.h runapplicationview.h runbackend.h runcommand.h xmlcommand.h .tmp/Commands1.0.0/ && $(COPY_FILE) --parents runlinuxbackend.cpp newcommand.cpp runapplicationview.cpp runcommand.cpp xmlcommand.cpp .tmp/Commands1.0.0/ && $(COPY_FILE) --parents modifycommands.ui rundialog.ui .tmp/Commands1.0.0/ && (cd `dirname .tmp/Commands1.0.0` && $(TAR) Commands1.0.0.tar Commands1.0.0 && $(COMPRESS) Commands1.0.0.tar) && $(MOVE) `dirname .tmp/Commands1.0.0`/Commands1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Commands1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_newcommand.cpp moc_runapplicationview.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_newcommand.cpp moc_runapplicationview.cpp
moc_newcommand.cpp: ui_modifycommands.h \
		../SimonLib/ShortcutButton/selectshortcutbutton.h \
		newcommand.h
	/usr/bin/moc $(DEFINES) $(INCPATH) newcommand.h -o moc_newcommand.cpp

moc_runapplicationview.cpp: command.h \
		ui_rundialog.h \
		runapplicationview.h
	/usr/bin/moc $(DEFINES) $(INCPATH) runapplicationview.h -o moc_runapplicationview.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_modifycommands.h ui_rundialog.h
compiler_uic_clean:
	-$(DEL_FILE) ui_modifycommands.h ui_rundialog.h
ui_modifycommands.h: modifycommands.ui \
		../SimonLib/ShortcutButton/selectshortcutbutton.h
	/usr/bin/uic modifycommands.ui -o ui_modifycommands.h

ui_rundialog.h: rundialog.ui
	/usr/bin/uic rundialog.ui -o ui_rundialog.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

runlinuxbackend.o: runlinuxbackend.cpp runlinuxbackend.h \
		runbackend.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o runlinuxbackend.o runlinuxbackend.cpp

newcommand.o: newcommand.cpp newcommand.h \
		ui_modifycommands.h \
		../SimonLib/ShortcutButton/selectshortcutbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o newcommand.o newcommand.cpp

runapplicationview.o: runapplicationview.cpp runapplicationview.h \
		command.h \
		ui_rundialog.h \
		../SimonLib/Settings/settings.h \
		../SimonLib/SimonInfo/simoninfo.h \
		runcommand.h \
		newcommand.h \
		ui_modifycommands.h \
		../SimonLib/ShortcutButton/selectshortcutbutton.h \
		../SimonLib/WindowsLib/windowsresourcehandler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o runapplicationview.o runapplicationview.cpp

runcommand.o: runcommand.cpp runcommand.h \
		command.h \
		../SimonLib/Logging/logger.h \
		runlinuxbackend.h \
		runbackend.h \
		runwindowsbackend.h \
		xmlcommand.h \
		../SimonLib/XML/xmldomreader.h \
		../SimonLib/XML/xmlreader.h \
		../SimonLib/Settings/settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o runcommand.o runcommand.cpp

xmlcommand.o: xmlcommand.cpp xmlcommand.h \
		command.h \
		../SimonLib/XML/xmldomreader.h \
		../SimonLib/XML/xmlreader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xmlcommand.o xmlcommand.cpp

moc_newcommand.o: moc_newcommand.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_newcommand.o moc_newcommand.cpp

moc_runapplicationview.o: moc_runapplicationview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_runapplicationview.o moc_runapplicationview.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

