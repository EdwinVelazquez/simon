#############################################################################
# Makefile for building: bin/simon
# Generated by qmake (2.01a) (Qt 4.2.2) on: So Feb 4 20:29:27 2007
# Project:  src.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
LEX           = flex
YACC          = yacc
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -march=pentium-m -pipe -fno-ident -Wall -W -D_REENTRANT  $(DEFINES)
CXXFLAGS      = -pipe -O2 -march=pentium-m -pipe -fno-ident -Wall -W -D_REENTRANT  $(DEFINES)
LEXFLAGS      = 
YACCFLAGS     = -d
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/alsa -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/qt4 -lQtGui -L/usr/lib/mysql -L/usr/lib/alsa-lib -L/usr/lib/qt4 -L/usr/lib -lpng -lSM -lICE -lXrender -lXrandr -lXfixes -lXcursor -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -ldl -lpthread -lasound
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		simonview.cpp \
		addwordview.cpp \
		simoncontrol.cpp \
		simoninfo.cpp \
		wordlistview.cpp \
		trainingview.cpp \
		juliuscontrol.cpp \
		wordlistmanager.cpp \
		alsabackend.cpp \
		directsoundbackend.cpp \
		miccontrol.cpp \
		modelmanager.cpp \
		runcommand.cpp \
		trainingmanager.cpp \
		trainingtext.cpp \
		trayiconmanager.cpp \
		osd.cpp \
		dragtablewidget.cpp \
		droplistwidget.cpp \
		runapplicationview.cpp \
		runlinuxbackend.cpp moc_simonview.cpp \
		moc_addwordview.cpp \
		moc_wordlistview.cpp \
		moc_juliuscontrol.cpp \
		moc_trayiconmanager.cpp \
		moc_osd.cpp \
		moc_dragtablewidget.cpp \
		moc_droplistwidget.cpp \
		moc_runapplicationview.cpp
OBJECTS       = main.o \
		simonview.o \
		addwordview.o \
		simoncontrol.o \
		simoninfo.o \
		wordlistview.o \
		trainingview.o \
		juliuscontrol.o \
		wordlistmanager.o \
		alsabackend.o \
		directsoundbackend.o \
		miccontrol.o \
		modelmanager.o \
		runcommand.o \
		trainingmanager.o \
		trainingtext.o \
		trayiconmanager.o \
		osd.o \
		dragtablewidget.o \
		droplistwidget.o \
		runapplicationview.o \
		runlinuxbackend.o \
		moc_simonview.o \
		moc_addwordview.o \
		moc_wordlistview.o \
		moc_juliuscontrol.o \
		moc_trayiconmanager.o \
		moc_osd.o \
		moc_dragtablewidget.o \
		moc_droplistwidget.o \
		moc_runapplicationview.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		src.pro
QMAKE_TARGET  = simon
DESTDIR       = bin/
TARGET        = bin/simon

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_main.h ui_addwordspell.h ui_wordlist.h ui_rundialog.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) bin/ || $(MKDIR) bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: src.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/libQtGui.prl \
		/usr/lib/qt4/libQtCore.prl
	$(QMAKE) -unix -o Makefile src.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/lib/qt4/libQtGui.prl:
/usr/lib/qt4/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/simon1.0.0 || $(MKDIR) .tmp/simon1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/simon1.0.0/ && $(COPY_FILE) --parents simonview.h addwordview.h simoncontrol.h simoninfo.h wordlistview.h trainingview.h juliuscontrol.h wordlistmanager.h alsabackend.h command.h directsoundbackend.h miccontrol.h modelmanager.h runcommand.h trainingmanager.h trainingtext.h soundbackend.h word.h trayiconmanager.h osd.h dragtablewidget.h droplistwidget.h runapplicationview.h runlinuxbackend.h runbackend.h .tmp/simon1.0.0/ && $(COPY_FILE) --parents main.cpp simonview.cpp addwordview.cpp simoncontrol.cpp simoninfo.cpp wordlistview.cpp trainingview.cpp juliuscontrol.cpp wordlistmanager.cpp alsabackend.cpp directsoundbackend.cpp miccontrol.cpp modelmanager.cpp runcommand.cpp trainingmanager.cpp trainingtext.cpp trayiconmanager.cpp osd.cpp dragtablewidget.cpp droplistwidget.cpp runapplicationview.cpp runlinuxbackend.cpp .tmp/simon1.0.0/ && $(COPY_FILE) --parents ui/main.ui ui/addwordspell.ui ui/wordlist.ui ui/rundialog.ui .tmp/simon1.0.0/ && (cd `dirname .tmp/simon1.0.0` && $(TAR) simon1.0.0.tar simon1.0.0 && $(COMPRESS) simon1.0.0.tar) && $(MOVE) `dirname .tmp/simon1.0.0`/simon1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/simon1.0.0


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


/usr/bin/moc:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_simonview.cpp moc_addwordview.cpp moc_wordlistview.cpp moc_juliuscontrol.cpp moc_trayiconmanager.cpp moc_osd.cpp moc_dragtablewidget.cpp moc_droplistwidget.cpp moc_runapplicationview.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_simonview.cpp moc_addwordview.cpp moc_wordlistview.cpp moc_juliuscontrol.cpp moc_trayiconmanager.cpp moc_osd.cpp moc_dragtablewidget.cpp moc_droplistwidget.cpp moc_runapplicationview.cpp
moc_simonview.cpp: simoncontrol.h \
		addwordview.h \
		simoninfo.h \
		osd.h \
		ui_addwordspell.h \
		runapplicationview.h \
		ui_rundialog.h \
		runcommand.h \
		command.h \
		runbackend.h \
		runlinuxbackend.h \
		trayiconmanager.h \
		wordlistview.h \
		word.h \
		wordlistmanager.h \
		dragtablewidget.h \
		droplistwidget.h \
		ui_wordlist.h \
		ui_main.h \
		simonview.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) simonview.h -o moc_simonview.cpp

moc_addwordview.cpp: simoninfo.h \
		osd.h \
		ui_addwordspell.h \
		addwordview.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) addwordview.h -o moc_addwordview.cpp

moc_wordlistview.cpp: word.h \
		wordlistmanager.h \
		dragtablewidget.h \
		simoninfo.h \
		osd.h \
		droplistwidget.h \
		addwordview.h \
		ui_addwordspell.h \
		ui_wordlist.h \
		wordlistview.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) wordlistview.h -o moc_wordlistview.cpp

moc_juliuscontrol.cpp: juliuscontrol.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) juliuscontrol.h -o moc_juliuscontrol.cpp

moc_trayiconmanager.cpp: trayiconmanager.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) trayiconmanager.h -o moc_trayiconmanager.cpp

moc_osd.cpp: osd.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) osd.h -o moc_osd.cpp

moc_dragtablewidget.cpp: simoninfo.h \
		osd.h \
		dragtablewidget.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) dragtablewidget.h -o moc_dragtablewidget.cpp

moc_droplistwidget.cpp: simoninfo.h \
		osd.h \
		droplistwidget.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) droplistwidget.h -o moc_droplistwidget.cpp

moc_runapplicationview.cpp: simoninfo.h \
		osd.h \
		ui_rundialog.h \
		runcommand.h \
		command.h \
		runbackend.h \
		runlinuxbackend.h \
		runapplicationview.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) runapplicationview.h -o moc_runapplicationview.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_main.h ui_addwordspell.h ui_wordlist.h ui_rundialog.h
compiler_uic_clean:
	-$(DEL_FILE) ui_main.h ui_addwordspell.h ui_wordlist.h ui_rundialog.h
ui_main.h: ui/main.ui
	/usr/bin/uic ui/main.ui -o ui_main.h

ui_addwordspell.h: ui/addwordspell.ui
	/usr/bin/uic ui/addwordspell.ui -o ui_addwordspell.h

ui_wordlist.h: ui/wordlist.ui
	/usr/bin/uic ui/wordlist.ui -o ui_wordlist.h

ui_rundialog.h: ui/rundialog.ui
	/usr/bin/uic ui/rundialog.ui -o ui_rundialog.h

compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 

####### Compile

main.o: main.cpp simonview.h \
		simoncontrol.h \
		addwordview.h \
		simoninfo.h \
		osd.h \
		ui_addwordspell.h \
		runapplicationview.h \
		ui_rundialog.h \
		runcommand.h \
		command.h \
		runbackend.h \
		runlinuxbackend.h \
		trayiconmanager.h \
		wordlistview.h \
		word.h \
		wordlistmanager.h \
		dragtablewidget.h \
		droplistwidget.h \
		ui_wordlist.h \
		ui_main.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

simonview.o: simonview.cpp simonview.h \
		simoncontrol.h \
		addwordview.h \
		simoninfo.h \
		osd.h \
		ui_addwordspell.h \
		runapplicationview.h \
		ui_rundialog.h \
		runcommand.h \
		command.h \
		runbackend.h \
		runlinuxbackend.h \
		trayiconmanager.h \
		wordlistview.h \
		word.h \
		wordlistmanager.h \
		dragtablewidget.h \
		droplistwidget.h \
		ui_wordlist.h \
		ui_main.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simonview.o simonview.cpp

addwordview.o: addwordview.cpp addwordview.h \
		simoninfo.h \
		osd.h \
		ui_addwordspell.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o addwordview.o addwordview.cpp

simoncontrol.o: simoncontrol.cpp simoncontrol.h \
		addwordview.h \
		simoninfo.h \
		osd.h \
		ui_addwordspell.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simoncontrol.o simoncontrol.cpp

simoninfo.o: simoninfo.cpp simoninfo.h \
		osd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simoninfo.o simoninfo.cpp

wordlistview.o: wordlistview.cpp wordlistview.h \
		word.h \
		wordlistmanager.h \
		dragtablewidget.h \
		simoninfo.h \
		osd.h \
		droplistwidget.h \
		addwordview.h \
		ui_addwordspell.h \
		ui_wordlist.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wordlistview.o wordlistview.cpp

trainingview.o: trainingview.cpp trainingview.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trainingview.o trainingview.cpp

juliuscontrol.o: juliuscontrol.cpp juliuscontrol.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o juliuscontrol.o juliuscontrol.cpp

wordlistmanager.o: wordlistmanager.cpp wordlistmanager.h \
		word.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wordlistmanager.o wordlistmanager.cpp

alsabackend.o: alsabackend.cpp alsabackend.h \
		soundbackend.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o alsabackend.o alsabackend.cpp

directsoundbackend.o: directsoundbackend.cpp directsoundbackend.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o directsoundbackend.o directsoundbackend.cpp

miccontrol.o: miccontrol.cpp miccontrol.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o miccontrol.o miccontrol.cpp

modelmanager.o: modelmanager.cpp modelmanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o modelmanager.o modelmanager.cpp

runcommand.o: runcommand.cpp runcommand.h \
		command.h \
		runbackend.h \
		runlinuxbackend.h \
		simoninfo.h \
		osd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o runcommand.o runcommand.cpp

trainingmanager.o: trainingmanager.cpp trainingmanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trainingmanager.o trainingmanager.cpp

trainingtext.o: trainingtext.cpp trainingtext.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trainingtext.o trainingtext.cpp

trayiconmanager.o: trayiconmanager.cpp trayiconmanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trayiconmanager.o trayiconmanager.cpp

osd.o: osd.cpp osd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o osd.o osd.cpp

dragtablewidget.o: dragtablewidget.cpp dragtablewidget.h \
		simoninfo.h \
		osd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dragtablewidget.o dragtablewidget.cpp

droplistwidget.o: droplistwidget.cpp droplistwidget.h \
		simoninfo.h \
		osd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o droplistwidget.o droplistwidget.cpp

runapplicationview.o: runapplicationview.cpp runapplicationview.h \
		simoninfo.h \
		osd.h \
		ui_rundialog.h \
		runcommand.h \
		command.h \
		runbackend.h \
		runlinuxbackend.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o runapplicationview.o runapplicationview.cpp

runlinuxbackend.o: runlinuxbackend.cpp runlinuxbackend.h \
		runbackend.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o runlinuxbackend.o runlinuxbackend.cpp

moc_simonview.o: moc_simonview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_simonview.o moc_simonview.cpp

moc_addwordview.o: moc_addwordview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_addwordview.o moc_addwordview.cpp

moc_wordlistview.o: moc_wordlistview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_wordlistview.o moc_wordlistview.cpp

moc_juliuscontrol.o: moc_juliuscontrol.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_juliuscontrol.o moc_juliuscontrol.cpp

moc_trayiconmanager.o: moc_trayiconmanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_trayiconmanager.o moc_trayiconmanager.cpp

moc_osd.o: moc_osd.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_osd.o moc_osd.cpp

moc_dragtablewidget.o: moc_dragtablewidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dragtablewidget.o moc_dragtablewidget.cpp

moc_droplistwidget.o: moc_droplistwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_droplistwidget.o moc_droplistwidget.cpp

moc_runapplicationview.o: moc_runapplicationview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_runapplicationview.o moc_runapplicationview.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

